artifact_id,status_id,status_name,priority,submitter_id,submitter_name,assigned_to_id,assigned_to_name,open_date,close_date,last_modified_date,summary,details,_votes,_voters,_votage,"Machine Architecture","Operating System","Component","Resolution","Severity","OS Version","SML/NJ Version","Keywords","URL","Transcript (of reproduction)","Source (for reproduction)",comments
30,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2009-08-31 21:45","2009-09-14 14:36","2009-09-14 14:36","sml/nj  110.70 pre-built executable does not run under OX X 10.6 Snow Leopard","When sml is started from the command line, it prints
\""sml: unable to determine architecture/operating system\""
... and exits.

This same binary worked under OS X 10.5
Submitted via web form by Roy Lowrance <roy.lowrance@gmail.com>
",0,0,0,"Other","Generic Unix","Other","Fixed","Critical","OS X 10.6","110.70","","","",""," *** 2009-09-14 14:36 --- David MacQueen --- Fixed in 110.71. ~  *** 2009-09-14 12:50 --- David MacQueen --- In the file config/_arch-n-opsys  (and the generated file bin/.arch-n-opsys) the line ~  ~ 	  10*) OPSYS=darwin;  HEAP_OPSYS=darwin ;; # MacOS X 10.6 ~  ~ needs to be inserted after line 65.  This adds a case under darwin/x86 for Snow Leopard, for which uname -r returns ""10.0.0""."
31,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2009-09-10 11:29","2009-09-14 14:20","2009-09-14 14:20","SML/NJ 110.70 doesn't build under Mac OS/X Snow Leopard","SML/NJ trunk doesn't compile under Mac OS/X 10.6 ""Snow Leopard"".

The makefile in base/runtime/objs/mk.x86-darwin defines _NONSTD_SOURCE.
The default gcc code generation for 10.6 is x86_64, which is incompatible with the _NONSTD_SOURCE define,
but even when setting the code generation to 32-bit (via adding -m32 flag to makefile),
the build fails somewhat later in the build process stating that:
cc -ansi -c -g -O2 -D_NONSTD_SOURCE -m32 -DHOST_X86 -DTARGET_X86 -DOPSYS_UNIX -DOPSYS_DARWIN -DOPSYS_MACOS_10_2 -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../mach-dep/unix-fault.c
/usr/include/ucontext.h:42:2: error: #error ucontext routines are deprecated, and require _XOPEN_SOURCE to be defined



Submitted via web form by Peter Clark <pclark@umn.edu>
",0,0,0,"x86","MacOS X","Compiler","None","Critical","10.6","110.70","darwin10, snow leopard","","[11:25:59] Air:StandardML$ ./config/install.sh
./config/install.sh: Using shell /bin/sh.
./config/install.sh: SML root is /Users/pclark/Projects/StandardML.
./config/install.sh: Installation directory is /Users/pclark/Projects/StandardML.
./config/install.sh: Installing version 110.70.
./config/install.sh: URL of source archive is http://smlnj.cs.uchicago.edu/dist/working/110.70/.
./config/install.sh: Script /Users/pclark/Projects/StandardML/bin/.arch-n-opsys reports ARCH=x86; OPSYS=darwin; HEAP_SUFFIX=x86-darwin.
/Users/pclark/Projects/StandardML/config/unpack: The run-time tree already exists.
./config/install.sh: Compiling the run-time system.
(make RUNTIME=""run.x86-darwin"" VERSION=""v-x86-darwin"" CC=""cc -ansi"" CFLAGS=""-g -O2 -D_NONSTD_SOURCE"" CPP=""cc -x assembler-with-cpp -E -P -ansi"" AS=""/usr/bin/as"" TARGET=X86 DEFS=""  -DHOST_X86 -DTARGET_X86 -DOPSYS_UNIX -DOPSYS_DARWIN -DOPSYS_MACOS_10_2 -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" XOBJS="""" XLIBS=""../c-libs/dl/libunix-dynload.a"" LD_LIBS=""-ldl"" run.x86-darwin)
cc -ansi -c -g -O2 -D_NONSTD_SOURCE -I../config -I../objs -I../include ../config/gen-common.c
In file included from /usr/include/sys/_types.h:32,
                 from /usr/include/_types.h:27,
                 from /usr/include/stdio.h:64,
                 from ../config/gen-common.c:8:
/usr/include/sys/cdefs.h:289:8: error: #error ""Can't define _NONSTD_SOURCE when only UNIX conformance is available.""
make[1]: *** [gen-common.o] Error 1
make: *** [all] Error 2
./config/install.sh: !!! Run-time system build failed for some reason.
",""," *** 2009-09-14 14:20 --- John Reppy --- Fixed for 110.71 (September 13, 2009)"
33,2,"Closed",2,142,"Bug Submitter",103,"John Reppy","2009-10-15 03:16","2019-06-02 00:22","2019-06-02 00:22","Overflow exception with inputLine function","We are processing a large file, and get the following exception:

uncaught exception Io [Io: inputLine failed on ""../20061214_irvpiv1.1st""
with exception overflow]
raised at Basis/Implementation/IO/text-io-fn.sml:119.14-119.56

The exception occurs after we have processed more than 2 million lines.
Submitted via web form by Kenny Zhu <kzhu@cs.sjtu.edu.cn>
",0,0,0,"x86","Linux","Basis Library","Fixed","Critical","2.6.18-164.el5 #1 SMP (64-bit)","110.70","IO, exception","","kzhu@tucson:~/tmp$ sml test.sml
Standard ML of New Jersey v110.70 [built: Thu Aug 13 10:36:44 2009]
[opening test.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]

uncaught exception Io [Io: inputLine failed on ""abc"" with exception overflow]
  raised at: Basis/Implementation/IO/text-io-fn.sml:119.14-119.56
/home/kfisher/sml-110.70/bin/sml: Fatal error -- Uncaught exception Io with <unk
nown> raised at Basis/Implementation/IO/text-io-fn.sml:119.14-119.56","let
           val eof = ref false
           (* the file ""abc"" has 2.6M lines *)
           val strm = TextIO.openIn ""abc""
           val _ = while not (!eof) do
                (
                case TextIO.inputLine strm of
                  SOME x => ()
                | NONE => eof:=true
                )
           val _ = TextIO.closeIn strm
in ()
end"," *** 2019-06-02 00:22 --- John Reppy --- Fixed in 110.89 (Position.int is now a 64-bit type) *** 2011-04-08 11:41 --- John Reppy --- To fix this bug will require switching to 64-bit integers for file positions. ~ Until we have an efficient implementation of 64-bit ints, this fix will probably ~ hurt general I/O performance too much to implement.  [JHR: 2010-04-08]"
34,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2009-10-16 03:13","2009-11-18 18:06","2009-11-18 18:06","Fix bashism in base/smlnj-lib/Doc/config.sh","Hi, ""function"" is not POSIX-compliant, and thus is not implemented by all shells that provide /bin/sh.

Please see attached patch which will be applied in the next upload to Debian.

I hope the patch formatting doesn't get mangled, you can find it at:

http://git.debian.org/?p=collab-maint/smlnj.git;a=blob;f=debian/patches/01_fix-bashism.patch;h=a50f3751898bc101aef2cc237d953e68393a6d63;hb=HEAD
Fix:
--- smlnj.orig/base/smlnj-lib/Doc/config.sh     2007-05-10 14:39:48.000000000 -0700
+++ smlnj/base/smlnj-lib/Doc/config.sh  2009-09-03 23:39:05.000000000 -0700
@@ -6,7 +6,7 @@

 find ML-Doc -name ""*.mldoc"" -print | mk-mldoc-makefile

-function mkDirTree {
+mkDirTree () {
   base=$1
   if test ! -d $base ; then
     mkdir $base || (echo ""unable to create $base""; exit 1)


Submitted via web form by Daniel Moerner <dmoerner@gmail.com>
",0,0,0,"All","All","SML/NJ Library","Fixed","Minor","Debian","110.71","POSIX","","",""," *** 2009-11-18 18:06 --- John Reppy --- Fixed for 110.72"
35,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2009-10-16 03:20","2014-08-23 10:31","2014-08-23 10:31","Please ship manpages for binaries","Hi, it would be nice to provide at least minimal manpages for all shipped binaries. There is excellent documentation for SML/NJ, and I don't think it's worth the time to document all of this in a manpage. However, it would be nice to have some basic information about usage.

Debian already ships skeletal manpages for all the binaries. I thought I'd file a feature request here with links to the manpages in case you're ever interested in developing them more.

ml-antlr:
http://git.debian.org/?p=collab-maint/smlnj.git;a=blob;f=debian/ml-antlr.1;h=115ae716fd92e50c00b50b89ec954498bd4214ea;hb=HEAD

ml-build:
http://git.debian.org/?p=collab-maint/smlnj.git;a=blob;f=debian/ml-build.1;h=4553d2c2a0b9bde9d16f1dae249ea10e33d604e8;hb=HEAD

ml-burg:
http://git.debian.org/?p=collab-maint/smlnj.git;a=blob;f=debian/ml-burg.1;h=add9d70bde75fd5cf12433c0cb3a05bf7035335e;hb=HEAD

ml-lex:
http://git.debian.org/?p=collab-maint/smlnj.git;a=blob;f=debian/ml-lex.1;h=31dbc9d7bdc7237543b774d76d070b36958f5ac0;hb=HEAD

ml-makedepend:
http://git.debian.org/?p=collab-maint/smlnj.git;a=blob;f=debian/ml-makedepend.1;h=03a8f3034f1a1630b4f8bf21dc18d75e8c86a640;hb=HEAD

ml-nlffigen:
http://git.debian.org/?p=collab-maint/smlnj.git;a=blob;f=debian/ml-nlffigen.1;h=7147aa0203074a0902c3a47aae605260bc6bc673;hb=HEAD

ml-ulex:
http://git.debian.org/?p=collab-maint/smlnj.git;a=blob;f=debian/ml-ulex.1;h=77a2a097dabb5d02f04e15b03d7aef9785973ffb;hb=HEAD

ml-yacc:
http://git.debian.org/?p=collab-maint/smlnj.git;a=blob;f=debian/ml-yacc.1;h=b55e06c0210fcf4cdb955384ae5bbb0ce1c641d6;hb=HEAD

nowhere:
http://git.debian.org/?p=collab-maint/smlnj.git;a=blob;f=debian/nowhere.1;h=c1fe33042e8b0c24aec295eb5edea485e9b487c4;hb=HEAD

sml:
http://git.debian.org/?p=collab-maint/smlnj.git;a=blob;f=debian/sml.1;h=e7649b69ce1c694b6ab4842b0c23fe7fae78ff2c;hb=HEAD

Regards,
Daniel
Submitted via web form by Daniel Moerner <dmoerner@gmail.com>
",0,0,0,"None","Linux","Other","Fixed","Cosmetic","Debian","110.71","documentation","","",""," *** 2014-08-23 10:31 --- John Reppy --- As of 110.77 the doc.tgz file in the distribution includes manual pages for the command-line tools.  On Mac OS X, these are installed in /usr/local/man."
36,2,"Closed",2,142,"Bug Submitter",103,"John Reppy","2009-10-17 03:06","2019-06-02 00:23","2019-06-02 00:23","Can't open very large file","TextIO.openIn can't open very large files.
Submitted via web form by Kenny Zhu <kzhu@cs.sjtu.edu.cn>
",0,0,0,"None","Generic Unix","Basis Library","Fixed","Major","","110.70","IO, openIn","","kzhu@tucson:~/tmp$ uncaught exception Io [Io: openIn failed on ""../ypc/20061214_ irvpiv1"", File too large]
  raised at Basis/Implementation/IO/text-io-fn.sml:783.25-783.71

","(* ../ypc/20061214_ irvpiv1 is a very large file over 2GB *)

TextIO.openIn ""../ypc/20061214_ irvpiv1"""," *** 2019-06-02 00:23 --- John Reppy --- Fixed in 110.89 (Position.int is now a 64-bit type) *** 2011-04-08 11:43 --- John Reppy --- This bug is essentially the same as #33"
37,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2009-10-24 13:25","2009-12-11 21:07","2009-12-11 21:07","print() crashes with large strings on Win32 build","When calling print() with a string of size >= 62734 the runtime
crashes with the message:

C:\\Program Files (x86)\\SMLNJ\\\\bin\\.run\\run.x86-win32.exe: Fatal error -- Uncaught exception Io with <unknown> raised at Basis/Implementation/IO/text-io-fn.sml:443.14-443.56

This error does not occur on an older Unix build.
Additional comments:
I thought this might be a buffering issue but I tried setting
stdOut to IO.NO_BUF, IO.LINE_BUF, and IO.BLOCK_BUF and it still
occurs. I suspect an issue in low-level IO routines.

Fix:
I tried but SML is too hard to debug. This will require
someone with experience in the code.

Submitted via web form by Jason Mackay <jmackay@u.washington.edu>
",0,0,0,"Other","Other","Basis Library","Fixed","Major","Windows 7 - 6.1.7100","110.71","IO print","","Standard ML of New Jersey v110.71 [built: Thu Sep 17 08:50:14 2009]
[opening bug.sml]
val bigString = fn : int -> string
C:\\Program Files (x86)\\SMLNJ\\\\bin\\.run\\run.x86-win32.exe: Fatal error -- Uncaught exception Io with <unknown> raised at Basis/Implementation/IO/text-io-fn.sml:443.14-443.56

or if I uncomment the working print line:
uncaught exception Io [Io: output failed on \""<stdOut>\"", <win32 error code 8>]
  raised at: Basis/Implementation/IO/text-io-fn.sml:443.14-443.56","(* repro code for Win32 SML output(stdOut, s) bug *)

fun bigString(0) = \""\""
| bigString(n) =
  let fun buildString(0) = []
    | buildString(n) = #\""*\""::buildString(n-1)
  in
    implode(buildString(n))
  end;

(* this works *)
(* print(bigString(62733)); *)

(* this fails *)
print(bigString(62734));"," *** 2009-12-11 21:07 --- Lars Bergstrom --- Fixed. Changelist #3468, should be in 110.72."
38,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2009-10-28 11:42","2010-03-23 13:45","2010-03-23 13:45","CM bug in calling ML-Lex/Yacc in Windows","When calling ML-Lex and ML-Yacc, CM generates
a ""file not found"" error in the generation of
the lexer and parser files. (More correct to
say that ML-Lex and ML-Yacc are generating the
error message.) We speculate that the reason is
that they are not getting passed the right value
of $CWD (or whatever it is on Windows).

Hand invocation of ML-Lex/Yacc works just fine
from the Windows DOS prompt.

Fix:
See above.

Submitted via web form by Konrad Slind and Mike Whalen <klslind@rockwellcollins.com, mwwhalen@rockwellcollins.com>
",0,0,0,"x86","Windows XP","CM","Fixed","Major","","110.58-->now","","","","Sorry, the above should give enough info to quickly
find the bug. If not, we can construct a small lexer
and show the problem.
"," *** 2009-11-04 19:33 --- Matthias Blume --- It would be nice to have sample code that illustrates the problem. "
39,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2009-11-01 08:45","2011-05-10 17:30","2011-05-10 17:30","[diff] SML/NJ doesn\'t build on NetBSD out of the box","You cannot install SML/NJ on NetBSD without patchwork.
Fix:
NetBSD versions older than 4.0 are desupported.

--- config/_arch-n-opsys.orig	2008-08-13 22:37:59.000000000 +0400
+++ config/_arch-n-opsys	2009-01-27 17:24:34.000000000 +0300
@@ -118,13 +118,15 @@
     ;;
   NetBSD)
     case `uname -r` in
-      2*) OPSYS=netbsd2;;
-      3*) OPSYS=netbsd;;
-      *) exit 1;;
+      1.*)  exit 1;;
+      2.*) OPSYS=netbsd2;;
+      *) OPSYS=netbsd;;
     esac
     HEAP_OPSYS=bsd
-    case `uname -m` in
+    case `uname -p` in
       *86) ARCH=x86;;
+      powerpc) ARCH=ppc;;
+      sparc) ARCH=sparc;;
       *) exit 1;;
     esac
     ;;

NetBSD has POSIX signals since 2.0 at least.

--- src/runtime/include/ml-unixdep.h.orig	2008-12-05 20:57:39.000000000 +0300
+++ src/runtime/include/ml-unixdep.h	2009-03-19 00:14:35.000000000 +0300
@@ -323,7 +323,7 @@
 #elif defined(OPSYS_NETBSD) /* version 3.x */
 #  define OS_NAME	\""BSD\""
 #  define HAS_POSIX_LIBRARIES
-#  define HAS_BSD_SIGS
+#  define HAS_POSIX_SIGS
 #  define HAS_GETRUSAGE
 #  define HAS_SETITIMER
 #  define HAS_MMAP

NetBSD has POSIX signals since 2.0 at least.

--- base/runtime/include/ml-unixdep.h.orig	2008-12-05 20:57:39.000000000 +0300
+++ base/runtime/include/ml-unixdep.h	2009-03-19 00:16:29.000000000 +0300
@@ -323,7 +323,7 @@
 #elif defined(OPSYS_NETBSD) /* version 3.x */
 #  define OS_NAME	\""BSD\""
 #  define HAS_POSIX_LIBRARIES
-#  define HAS_BSD_SIGS
+#  define HAS_POSIX_SIGS
 #  define HAS_GETRUSAGE
 #  define HAS_SETITIMER
 #  define HAS_MMAP


Submitted via web form by Aleksej Saushev <asau@netbsd.org>
",0,0,0,"x86","NetBSD","Installer","None","Major","5.0","110.71","","","",""," *** 2011-05-10 17:30 --- John Reppy --- Fixed by Jon Riehl (r3492)"
40,2,"Closed",3,107,"Mike Rainey",106,"David MacQueen","2009-11-01 13:43","2019-10-04 15:44","2019-10-04 15:44","Very slow compilation with a large statically-defined list","The attached program takes a very long or possibly infinite time to compile. The problem seems to be in the building of the ""runs"" list. We noticed that, by shortening the list, compilation would complete quickly. We are able to compile and execute our program in MLton.",0,0,0,"None","None","Compiler","None","Minor","","110.70","","","Standard ML of New Jersey v110.70 [built: Tue Sep 15 20:12:50 2009]
- [opening /Users/mrainey/Downloads/smlnj-bug/smlnj-bug.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
","We attach a compressed version of the source file, as the raw source is too large to put here."," *** 2019-10-04 15:44 --- David MacQueen --- DBM, 2019:10:4.  Appears to be fixed in 110.93.  Compiles in about 3 seconds on a 2015 high-end iMac.  Apparently the CPS closure algorithm was improved? *** 2009-11-04 19:30 --- Matthias Blume --- This is a well-known problem caused by the way the SML :: operator works.  Since it is right-associative but evaluation is strictly left-to-right, long lists can create tremendous register pressure because so many intermediate values have to be held in temporary variables.  (In certain cases the compiler could avoid this outright, and in others there are ways of avoiding compile-time blowup at the expense of an extra list reversal or some such, but SML/NJ does not do that in general.) ~  ~ There is a simple trick for programmers to use (especially if the programmer is a program!): ~  ~ Define a ""reverse cons"" operator that is left-associative and takes its arguments in opposite order from ordinary cons.  Then generate the source code in reverse order, starting from nil.  This will greatly reduce compile time and also be more efficient at runtime. *** 2009-11-02 20:29 --- George Kuan --- That said, the above explanation only addresses the compilation bottleneck. The generated code may also have issues.  *** 2009-11-02 20:27 --- George Kuan --- At least from a quick and dirty measurement, the bottleneck appears to be in CPS closure. This problem occurs for any test program that conses a large list in one fell swoop. "
45,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2009-12-02 08:11","2015-09-24 15:29","2015-09-24 15:29","Compiler bug in specialize phase","The compiler crashes with the message

  Recover.get: 334
  Error: Compiler bug: Recover: Recover.recover.get

  while in specialize phase

  unexpected exception (bug?) in SML/NJ: Io [Io: openAppend failed on \""flint.core\"", Win32TextPrimIO:openApp: failed]
    raised at: Basis/Implementation/IO/text-io-fn.sml:792.25-792.75
               ../compiler/Basics/stats/stats.sml:198.40
               ../compiler/TopLevel/interact/evalloop.sml:44.55

when entering the expression shown below.  (It also crashes when
loading a file containing that expression via use, or when using
compilation manager to compile the file.)
Submitted via web form by Morten Rhiger <morten.rhiger@gmail.com>
",0,0,0,"All","All","Compiler","Fixed","Minor","","v110.71","flint.core, Win32TextPrimIO, openApp","","Standard ML of New Jersey v110.71 [built: Thu Sep 17 08:50:14 2009]
- let fun split_ST3_SK3_SK1_ST3 (x55, x56, x57, x58, x59) = split_ST2_SK3_SK1_ST3 (op + (x55, 1), x56, x57, x58, x59)
      and yield_SK2_ST3_SK1_ST3 (x50, x51, x52, x53, x54) = split_ST3_SK3_SK1_ST3 (x50, x51, x52, x53, x54)
      and split_ST2_SK2_ST3_SK1 (x46, x47, x48, x49) = if op > (x46, x47) then [] else yield_SK2_ST3_SK1_ST3 (x48, x49, x46, x46, x47)
      and split_ST3_SK2_ST3_SK1 (x42, x43, x44, x45) = split_ST2_SK2_ST3_SK1 (op + (x42, 1), x43, x44, x45)
      and split_ST1_ST3_ST3_SK1 (x38, x39, x40, x41) = split_ST3_SK2_ST3_SK1 (x38, x39, x40, x41)
      and yield_SK1_ST1_ST3_ST3 (x33, x34, x35, x36, x37) = op :: (x33, split_ST1_ST3_ST3_SK1 (x34, x35, x36, x37))
      and yield_SK3_SK1_ST3_ST3 (x27, x28, x29, x30, x31, x32) = yield_SK1_ST1_ST3_ST3 ((x27, x30), x28, x29, x31, x32)
      and split_ST2_SK3_SK1_ST3 (x22, x23, x24, x25, x26) = if op > (x22, x23) then [] else yield_SK3_SK1_ST3_ST3 (x24, x25, x26, x22, x22, x23)
      and split_ST4_SK3_SK1_ST3 (x17, x18, x19, x20, x21) = split_ST2_SK3_SK1_ST3 (x17, x18, x19, x20, x21)
      and yield_SK2_ST4_SK1_ST3 (x12, x13, x14, x15, x16) = split_ST4_SK3_SK1_ST3 (x12, x13, x14, x15, x16)
      and split_ST2_SK2_ST4_SK1 (x8, x9, x10, x11) = if op > (x8, x9) then [] else yield_SK2_ST4_SK1_ST3 (x10, x11, x8, x8, x9)
      and split_ST4_SK2_ST4_SK1 (x4, x5, x6, x7) = split_ST2_SK2_ST4_SK1 (x4, x5, x6, x7)
      and split_ST5_ST4_ST4_SK1 (x0, x1, x2, x3) = split_ST4_SK2_ST4_SK1 (x0, x1, x2, x3)
  in split_ST5_ST4_ST4_SK1 (0, 10, 20, 30)
  end;
Recover.get: 4
Error: Compiler bug: Recover: Recover.recover.get

while in specialize phase

unexpected exception (bug?) in SML/NJ: Io [Io: openAppend failed on \""flint.core\"", Win32TextPrimIO:openApp: failed]
  raised at: Basis/Implementation/IO/text-io-fn.sml:792.25-792.75
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:44.55
- ","let fun split_ST3_SK3_SK1_ST3 (x55, x56, x57, x58, x59) = split_ST2_SK3_SK1_ST3 (op + (x55, 1), x56, x57, x58, x59)
    and yield_SK2_ST3_SK1_ST3 (x50, x51, x52, x53, x54) = split_ST3_SK3_SK1_ST3 (x50, x51, x52, x53, x54)
    and split_ST2_SK2_ST3_SK1 (x46, x47, x48, x49) = if op > (x46, x47) then [] else yield_SK2_ST3_SK1_ST3 (x48, x49, x46, x46, x47)
    and split_ST3_SK2_ST3_SK1 (x42, x43, x44, x45) = split_ST2_SK2_ST3_SK1 (op + (x42, 1), x43, x44, x45)
    and split_ST1_ST3_ST3_SK1 (x38, x39, x40, x41) = split_ST3_SK2_ST3_SK1 (x38, x39, x40, x41)
    and yield_SK1_ST1_ST3_ST3 (x33, x34, x35, x36, x37) = op :: (x33, split_ST1_ST3_ST3_SK1 (x34, x35, x36, x37))
    and yield_SK3_SK1_ST3_ST3 (x27, x28, x29, x30, x31, x32) = yield_SK1_ST1_ST3_ST3 ((x27, x30), x28, x29, x31, x32)
    and split_ST2_SK3_SK1_ST3 (x22, x23, x24, x25, x26) = if op > (x22, x23) then [] else yield_SK3_SK1_ST3_ST3 (x24, x25, x26, x22, x22, x23)
    and split_ST4_SK3_SK1_ST3 (x17, x18, x19, x20, x21) = split_ST2_SK3_SK1_ST3 (x17, x18, x19, x20, x21)
    and yield_SK2_ST4_SK1_ST3 (x12, x13, x14, x15, x16) = split_ST4_SK3_SK1_ST3 (x12, x13, x14, x15, x16)
    and split_ST2_SK2_ST4_SK1 (x8, x9, x10, x11) = if op > (x8, x9) then [] else yield_SK2_ST4_SK1_ST3 (x10, x11, x8, x8, x9)
    and split_ST4_SK2_ST4_SK1 (x4, x5, x6, x7) = split_ST2_SK2_ST4_SK1 (x4, x5, x6, x7)
    and split_ST5_ST4_ST4_SK1 (x0, x1, x2, x3) = split_ST4_SK2_ST4_SK1 (x0, x1, x2, x3)
in split_ST5_ST4_ST4_SK1 (0, 10, 20, 30)
end"," *** 2015-09-24 15:29 --- John Reppy --- Fixed for 110.79. ~  ~ The problem turns out to be a bad interaction between eta contraction and simple inlining.  The situation is that we have a function v5 (split_4 in the source) that is mapped by eta contraction to a function v4 (split_3).  The function v4 contains a call to v3, while another function, v6, contains a non-tail application of v5. During inlining, we first contract v4 and inline the call to v3; we then contract v6 and inline the call to v5, but it is mapped to the _old_ definition of v4!  The result is a residual program that contains a call to v3, but where v3 has been deleted as unused. ~  ~ To fix this problem, I modified the fcApp function so that when it maps its argument function f to Fun(g, ...) and g is a different LVar than f, then I recursively call fcApp on g with the same argument list. *** 2015-09-23 19:29 --- John Reppy --- I have reduced the example by hand-eta reducing all but one of the available eta reductions.  Eliminating the remaining eta reduction will cause the bug to disappear.  The reduced version of the bug is loaded as an attachment, as is a transcript of the debug output. *** 2015-09-23 17:51 --- John Reppy --- The bug is because of an attempt to lookup a variable that isn't bound.  Turning on Control.FLINT.print shows that the problem is in contraction. Specifically, after contraction, we have the following residual code ~  ~ ==================== ~ [After fcontract ...] ~  ~ v424{1} : (FCT)  =  ~   FN([v612{0} : ???], ~     FIX(v197{2,2} : (RFUN rr)  =  ~           FN([v539{3} : I, ~               v540{2} : I, ~               v541{1} : I, ~               v542{1} : I, ~               v543{2} : I], ~             IF PRIMOP(>, <I,I> -rr-> <B>, []) [v539,v540] ~             THEN ~                 v526{1} = RECORD [] ~                 v525{1} = CON(nil, [TT<I,I>], v526) ~                 RETURN [v525] ~             ELSE ~                 v508{1} = RECORD [v541,v539] ~                 v470{3} = PRIMOP(+, <I,I> -rr-> <I>, []) [v542,(I)1] ~                 [v493{1}] = APP(v192,[v470,v543,v539,v540]) ~                 v364{1} = RECORD [v508,v493] ~                 v494{1} = CON(::, [TT<I,I>], v364) ~                 RETURN [v494])) ~     [v189{1}] = IF PRIMOP(>, <I,I> -rr-> <B>, []) [(I)0,(I)10] ~                  THEN ~                      v572{1} = RECORD [] ~                      v571{1} = CON(nil, [TT<I,I>], v572) ~                      RETURN [v571] ~                  ELSE ~                      APP(v197,[(I)20,(I)30,(I)0,(I)0,(I)10]) ~     v611{1} = STRUCT [v189] ~     RETURN [v611]) ~  ~ Recover.get: 192 ~ Error: Compiler bug: Recover: Recover.recover.get ~ ==================== ~  ~ Notice that the function v192 is applied, but not bound anywhere.  Its binding has been removed by the contraction phase. I think that v192 corresponds to split_ST2_SK3_SK1_ST3 in the source. ~  *** 2015-09-23 17:01 --- John Reppy --- This bug still exists in 110.78 on Mac OS X.  The final message is a bit different: ~  ~ Recover.get: 4 ~ Error: Compiler bug: Recover: Recover.recover.get ~  ~ while in specialize phase ~   raised at:	../compiler/Basics/errormsg/errormsg.sml:52.14-52.19 ~ 		../compiler/FLINT/opt/recover.sml:123.44 ~ 		../compiler/Basics/stats/stats.sml:198.40 ~  *** 2009-12-11 21:13 --- Lars Bergstrom --- Not Windows-specific - reproduces on OSX too: ~ Standard ML of New Jersey v110.71 [built: Sat Nov 21 16:40:08 2009] ~ - use ""/Users/larsberg/Desktop/foo.txt""; ~ [opening /Users/larsberg/Desktop/foo.txt] ~ Recover.get: 4 ~ Error: Compiler bug: Recover: Recover.recover.get ~  ~ while in specialize phase ~   raised at:	../compiler/Basics/errormsg/errormsg.sml:52.14-52.19 ~ 		../compiler/FLINT/opt/recover.sml:123.44 ~ 		../compiler/Basics/stats/stats.sml:198.40 ~  ~ uncaught exception Error ~   raised at: ../compiler/Basics/errormsg/errormsg.sml:52.14-52.19 ~              ../compiler/FLINT/opt/recover.sml:123.44 ~              ../compiler/Basics/stats/stats.sml:198.40 ~              ../compiler/FLINT/main/flintcomp.sml:183.13 ~              ../compiler/Basics/stats/stats.sml:198.40 ~              ../compiler/TopLevel/interact/evalloop.sml:44.55 ~              ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20 ~ - "
49,2,"Closed",3,119,"Jon Riehl",108,"Aaron Turon","2009-12-08 17:40","2011-03-31 11:23","2011-03-31 11:23","Slight syntactic difference between ml-lex and ml-ulex in backward compatibility mode.","The ml-ulex tool appears to not correctly recognize the character class ""[-]"" as being just the hyphen.  The transcript shows running ml-lex and ml-ulex on the attached input (both appear to generate a SML file, but I have not checked to see if they work).

The original submitter (Roger Price, via smlnj-list) noted a work around for this problem was to just remove the brackets for the hyphen (changing ""({alpha}|[-])"" to ""({alpha}|-)"".",0,0,0,"None","None","ML-Ulex","None","Minor","","110.71","","","$ ml-lex test.lex

Number of states = 14
Number of distinct rows = 5
Approx. memory size of trans. table = 645 bytes
$ ml-ulex --ml-lex-mode test.lex
[ml-ulex: parsing]
14: syntax error: deleting  BAR LB RBD
[ml-ulex: DFA gen]
 12 states in full DFA
[ml-ulex: SML gen]
","(See attached file.)"," *** 2011-03-31 11:23 --- John Reppy --- Fixe in r174 of ml-lpt"
50,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2009-12-12 15:32","2010-03-23 13:46","2010-03-23 13:46","CM can't invoke ml-yacc or ml-lex on Windows","On Windows, the configuration manager is unable to invoke
ml-yacc or ml-lex.  When it attempts to do so, I receive this
error message:

[scanning sources.cm]
[""C:\smlnj\bin\ml-yacc"" """" ""mlc.grm""]
'C:\smlnj\bin\ml-yacc"" """" ""mlc.grm' is not recognized as an internal or external command,
operable program or batch file.
sources.cm:74.2-74.9 Error: tool ""ML-Yacc"" failed: ""C:\smlnj\bin\ml-yacc"" """" ""mlc.grm""
[""C:\smlnj\bin\ml-ulex"" ""--ml-lex-mode"" ""mlc.lex""]
'C:\smlnj\bin\ml-ulex"" ""--ml-lex-mode"" ""mlc.lex' is not recognized as an internal or external command,
operable program or batch file.
sources.cm:75.2-75.9 Error: tool ""ULex-ML-Lex"" failed: ""C:\smlnj\bin\ml-ulex"" ""--ml-lex-mode"" ""mlc.lex""
val it = () : unit

I suspect that CM is sending an ill-formed command string to the
shell.  The bug appeared in version 110.69, probably as a result
of this change:

* Fixed problem with CM tools when paths contain spaces.

Additional comments:
I think this is the same bug as #38.

Submitted via web form by Karl Crary <crary@cs.cmu.edu>
",0,0,0,"x86","Windows XP","CM","Fixed","Major","","110.70","","","as above","No SML code necessary.  Just put ""foo.grm"" into your sources.cm
to see it happen.
",""
51,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2009-12-20 11:27","2009-12-21 12:00","2009-12-21 12:00","@ is very slow (quadratic?)","Append operator @ loses with long lists (test takes 1 minute).
A hand-crafted equivalent wins (test2 takes 13 seconds).
I could not find definition of @, so I am unable to investigate
the problem myself. The problem could be in GC
(there were crazy page fault counts due to very frequent
mappings/unmappings).
(BTW SBCL does the same list-power thing in 6 sec,
     GHC in 2 sec, on my machine :)
Submitted via web form by Denis <denis.yevgenyevich@gmail.com>
",0,0,0,"All","All","Basis Library","None","Minor","","110.71","performance append runtime GC","","measure time of test and test2
on Core2 2.2 Ghz, 2GB RAM, i got 60 and 13 wall-clock seconds.","fun append l r =
  let fun app l r =
    case l of
      [] => r
    | (l::ls) => app ls (l::r)
  in app (rev l) r
  end
;;

fun pow l n =
  if n>0 then pow (l@l) (n-1)
  	 else length l
;;

fun pow2 l n =
  if n>0 then pow2 (append l l) (n-1)
  	 else length l
;;

fun test () = pow [1] 24
;;

fun test2 () = pow2 [1] 24
;;"," *** 2009-12-21 12:00 --- John Reppy --- Fixed for 110.72."
52,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2009-12-27 23:37","2014-12-20 10:36","2014-12-20 10:36","nonsensical type error message","Type checker issues nonsensical error message when operator +
(or any overloaded operator?) is used at the wrong type.
Additional comments:
The problem seems to be caused by having the boolean argument
appear first.  If ""3 + true"" is entered instead, the error message
is correct.

Submitted via web form by Matthias Blume <matthias_blume@mac.com>
",0,0,0,"None","Generic Unix","Compiler","Fixed","Minor","","110.71","types error messages","","- true + 3;
stdIn:1.1-1.9 Error: operator and operand don't agree [literal]
  operator domain: bool * bool
  operand:         bool * int
  in expression:
    true + 3
stdIn:1.6 Error: overloaded variable not defined at type
  symbol: +
  type: bool
-
","true + 3;"," *** 2014-12-20 10:36 --- John Reppy --- Fixed for 110.78"
53,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2010-02-07 19:44","2015-07-09 03:28","2015-07-09 03:55","psfig.sty is deprecated, use epsfig.sty wrapper or graphicx.sty","Hi,

TeXLive 2009 no longer ships psfig.sty. It has been deprecated. However, four files in MLRISC/Doc/latex still use it:

dmr@skynet .../itps/smlnj/smlnj-old/MLRISC/Doc/latex (git)-[master] % grep -ri psfig .
./mlrisc-ir.tex:   \psfig{figure=../pictures/eps/mlrisc-IR.eps,width=4.5in}
./mlrisc-ir.tex:\cpsfig{figure=../pictures/eps/tail-duplication.eps,width=3in}
./mltex.sty:\usepackage{psfig}
./mltex.sty:\newcommand{\cpsfig}[1]{\centerline{\psfig{#1}}}
./mltex.tex:  \psfig
./graphs.tex:  \psfig{figure=../pictures/eps/trace.eps,width=2.8in}
./graphs.tex:  \psfig{figure=../pictures/eps/subgraph.eps,width=2.8in}

See:

http://osdir.com/ml/debian-tex-maint-debian/2010-01/msg00066.html

See section 2.2.2 of this document:

http://ftp.dante.de/tex-archive/info/l2tabu/english/l2tabuen.pdf

One solution is to use the epsfig.sty wrapper. Another is to port it properly to use graphicx directly.

The fix using epsfig.sty is trivial and is attached.

The more general fix would require changing the \newcommand wrapper in MLRISC/Doc/latex/mltex.sty. I know basically no Latex so I can't help with this.

Regards,
Daniel
Fix:
diff --git a/MLRISC/Doc/latex/graphs.tex b/MLRISC/Doc/latex/graphs.tex
index 01e626d..992f64a 100644
--- a/MLRISC/Doc/latex/graphs.tex
+++ b/MLRISC/Doc/latex/graphs.tex
@@ -877,7 +877,7 @@ with sources and targets in $S$.  $S$ must be a subset of $V$.

 \begin{wrapfigure}{r}{3in}
   \begin{Boxit}
-  \psfig{figure=../pictures/eps/trace.eps,width=2.8in}
+  \epsfig{figure=../pictures/eps/trace.eps,width=2.8in}
   \end{Boxit}
   \label{fig:trace-view}
   \caption{A trace view}
@@ -910,7 +910,7 @@ be both since it exits from \sml{G} and enters into \sml{A}.
 \end{SML}
 \begin{wrapfigure}{r}{3in}
   \begin{Boxit}
-  \psfig{figure=../pictures/eps/subgraph.eps,width=2.8in}
+  \epsfig{figure=../pictures/eps/subgraph.eps,width=2.8in}
   \end{Boxit}
   \label{fig:acyclic-subgraph-view}
   \caption{An acyclic subgraph}
diff --git a/MLRISC/Doc/latex/mlrisc-ir.tex b/MLRISC/Doc/latex/mlrisc-ir.tex
index c346baa..f437e22 100644
--- a/MLRISC/Doc/latex/mlrisc-ir.tex
+++ b/MLRISC/Doc/latex/mlrisc-ir.tex
@@ -187,7 +187,7 @@ operate on more complex representations which use this
 representation as the base layer.
 \begin{wrapfigure}{r}{4.5in}
    \begin{Boxit}
-   \psfig{figure=../pictures/eps/mlrisc-IR.eps,width=4.5in}
+   \epsfig{figure=../pictures/eps/mlrisc-IR.eps,width=4.5in}
    \end{Boxit}
    \caption{The MLRISC IR}
 \end{wrapfigure}
@@ -514,7 +514,7 @@ These functions have the following meanings:
    \end{SML}
 \begin{Figure}
 \begin{boxit}
-\cpsfig{figure=../pictures/eps/tail-duplication.eps,width=3in}
+\cepsfig{figure=../pictures/eps/tail-duplication.eps,width=3in}
 \end{boxit}
 \label{fig:tail-duplication}
 \caption{Tail-duplication}
diff --git a/MLRISC/Doc/latex/mltex.sty b/MLRISC/Doc/latex/mltex.sty
index 04d3477..8a30680 100644
--- a/MLRISC/Doc/latex/mltex.sty
+++ b/MLRISC/Doc/latex/mltex.sty
@@ -5,7 +5,7 @@
 \ProvidesPackage{mltex}[2000/2/12 defines mltex environment]

 \usepackage{latexsym}
-\usepackage{psfig}
+\usepackage{epsfig}
 \usepackage{fancyheadings}
 \usepackage{sml}
 \usepackage{color}
@@ -34,7 +34,7 @@

 % Images and Figures
 \newcommand{\image}[3]{}
-\newcommand{\cpsfig}[1]{\centerline{\psfig{#1}}}
+\newcommand{\cepsfig}[1]{\centerline{\epsfig{#1}}}

 % Formatting
 \newenvironment{Bold}{\begingroup\bf}{\endgroup}
diff --git a/MLRISC/Doc/latex/mltex.tex b/MLRISC/Doc/latex/mltex.tex
index c9cbdbb..343d6fe 100644
--- a/MLRISC/Doc/latex/mltex.tex
+++ b/MLRISC/Doc/latex/mltex.tex
@@ -104,7 +104,7 @@ environments and macros, and will translate them into HTML equivalents.
   \section \subsection \subsubsection \paragraph
   \ref \label
   \noindent \linebreak
-  \psfig
+  \epsfig
 \end{verbatim}

 \subsection{Bugs and Shortcomings}


Submitted via web form by Daniel Moerner <dmoerner@gmail.com>
",0,0,0,"None","Linux","Other","Fixed","Minor","Debian Sid","110.72","doc","","dmr@skynet ...bian/itps/smlnj/smlnj/MLRISC/Doc/latex (git)-[master] % make
(cd ../pictures; make)
make[1]: Entering directory `/home/dmr/debian/itps/smlnj/smlnj/MLRISC/Doc/pictures'
fig2dev -L ps fig/big-pict.fig eps/big-pict.eps
fig2dev -L ps fig/big-pict2.fig eps/big-pict2.eps
fig2dev -L ps fig/cfg-rev.fig eps/cfg-rev.eps
fig2dev -L ps fig/cfg.fig eps/cfg.eps
fig2dev -L ps fig/compiler-2.fig eps/compiler-2.eps
fig2dev -L ps fig/compiler.fig eps/compiler.eps
fig2dev -L ps fig/compiler2.fig eps/compiler2.eps
fig2dev -L ps fig/hyperblock-formation.fig eps/hyperblock-formation.eps
fig2dev -L ps fig/if-conversion.fig eps/if-conversion.eps
fig2dev -L ps fig/layers.fig eps/layers.eps
fig2dev -L ps fig/mlrisc-ir-archive.fig eps/mlrisc-ir-archive.eps
fig2dev -L ps fig/mlrisc-IR.fig eps/mlrisc-IR.eps
fig2dev -L ps fig/phg.fig eps/phg.eps
fig2dev -L ps fig/region-builder.fig eps/region-builder.eps
fig2dev -L ps fig/subgraph.fig eps/subgraph.eps
fig2dev -L ps fig/tail-dupl.fig eps/tail-dupl.eps
fig2dev -L ps fig/tail-duplication.fig eps/tail-duplication.eps
fig2dev -L ps fig/trace.fig eps/trace.eps
fig2dev -L ps fig/uncol.fig eps/uncol.eps
fig2dev -L ps fig/viewer.fig eps/viewer.eps
fig2dev -L png fig/compiler-1.fig png/compiler-1.png
fig2dev -L png fig/compiler-2.fig png/compiler-2.png
fig2dev -L png fig/hof-1.fig png/hof-1.png
fig2dev -L png fig/hof-2.fig png/hof-2.png
fig2dev -L png fig/mlrisc-ir-archive.fig png/mlrisc-ir-archive.png
fig2dev -L png fig/optimization.fig png/optimization.png
fig2dev -L png fig/sharing1.fig png/sharing1.png
fig2dev -L png fig/sharing2.fig png/sharing2.png
fig2dev -L png fig/sharing3.fig png/sharing3.png
fig2dev -L png fig/uncol.fig png/uncol.png
fig2dev -L png fig/uncol1.fig png/uncol1.png
fig2dev -L png fig/uncol2.fig png/uncol2.png
make[1]: Leaving directory `/home/dmr/debian/itps/smlnj/smlnj/MLRISC/Doc/pictures'
latex sml.tex
This is pdfTeX, Version 3.1415926-1.40.10 (TeX Live 2009/Debian)
 restricted \write18 enabled.
entering extended mode
(./sml.tex
LaTeX2e <2009/09/24>
Babel <v3.8l> and hyphenation patterns for english, usenglishmax, dumylang, noh
yphenation, loaded.
(/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo)) (./sml.sty)
No file sml.aux.
[1]
Overfull \hbox (43.49661pt too wide) in paragraph at lines 67--67
[]     \OT1/cmtt/m/n/10 | flatten(NODE(x,children)) = [x] @ List.concat(map fla
tten children)[]

Overfull \hbox (43.49661pt too wide) in paragraph at lines 76--76
[]     \OT1/cmtt/m/n/10 | flatten(NODE(x,children)) = [x] @ List.concat(map fla
tten children)[]

Overfull \hbox (38.24666pt too wide) in paragraph at lines 90--90
[] \OT1/cmtt/m/n/10 \newcommand{\BeginSmlComment}{\begingroup\smlCommentSize\sm
lCommentFont}[]
[2]
Overfull \hbox (1.49698pt too wide) in paragraph at lines 138--138
[]   \OT1/cmtt/m/n/10 The datatype \sml{'a tree} implements a polymorphic n-ary
 tree.[]

Overfull \hbox (53.99652pt too wide) in paragraph at lines 138--138
[]\OT1/cmtt/m/n/10 The function \sml{val rev : 'a tree -> 'a list} flattens a t
ree into a list.[]

Overfull \hbox (1.49698pt too wide) in paragraph at lines 154--154
[]   \OT1/cmtt/m/n/10 The datatype \Sml{'a tree} implements a polymorphic n-ary
 tree.[]

Overfull \hbox (53.99652pt too wide) in paragraph at lines 154--154
[]\OT1/cmtt/m/n/10 The function \Sml{val rev : 'a tree -> 'a list} flattens a t
ree into a list.[]
[3] [4]

LaTeX Font Warning: Font shape `OMS/cmtt/m/n' undefined
(Font)              using `OMS/cmsy/m/n' instead
(Font)              for symbol `textbraceleft' on input line 244.

[5] (./sml.aux)

LaTeX Font Warning: Some font shapes were not available, defaults substituted.

 )
(see the transcript file for additional information)
Output written on sml.dvi (5 pages, 11392 bytes).
Transcript written on sml.log.
latex mlrisc.tex
This is pdfTeX, Version 3.1415926-1.40.10 (TeX Live 2009/Debian)
 restricted \write18 enabled.
entering extended mode
(./mlrisc.tex
LaTeX2e <2009/09/24>
Babel <v3.8l> and hyphenation patterns for english, usenglishmax, dumylang, noh
yphenation, loaded.
(/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo)) (./mltex.sty
(/usr/share/texmf-texlive/tex/latex/base/latexsym.sty)

! LaTeX Error: File `psfig.sty' not found.

Type X to quit or <RETURN> to proceed,
or enter new name. (Default extension: sty)

Enter file name:
! Emergency stop.
<read *>

l.9 \usepackage
               {fancyheadings}^^M
No pages of output.
Transcript written on mlrisc.log.
make: *** [mlrisc.dvi] Error 1
",""," *** 2015-07-09 03:55 --- John Reppy --- Fixed for 110.79 *** 2015-07-09 03:28 --- John Reppy --- Replaced eps files with pdf files and switched to use the graphicx package. *** 2015-07-08 09:24 --- James McCoy --- Debian continues to carry this patch.  Is there a chance the patch will be accepted?"
54,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2010-03-05 02:45","2014-03-27 18:55","2014-03-27 18:55","Fails to bootstrap on ppc: unexpected fault, signal = 5, code = 0x8000","Hi, smlnj is failing to build on powerpc Linux. For reference, see. [0]

I'll see if I can find the problem in the next couple of days but I am not confident in my abilities here.

[0] https://buildd.debian.org/fetch.cgi?&pkg=smlnj&ver=110.72-1&arch=powerpc&stamp=1267719699&file=log
Submitted via web form by Daniel Moerner <dmoerner@gmail.com>
",0,0,0,"PPC","Linux","Installer","Won't Fix","Cosmetic","Debian Sid","110.72","","","./config/install.sh: Installation complete.
cd base/system && echo ""CMB.make();"" | /home/user/smlnj-110.72/bootstrap/bin/sml ""\$smlnj/cmb.cm"";
Standard ML of New Jersey v110.72 [built: Fri Mar  5 08:07:16 2010]
[library $smlnj/cmb.cm is stable]
- [autoloading]
[library $smlnj/cmb/current.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $smlnj/cmb/ppc-unix.cm is stable]
[autoloading done]
[reading init spec from $smlnj/init/init.cmi]
[compiling $smlnj/init/(init.cmi):order.sml]
[creating directory /home/user/smlnj-110.72/base/system/smlnj/init/.cm/GUID]
[creating directory sml.bin.ppc-unix/smlnj/init/.cm/ppc-unix]
[code: 104, env: 188 bytes]
[compiling $smlnj/init/(init.cmi):assembly.sig]
[code: 88, env: 1649 bytes]
[compiling $smlnj/init/(init.cmi):dummy.sml]
[code: 860, data: 56, env: 448 bytes]
[compiling $smlnj/init/(init.cmi):core-intinf.sml]
*** WARNING: no access to exn Div
*** WARNING: no access to exn Div
*** WARNING: no access to exn Div
*** WARNING: no access to exn Div
*** WARNING: no access to exn Div
*** WARNING: no access to exn Div
*** WARNING: no access to exn Div
/home/user/smlnj-110.72/bootstrap/bin/sml: Fatal error -- unexpected fault, signal = 5, code = 0x8000
make[2]: *** [boot.ppc-unix.tgz] Error 1
make[2]: Leaving directory `/home/user/smlnj-110.72'
make[1]: *** [boot] Error 2
make[1]: Leaving directory `/home/user/smlnj-110.72'
",""," *** 2012-01-24 00:18 --- David MacQueen --- DBM:  110.74 builds to a fixpoint on ppc-darwin.   Don't have ppc Linux to test on. ~ "
55,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2010-03-09 11:51","2011-03-22 08:38","2011-03-22 08:38","HashCons equality test doesn't work because tags aren't incremented","The HashCons library doesn't work.
Actually the way it looks probably never did.
The tags that are used for equality testing are never
incremented, so equality testing fails (well actually
always succeeds), resulting in, well, major nonsense.
The fix is one line, marked in source code below with
#added#

Submitted via web form by Jakob Uecker <ja.uecker@jacobs-university.de>
",0,0,0,"None","Generic Unix","SML/NJ Library","None","Critical","","110.72","HashCons","","","In file hash-cons.sml

    fun insert (Tbl{eq, nextTag, tbl}, h, term) = let
	  val tbl' = !tbl
	  val i = Word.toIntX(Word.mod(h, Word.fromInt(Array.length tbl')))
	  val bucket = Array.sub(tbl', i)
	  fun find [] = let
		val id = !nextTag
       #added#	val _ = nextTag := (!nextTag + 0wx1)
		val obj = {nd = term, hash = h, tag = id}
		in
		  Array.update(tbl', i, obj::bucket);
(* check for table resize *)
		  obj
		end
	    | find ((obj as {nd, hash, ...})::r) =
		if (h = hash) andalso eq(term, nd)
		  then obj
		  else find r
	  in
	    find bucket
	  end"," *** 2011-03-22 08:38 --- John Reppy --- Fixed for 110.73 (r3517)"
56,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2010-03-18 15:56","2010-03-23 13:46","2010-03-23 13:46","CM still can't invoke ml-yacc on Windows","The compilation manager still cannot invoke ml-yacc, as I reported
in bug report #50.  The error message is different now, indicating
that something was done, but it still doesn't work.
Submitted via web form by Karl Crary <crary@cs.cmu.edu>
",0,0,0,"x86","Windows XP","CM","Fixed","Minor","XP SP3","110.72","","","","",""
59,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2010-08-30 19:32","2011-04-08 11:36","2011-04-08 11:36","Non-blocking socket functions broken","Non-blocking receive and send functions will block when called
on sockets that have been created by calls to acceptNB. This makes
it impossible to implement a server that uses nonblocking network
I/O functions.
Additional comments:
The problem is found in system/Basis/Implementation/Sockets/socket.sml.

The acceptNB function calls accept(), and once a socket is returned,
it invokes sockNB to wrap it in a Socket.SOCK with {nb = true}. This
is not correct. When accept() is called on a nonblocking listen socket,
the new connection socket it returns does not inherit the nonblockingness
of the listen socket. This causes future calls to recvVecNB and so on
to think that the socket is already nonblocking, when it actually isn	.

Fix:
Here is a patch, to which I release all copyright interest:

Index: socket.sml
===================================================================
--- socket.sml	(revision 3552)
+++ socket.sml	(working copy)
@@ -163,9 +163,6 @@
     val wrapNB_o = OpsysDetails.wrapNB_o
     val wrapNB_b = OpsysDetails.wrapNB_b

-    fun sockB fd = SOCK { fd = fd, nb = ref false }
-    fun sockNB fd = SOCK { fd = fd, nb = ref true }
-
     (* socket address operations *)
     fun sameAddr (ADDR a1, ADDR a2) = (a1 = a2)
     local
@@ -187,13 +184,13 @@
 (** Should do some range checking on backLog *)
     fun listen (SOCK { fd, ... }, backLog) = listen (fd, backLog)

-    fun accept0 (sock, getfd) s = let
+    fun accept0 getfd s = let
 	val (newFD, addr) = accept (getfd s)
     in
-	(sock newFD, ADDR addr)
+	(SOCK { fd = newFD, nb = ref false }, ADDR addr)
     end
-    fun accept s = accept0 (sockB, fdB) s
-    fun acceptNB s = wrapNB_o (accept0 (sockNB, fdNB)) s
+    fun accept s = accept0 fdB s
+    fun acceptNB s = wrapNB_o (accept0 fdNB) s

     fun connect0 getfd (s, ADDR addr) = connect (getfd s, addr)
     fun connect arg = connect0 fdB arg


Submitted via web form by Jacob Potter jdpotter@andrew.cmu.edu
",0,0,0,"None","Generic Unix","Basis Library","None","Critical","Debian lenny","110.72","IO","","I run strace sml test.sml. After startup messages, I get:

socket(PF_INET, SOCK_STREAM, IPPROTO_IP) = 4
setsockopt(4, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
bind(4, {sa_family=AF_INET, sin_port=htons(1234), sin_addr=inet_addr(","fun test () = let
    val listener = INetSock.TCP.socket ()
    val _ = Socket.Ctl.setREUSEADDR (listener, true)
    val _ = Socket.bind (listener, INetSock.any 1234)
    val _ = Socket.listen (listener, 50)
    fun getConnection () = case Socket.acceptNB listener of
            NONE = getConnection ()
          | SOME (conn, addr) = conn

    val conn = getConnection ()
  in
    Socket.recvVecNB (conn, 1)
  end

val _ = test ()"," *** 2011-04-08 11:36 --- John Reppy --- The bug was the way that Socket.acceptNB created new sockets.  They ~ were marked as non-blocking, when they are not, which meant that ~ subsequent attempts to use them in non-blocking I/O would block. ~  ~ Fixed for 110.73"
60,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2010-11-19 15:30","2012-01-18 16:56","2012-01-18 16:56","Incorrect type inference with functor taking/producing polymorphic type","In the problem code, SMLNJ fails to infer the correct type of the `demo function.

When a type annotation is added to the function then the code compiles:


fun demo bd =
   (Data (bd, 1), Data (bd:string Bad.bad_poly, \))
Additional comments:
This bug appeared in SMLNJ 110.63.1 - 110.63 does not have the problem.

It was found in the wild in AliceML (http://www.ps.uni-saarland.de/pipermail/alice-users/2009/000977.html)

Submitted via web form by Gareth garethdanielsmith@gmail.com
",0,0,0,"None","Generic Unix","Compiler","Fixed","Major","","110.72","types","","- use ug.ml;
[opening bug.ml]
bug.ml:16.4-16.33 Error: operator and operand don	 agree [literal]
  operator domain: int Bad.bad_poly * int
  operand:         int Bad.bad_poly * string
  in expression:
    Data (bd,\)

uncaught exception Error
  raised at: ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
","functor MkBad (type 'a bad_poly) =
struct
    type a bad_poly = 'a bad_poly
end

structure Bad = MkBad (type 'a bad_poly = unit)

datatype 'a bad_data = Data of a Bad.bad_poly * 'a

fun demo bd =
   (Data (bd, 1), Data (bd, true))
"," *** 2012-01-18 16:56 --- David MacQueen --- DBM: Fixed by calling ElabUtil.calc_strictness on the body of a DEFtyc instantiated by a functor application in evalTyc in EvalEntityFct.  (Elaborator/modules/evalent.sml). ~ "
61,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2011-01-13 15:43","2011-01-18 19:45","2011-01-18 19:45","Problem with quoting, CM, and Windows","When running CM.make, some of the commands for MS-DOS are provided
in quotes. When passed to the MS-DOS prompt, the quotes from the
beginning and end of the line are stripped, but not the ones in
the middle, causing the command to fail.

Ex:

[C:\Path\To\Command CmdArg]

Goes to the command line as:

C:\Current\Working\DirC:\Path\To\Command CmdArg
Fix:
Im pretty sure this can be fixed by enveloping the entire
command in another layer of quotes. (Yay, windows!)

Submitted via web form by Pavel Krajcevski pavelk@uchicago.edu
",0,0,0,"x86","Other","CM","None","Major","Windows 7","110.72","CM, Windows, Quotes, MSDOS",""," C:\Program Files (x86)\MLton\home\pkrajcev\sml3d\gen\gen-gl-gluesml
 Standard ML of New Jersey v110.72 [built: Fri Feb 05 10:57:49 2010]
 - CM.make sources.cm;
 [autoloading]
 ...
 [C:\SMLNJ\bin\ml-ulex  gl-spec.lex]
 C:\SMLNJ\bin\ml-ulex  gl-spec.lex is not recognized as an internal or extern
 al command,
 operable program or batch file.
 sources.cm:19.5-19.16 Error: tool MLULex failed: C:\SMLNJ\bin\ml-ulex  gl-s
 pec.lex
 [attempting to load plugin $/ml-antlr-tool.cm]
 [library $/ml-antlr-tool.cm is stable]
 [plugin $/ml-antlr-tool.cm loaded successfully]
 [C:\SMLNJ\bin\ml-antlr  gl-spec.grm]
 C:\SMLNJ\bin\ml-antlr  gl-spec.grm is not recognized as an internal or exter
 nal command,
 operable program or batch file.
 sources.cm:20.5-20.16 Error: tool MLAntlr failed: C:\SMLNJ\bin\ml-antlr  gl
 -spec.grm
 [parsing (sources.cm):expand-file.sml]","Im not actually familiar with the SML/NJ source, so I don	 know
where this happens?"," *** 2011-01-18 19:45 --- Lars Bergstrom --- Just tested -- this is fixed in the latest sources: ~  ~ c:\Users\larsberg\sml3d\gen\gen-gl-glue>..\..\..\smlnj\bin\sml.bat ~ Standard ML of New Jersey v110.72 [built: Tue Jan 18 19:40:50 2011] ~ - CM.make sources.cm; ~ [autoloading] ~ [library $smlnj/cm/cm.cm is stable] ~ [library $smlnj/internal/cm-sig-lib.cm is stable] ~ [library $/pgraph.cm is stable] ~ [library $smlnj/internal/srcpath-lib.cm is stable] ~ [library $SMLNJ-BASIS/basis.cm is stable] ~ [autoloading done] ~ stdIn:1.9-1.19 Error: unbound structure: sources in path sources.cm ~ - CM.make ""sources.cm""; ~ [scanning sources.cm] ~ [library $/regexp-lib.cm is stable] ~ [library $/json-lib.cm is stable] ~ [library $/ml-lpt-lib.cm is stable] ~ [attempting to load plugin $/ml-ulex-tool.cm] ~ [library $/ml-ulex-tool.cm is stable] ~ [library $smlnj/cm/tools.cm is stable] ~ [library $smlnj/internal/cm-lib.cm is stable] ~ [plugin $/ml-ulex-tool.cm loaded successfully] ~ [""c:\users\larsberg\smlnj\bin\ml-ulex""  ""gl-spec.lex""] ~ [ml-ulex: parsing] ~ [ml-ulex: DFA gen] ~  100 states in full DFA ~ [ml-ulex: SML gen] ~ [parsing (sources.cm):gl-spec.lex.sml] ~ [creating directory .cm\SKEL] ~ [attempting to load plugin $/ml-antlr-tool.cm] ~ [library $/ml-antlr-tool.cm is stable] ~ [plugin $/ml-antlr-tool.cm loaded successfully] ~ [""c:\users\larsberg\smlnj\bin\ml-antlr""  ""gl-spec.grm""] ~ [ml-antlr: parsing gl-spec.grm] ~ [ml-antlr: checking grammar] ~  22 nonterminals ~  29 productions ~ [parsing (sources.cm):gl-spec.grm.sml] ~ [parsing (sources.cm):expand-file.sml] ~ [parsing (sources.cm):extensions.sml] ~ [parsing (sources.cm):gen.sml] ~ [parsing (sources.cm):gen-func-util.sml] ~ [parsing (sources.cm):gen-glee.sml] ~ [parsing (sources.cm):gen-std.sml] ~ [parsing (sources.cm):gl-types.sml] ~ [parsing (sources.cm):parser.sml] ~ [library $SMLNJ-LIB/Util/smlnj-lib.cm is stable] ~ [compiling (sources.cm):extensions.sml] ~ [creating directory .cm\GUID] ~ [creating directory .cm\x86-win32] ~ [code: 72, env: 846 bytes] ~ [compiling (sources.cm):gl-spec.grm.sml] ~ [code: 32931, data: 283, env: 3771 bytes] ~ [compiling (sources.cm):gl-spec.lex.sml] ~ [code: 26080, data: 188, env: 1331 bytes] ~ [compiling (sources.cm):parser.sml] ~ [code: 3125, data: 101, env: 141 bytes] ~ [compiling (sources.cm):gl-types.sml] ~ gl-types.sml:40.27-42.46 Warning: match nonexhaustive ~           NONE => ... ~           SOME (#""*"",ss) => ... ~  ~ [code: 6067, data: 1291, env: 375 bytes] ~ [compiling (sources.cm):gen-func-util.sml] ~ [code: 2201, data: 77, env: 326 bytes] ~ [compiling (sources.cm):gen-glee.sml] ~ [code: 911, data: 319, env: 286 bytes] ~ [compiling (sources.cm):gen-std.sml] ~ [code: 658, data: 106, env: 285 bytes] ~ [compiling (sources.cm):expand-file.sml] ~ [code: 8026, data: 706, env: 215 bytes] ~ [compiling (sources.cm):gen.sml] ~ gen.sml:28.7-41.12 Warning: match nonexhaustive ~           STRING f => ... ~  ~ gen.sml:20.8-44.6 Warning: match nonexhaustive ~           OBJECT flds => ... ~  ~ [code: 5233, data: 473, env: 188 bytes] ~ [New bindings added.] ~ val it = true : bool ~ -"
62,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2011-01-18 12:02","2011-02-11 16:24","2011-02-11 16:24","Users Guide refers to Compiler structure","The Users Guide in several places refers to the structure
Compiler, which (according to the revision history) was
removed in 2001 and replaced with a stub.
Additional comments:
Are there more cases of changes that are not reflected in the
documentation?

Submitted via web form by Lars-Henrik Eriksson lhe@it.uu.se
",0,0,0,"None","Generic Unix","Other","None","Minor","","110.72","Compiler documentation","","Standard ML of New Jersey v110.72 [built: Wed Feb  3 11:03:59 2010]
- Compiler.Control.Print.printLength := 50;
[autoloading]
[autoloading done]
stdIn:1.1-1.35 Error: unbound structure: Control in path Compiler.Control.Print.printLength
","Compiler.Control.Print.printLength := 50;"," *** 2011-02-11 16:24 --- Lars Bergstrom --- This issue is now fixed. I can't claim that all of the Users' Guide is corrected, but the shift in the Compilers structure has been updated and pushed to the website. *** 2011-01-18 19:55 --- Lars Bergstrom --- I believe that those pages are unfortunately out of date. All of the structures within the Compiler structure have been lifted to top level. ~  ~ For example, print depth is now at: ~ Control.Print.printDepth ~ instead of the old: ~ Compiler.Control.Print.printDepth ~  ~ Sorry! I should get this cleaned up. I'll talk to the Powers about where that content lives."
63,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2011-01-18 18:46","2011-11-26 09:50","2011-11-26 09:50","Comments not lexed correctly in mlyacc grammar files","Comments are not permitted in code snippets:

e.g.,

nonterminal : TOK1 nonterminal2 TOK2 (some code (* comment *))

fails.

Comments are not really lexed as such in the prefix.  The following both fail:

(*
this is comment where the comment start is immediate followed by a newline
*)
open foo
%%

as well as

(* lets put a special string in my comment %% *)
maniacal laughter
Fix:
changeset:   7714:9a0d5c89f1e4
user:        Michael Norrish michael.norrish@nicta.com.au
date:        Wed Jan 12 16:02:09 2011 +1100
files:       c-parser/tools/mlyacc/src/yacc.lex
description:
Fix bug in comment-handling in lexer for mlyaccs input language.

In particular, if a comment was successfully lexed, it returned a BOGUS_VALUE
token, which then messed up the higher-level parsing.  This was due to
the use of the idiom

  continue() before YYBEGIN SOMESTATE

making the return value of the continue the return value for the lexer at
that point.

This bug prevented the use of comments in code sections entirely.

It was somewhat masked in the prefix section by the fact that most
supposed comments there were never lexed as such anyway.  This could
be observed by a file that included %% in a comment in the prefix
section.


diff --git a/c-parser/tools/mlyacc/src/yacc.lex b/c-parser/tools/mlyacc/src/yacc.lex
--- a/c-parser/tools/mlyacc/src/yacc.lex
+++ b/c-parser/tools/mlyacc/src/yacc.lex
@@ -71,11 +71,11 @@
 qualid ={id}.;
 %%
 INITIAL(*	= (Add yytext; YYBEGIN COMMENT; commentLevel := 1;
-		    continue() before YYBEGIN INITIAL);
+		    continue(); YYBEGIN INITIAL; continue());
 A(*		= (YYBEGIN EMPTYCOMMENT; commentLevel := 1; continue());
 CODE(*	= (Add yytext; YYBEGIN COMMENT; commentLevel := 1;
-		    continue() before YYBEGIN CODE);
-INITIAL[^%\n]+ = (Add yytext; continue());
+		    continue(); YYBEGIN CODE; continue());
+INITIAL[^(%\n]+ = (Add yytext; continue());
 INITIAL%%	 = (YYBEGIN A; HEADER (concat (rev (!text)),!lineno,!lineno));
 INITIAL,CODE,COMMENT,F,EMPTYCOMMENT\n  = (Add yytext; inc lineno; continue());
 INITIAL.	 = (Add yytext; continue());


Submitted via web form by Michael Norrish michael.norrish@nicta.com.au
",0,0,0,"None","Generic Unix","ML-Yacc","Fixed","Cosmetic","","110.72","mlyacc lexing","","","As above."," *** 2011-04-08 12:04 --- John Reppy --- Added suggested fix for 110.73. ~ "
64,1,"Open",3,142,"Bug Submitter",105,"Matthias Blume","2011-02-28 18:12","","2011-03-22 08:34","SML/NJ crashes when CML is used together with foreign code","When using CML together with FFI, SML/NJ crashes with:

Fatal error -- Uncaught exception Fail with inconsistent state DEFAULT for signal 20 raised at Basis/Implementation/NJ/internal-signals.sml:346.16-346.24
Additional comments:
Problem only occurs when using CML and FFI code in the same
session. CML alone works fine as does FFI.

I found a workaround and that is to mask sigALRM before running
CML code - so far that appears to fix the problem though Im not
yet sure if it breaks anything else.

structure RunCML = struct

    open RunCML

    local
        open Signals

        val doit = doit
    in
        fun doit args =
          ( maskSignals (MASK [sigALRM])
          ; doit args
          ; unmaskSignals (MASK [sigALRM])
          )
    end
end

Fix:
Workaround mentioned in comments, though its not an actual fix.

Submitted via web form by Ivan Tomac ivan.tomac@gmail.com
",0,0,0,"x86","MacOS X","SML/NJ Library","None","Minor","OS X 10.6.6","110.72","CML, FFI","","Ivan-MacBook:test ivan$ gcc -m32 -O2 -std=c99 -Wall -Wextra -pedantic -c ctest.c
Ivan-MacBook:test ivan$ libtool -dynamic -o ctest.so ctest.o -lc
Ivan-MacBook:test ivan$ ml-nlffigen -dir FFI -cmfile test.cm -include ../library.sml ctest.c
Ivan-MacBook:test ivan$ sml
Standard ML of New Jersey v110.72 [built: Wed Jan 26 00:56:21 2011]
- CM.make 	est.cm;
[autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
[scanning test.cm]
[library $c/c.cm is stable]
[library $cml/cml.cm is stable]
[scanning (test.cm):FFI/test.cm]
[library $c/internals/c-int.cm is stable]
[parsing (test.cm):FFI/(test.cm):f-init.sml]
[creating directory FFI/.cm/SKEL]
[parsing (test.cm):FFI/(test.cm):callop-0.sml]
[parsing (test.cm):FFI/(test.cm):fptr-rtti-0.sml]
[parsing (test.cm):FFI/(test.cm):../library.sml]
[creating directory .cm/SKEL]
[library $c/memory/memory.cm is stable]
[parsing (test.cm):test.sml]
[library $cml/cml-internal.cm is stable]
[library $cml/core-cml.cm is stable]
[compiling (test.cm):FFI/(test.cm):../library.sml]
[creating directory .cm/GUID]
[creating directory .cm/x86-unix]
[code: 559, data: 39, env: 210 bytes]
[compiling (test.cm):FFI/(test.cm):callop-0.sml]
[creating directory FFI/.cm/x86-unix]
[code: 284, env: 261 bytes]
[compiling (test.cm):FFI/(test.cm):fptr-rtti-0.sml]
[code: 528, env: 277 bytes]
[compiling (test.cm):FFI/(test.cm):f-init.sml]
[code: 949, data: 33, env: 189 bytes]
[compiling (test.cm):test.sml]
[code: 540, env: 262 bytes]
$Execute: required privileges are:
  c-int
  primitive
[New bindings added.]
val it = true : bool
- Main.doit ();
/opt/local/share/smlnj/bin/sml: Fatal error -- Uncaught exception Fail with inconsistent state DEFAULT for signal 20 raised at Basis/Implementation/NJ/internal-signals.sml:346.16-346.24","---- ctest.c ----

void init(void) { }

---- test.sml ----

structure Main = struct
    fun loop () = loop () : unit
    fun main () = (F_init.f (); loop ())
    fun doit () = RunCML.doit (main, NONE)
end

---- library.sml ----

(* Helper module to load the object code *)

structure Library = struct
    local
        val lh = DynLinkage.open_lib
            { name = ./ctest.so, global = true, lazy = true }
    in
        fun libh s = let
            val sh = DynLinkage.lib_symbol (lh, s)
        in
            fn () = DynLinkage.addr sh
        end
    end
end

---- test.cm ----

group
is
    $/basis.cm
    $c/c.cm
    $cml/cml.cm
    FFI/test.cm
    test.sml",""
65,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-03-02 17:07","2022-06-27 10:19","2022-06-27 10:19","Garbage collection does not trigger sigGC","A signal handler set to run when sigGC is triggered does not appear to run when forcing GC.
Submitted via web form by Ivan Tomac ivan.tomac@gmail.com
",0,0,0,"x86","MacOS X","Compiler","Fixed","Minor","OS X 10.6.6","110.72","GC, Signals","","rlwrap sml
Standard ML of New Jersey v110.72 [built: Wed Jan 26 00:56:21 2011]
- open Signals;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
opening Signals
  eqtype signal
  datatype sig_action
    = DEFAULT
    | HANDLER of signal * int * unit ?.Cont.cont - unit ?.Cont.cont
    | IGNORE
  val listSignals : unit - signal list
  val toString : signal - string
  val fromString : string - signal option
  val setHandler : signal * sig_action - sig_action
  val overrideHandler : signal * sig_action - sig_action
  val inqHandler : signal - sig_action
  datatype sigmask = MASK of signal list | MASKALL
  val maskSignals : sigmask - unit
  val unmaskSignals : sigmask - unit
  val masked : unit - sigmask
  val pause : unit - unit
  val sigINT : signal
  val sigALRM : signal
  val sigTERM : signal
  val sigGC : signal
- setHandler (sigGC, HANDLER (fn (_, _, k) = (print **** GC ****\n; k)));
val it = IGNORE : sig_action
- SMLofNJ.Internals.GC.doGC 100000;
[autoloading]
[autoloading done]
val it = () : unit","(* From the REPL *)
open Signals;
setHandler (sigGC, HANDLER (fn (_, _, k) = (print **** GC ****\n; k)));
SMLofNJ.Internals.GC.doGC 100000;"," *** 2022-06-27 10:19 --- John Reppy --- Fixed for 110.99.3 and 2022.1. *** 2022-06-01 18:04 --- John Reppy --- Also see #291"
66,2,"Closed",3,142,"Bug Submitter",105,"Matthias Blume","2011-03-08 17:33","2022-06-30 08:18","2022-06-30 08:18","Real.toLargeInt hangs when rounding mode has been previously  set to TO_ZERO","Real.toLargeInt hangs if the global rounding mode has been set to
 TO_ZERO.

Fix:
(* Sorry *)

Submitted via web form by Dan DuVarney duvarney@gmail.com
",0,0,0,"x86","Other","SML/NJ Library","Fixed","Major","Windows 7 x64","110.72","reals, basis library","","Standard ML of New Jersey v110.72 [built: Fri Feb 05 10:57:49 2010]
- IEEEReal.setRoundingMode IEEEReal.TO_ZERO ;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val it = () : unit
- Real.toLargeInt IEEEReal.TO_ZERO 10.0 ;
[autoloading]
[autoloading done]

Interrupt
-
","IEEEReal.setRoundingMode IEEEReal.TO_ZERO;
Real.toLargeInt IEEEReal.TO_ZERO 10.0;
"," *** 2022-06-30 08:18 --- John Reppy --- This was fixed at some point (at least in the 64-bit branch). *** 2011-03-22 10:02 --- John Reppy --- It looks like the problem is in the function Real64.toLargeInt"
67,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-03-14 15:49","2011-03-22 08:33","2011-03-22 08:33","Installation fails on mac OSX (10.7, Lion)","Installation using PKG installer fails on Mac OSX (10.7, Lion).

This is a simple fix, please add the following line to smlnj-110.72/config/_arch-n-opsys between lines 66 and 67

11*) OPSYS=darwin;  HEAP_OPSYS=darwin ;; # MacOS X 10.7

This fixes the problem. OSX Lion uses Kernal release version 11.
Thanks guys!

Fix:
Add the following line to smlnj-110.72/config/_arch-n-opsys between lines 66 and 67

11*) OPSYS=darwin;  HEAP_OPSYS=darwin ;; # MacOS X 10.7

Submitted via web form by Scott dieselpower44@me.com
",0,0,0,"x86","MacOS X","Installer","None","Major","10.7","110.72","osx, install, postinstall, script","","",""," *** 2011-03-22 08:33 --- John Reppy --- Fixed for 110.73 (r3578)"
68,2,"Closed",3,103,"John Reppy",105,"Matthias Blume","2011-04-08 11:50","2011-05-13 12:56","2011-05-13 12:56","CM anchors for CML need rationalization","The naming convention for CML's CM files needs to be rationalized.
The proposed convention is:

  $cml/basis.cm          -- the CML version of $/basis.cm
  $cml/cml.cm             -- core CML features
  $cml/cml-lib.cm        -- CML library code (currently merged
                                    into $cml/cml-lib/smlnj-lib.cm)
  $cml/trace-cml.cm    -- TraceCML library for debugging
  $cml/smlnj-lib.cm     -- CML version of the $/smlnj-lib.cm
",0,0,0,"All","All","CM","None","Major","","110.72","CML, CM","","","",""
69,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-05-05 13:16","2011-05-09 16:37","2011-05-09 16:37","String.scan function missing from basis library","The scan function is missing from both the STRING signature and
the String structure in the SMLNJ implementation of the Standard
ML Basis library.
Submitted via web form by James Bostock james.bostock@gmail.com
",0,0,0,"None","Generic Unix","Basis Library","None","Minor","","110.72","","","$ sml string_scan.sml
Standard ML of New Jersey v110.72 [built: Sun May 16 15:16:12 2010]
[opening string_scan.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
string_scan.sml:1.27-1.38 Error: unbound variable or constructor: scan in path String.scan
/usr/lib/smlnj/bin/sml: Fatal error -- Uncaught exception Error with 0
 raised at ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
","$ cat string_scan.sml
case StringCvt.scanString String.scan \  test  \ of
  SOME s = print (\s = \\\\\ ^ s ^ \\\\\\\n\)
| NONE = print \No string in there\\n\;
"," *** 2011-05-09 16:37 --- John Reppy --- Fixed for 110.73"
70,2,"Closed",3,103,"John Reppy",103,"John Reppy","2011-05-13 13:01","2011-05-13 16:14","2011-05-13 16:14","confusing error message when trying to install on 64-bit Linux without 32-bit support","SML/NJ is a 32-bit system, which means that it cannot be installed on 64-bit Linux, unless the 32-bit emulation libraries are available.  The error messages that are produced during installation in this case are confusing.  E.g.,

% gcc -m32 x.c
In file included from /usr/include/features.h:354,
                 from /usr/include/stdio.h:28,
                 from x.c:3:
/usr/include/gnu/stubs.h:7:27: error: gnu/stubs-32.h: No such file or directory
",0,0,0,"x86","Linux","Installer","None","Minor","","110.72","","","",""," *** 2011-05-13 16:14 --- John Reppy --- As of version 110.73, the install script tests for this situation and prints a message."
71,1,"Open",3,142,"Bug Submitter",105,"Matthias Blume","2011-05-18 19:00","","2011-07-05 17:08","ml-makedepend trashes dependency file on error","The ml-makedepend tool will generate an empty file that overwrites
the existing dependency file, when there is an error in the
compilation (e.g., ml-antlr fails).  This means that subsequent
attempts to run make will not have any dependency information.
Additional comments:
ml-mkdepend should only generate a new dependency file when there
are no errors.

Submitted via web form by John Reppy jhr@cs.uchicago.edu
",0,0,0,"None","Generic Unix","CM","None","Major","","110.73","CM","","","",""
72,2,"Closed",3,142,"Bug Submitter",118,"Allen Leung","2011-05-26 00:37","2022-06-30 08:15","2022-06-30 08:15","regalloc broken","The code below raises an exception in register allocation

Additional comments:
Sadly, I don	 know enough about the SMLNJ compiler internals to fix

Submitted via web form by Ryan Pearl rpearl@andrew.cmu.edu
",0,0,0,"None","Linux","Compiler","Won't Fix","Major","2.6.31-23-generic ","110.72","","","[22:35]rpearl@silverhold:~$ sml break.sml
Standard ML of New Jersey v110.72 [built: Wed Feb  3 11:03:59 2010]
[opening break.sml]
=========== K=6 ===========
1[1] --
2[2] --
3[3] --
5[5] --
6[6] --
8m{%8} --
9m{%9} --
10m{%10} --
11m{%11} --
12m{%12} --
13m{%13} --
14m{%14} --
15m{%15} --
16m{%16} --
17m{%17} --
18m{%18} --
19m{%19} --
20m{%20} --
21m{%21} --
22m{%22} --
23m{%23} --
24m{%24} --
25m{%25} --
26m{%26} --
27m{%27} --
28m{%28} --
29m{%29} --
30m{%30} --
31m{%31} --
514s{1} --
515a = 6[6]
516a = 3[3]
517a = 1[1]
518a = 2[2]
519s{2} --
521a = 5[5]
524r -- 6[6] 5[5] 3[3] 2[2] 1[1]
525 -- 526 6[6] 5[5] 3[3] 2[2] 1[1]
526 -- 525 6[6] 5[5] 3[3] 2[2] 1[1]
527r -- 6[6] 5[5] 3[3] 2[2] 1[1]
Spill candidates:
526 525
Error: MLRisc bug: RegisterAllocator.chooseVictim

unexpected exception (bug?) in SML/NJ: Error [Error]
  raised at: ../../MLRISC/control/mlriscErrormsg.sml:21.14-21.19
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:296.17-296.20
/Users/rpearl/bin/sml: Fatal error -- Uncaught exception Error with 0
 raised at ../../MLRISC/control/mlriscErrormsg.sml:21.14-21.19","fun break n j =
  let val k = j + 1
  in
  (k, if j = n then j else k)
  end
"," *** 2022-06-30 08:15 --- John Reppy --- This bug is fixed with the switch to the LLVM back end.  At this point, I do not think that we will try to fix it in the legacy version, so I am closing it."
73,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2011-06-08 14:57","2011-11-26 10:01","2011-11-26 10:01","Compiler crash when compiling Manticore+MLton in one tree","The compiler crashes with an error Uncaught exception Option with 0. From the line it occurs on, this appears to be a call to valOf on NONE somewhere in the compiler.
Additional comments:
Sorry for the calls to ml-lex before the make. MLton source code uses their own version of the basis, which does not contain all types mentioned in the output from ml-ulex --ml-lex-mode.


Submitted via web form by Lars Bergstrom larsberg@cs.uchicago.edu
",0,0,0,"x86","MacOS X","Compiler","Invalid","Critical","","110.73","","","[scanning (55161-export.cm):driver/(x86_64-darwin.cm):(sources.cm):../mlton/(sources.cm):front-end/(sources.cm):(ml-yacc-lib-proxy.cm):../../../../lib/mlyacc-lib/ml-yacc-lib.cm]
[parsing (55161-export.cm):55161-export.sml]
[compiling (55161-export.cm):55161-export.sml]
[code: 958, data: 78, env: 40 bytes]
/Users/larsberg/smlnj/bin/.run/run.x86-darwin: Fatal error -- Uncaught exception Option with 0
 raised at smlnj/init/pre-perv.sml:21.28-21.34

make[2]: *** [pmlc.x86-darwin] Error 1
make[1]: *** [build] Error 2
make: *** [build] Error 2
[larsberg@boot mlton-frontend]$
","1) make sure you have an SML/NJ installation in the path.

2) Enlist in the Manticore MLton-frontend branch

svn co --username anonsvn https://smlnj-gforge.cs.uchicago.edu/svn/manticore/branches/mlton-frontend

password: anonsvn (two times, once for the benchmarks tree)

3) Configure and do a first build of the tree
cd mlton-frontend
autoheader -Iconfig
autoconf -Iconfig
./configure
pushd src/tools/mc/mlton/front-end
ml-lex ml.lex
ml-lex mlb.lex
popd
make local-install

4) To remake with just the crash:
cd src/tools/mc
sml
CM.make sources.cm;


"," *** 2011-06-08 15:03 --- Lars Bergstrom --- Nevermind, managed to track it down myself."
74,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-07-05 16:06","2011-07-05 17:07","2011-07-05 17:07","Errors in ml-lpt manual","There appear to be some errors in the ml-lpt manual:

The type given for the lex function at the start of chapter 2 should be:

val lex : AntlrStreamPos.sourcemap - strm -
lex_result * AntlrStreamPos.span * strm


In the sample CM file (fig 5.1), \\\CalcLex\\\ should be \\\CalcLexer\\\ and
\\\CalcParse\\\ should be \\\CalcParseFn\\\.

In the sample ml-ulex file (fig 5.2), the \\\T.\\\ prefix should be
dropped from the token values.

In the sample ml-antlr file (fig 5.3), the expressions multExp::SR
and prefixExp::SR need to be parenthesised.
Submitted via web form by James Bostock
",0,0,0,"None","Generic Unix","ML-ANTLR","None","Cosmetic","N/A","110.73","","","",""," *** 2011-07-05 17:07 --- John Reppy --- Fixed for 110.74"
75,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-07-19 16:51","2011-11-26 09:49","2011-11-26 09:49","basis library documentation out of sych with implementation","The documentation for at least one structure in the Basis library
is out of sync with the code distributed in my version of SML/NJ.
Specifically, smlnj.org offers this documentation for the Array
structure:

http://www.smlnj.org/doc/basis/pages/array.html

but standardml.org has this version

http://www.standardml.org/Basis/array.html
http://www.standardml.org/Basis/array-slice.html

The distribution of SML/NJ appears to follow the documentation
from standardml.org, not smlnj.org. Examples of this are shown
in the sections below.
Fix:
Update the html documentation, at least for the Array structure, to reflect the version of the SML standard thats currently implemented.

Submitted via web form by Ian Voysey ivoysey@cmu.edu
",0,0,0,"x86","MacOS X","Basis Library","Invalid","Minor","10.6.8","110.71","","","","Standard ML of New Jersey v110.71 [built: Thu Sep 17 16:48:42 2009]
- Array.collate (* this shouldn	 exist, according to smlnj.org *);
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val it = fn : (a * a - order) - a array * a array - order
- Array.modifyi
(* should have type ((int * a) - a) - (a array * int * int option) - unit *);
val it = fn : (int * a - a) - a array - unit
- Array.modifyi (fn _ = 1) (Array.fromList [0], 0, NONE);
stdIn:5.1-5.56 Error: operator and operand don	 agree [tycon mismatch]
  operator domain: int array
  operand:         int array * int * Z option
  in expression:
    (Array.modifyi (fn _ = 1)) (Array.fromList (0 :: nil),0,NONE)
- ArraySlice.length (* shouldn	 exist, according to smlnj.org *);
[autoloading]
[autoloading done]
val it = fn : a ArraySlice.slice - int
-
"," *** 2011-07-19 17:15 --- John Reppy --- The issue is that Ian found an old version of the Basis specification that was before the addition of the Slice structures."
76,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-08-04 01:03","2011-11-25 13:51","2011-11-25 13:51","blastWrite crashes","I encounter a crash of the SML/NJ environment, if I try to
call Unsafe.blastRead to read a byte stream marshalled by
Unsafe.blastWrite.

Both Windows and Linux yeild the problem.
Windows: A pop-up menu appears.

Linux: I get the following messages:
Fatal error -- bogus fault not in ML: sig = 11, code = 0x46cafc, pc = 0x46cafc)
Submitted via web form by Masaya Saito saitohm@ism.ac.jp
",0,0,0,"x86","Other","SML/NJ Library","None","Major","Windows 7","110.71","Unsafe operations","","","val y0 =  {a=1,b=2.0,c=(5.3,4.5)}: {a:int, b:real, c:real*real};
val z = Unsafe.blastWrite y0;
val y = Unsafe.blastRead z: {a:int, b:real, c:real*real};"," *** 2011-11-25 13:51 --- John Reppy --- Fixed for 110.74. ~ [2011-11-25] *** 2011-11-25 12:29 --- John Reppy --- Committed a fix for the segmentation fault, but the underlying problem with blastWrite remains. ~ [2011-11-25]"
77,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2011-08-19 14:01","2012-01-16 23:02","2012-01-16 23:02","strange error message for syntax error","A syntax error results in a strange type error message.
Submitted via web form by John Reppy jar@cs.uchicago.edu
",0,0,0,"All","Generic Unix","Compiler","Fixed","Minor","any","110.73","datatype replication syntax","","- structure S = struct
=   datatype foo = A | B of bar
=   and bar = Bar of int
= end;
structure S :
  sig
    datatype foo = A | B of bar
    datatype bar = Bar of int
  end
- datatype foo = datatype S.foo
= and bar = datatype S.bar;
stdIn:14.1-15.25 Error: argument type variables in datatype replication
","structure S = struct
  datatype foo = A | B of bar
  and bar = Bar of int
end;

datatype foo = datatype S.foo
and bar = datatype S.bar;  (* using and here is incorrect *)
"," *** 2012-01-16 23:02 --- David MacQueen --- Fixed by changing ml.grm so that this example causes a syntax error instead, as it should.  Changes required revising art, with follow-up changes to elaborator, cm, etc. ~ "
78,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-09-05 11:21","2019-08-18 10:42","2019-08-18 10:42","Floating point exceptions are not handled correctly on Solaris x86.","Floating point exceptions are not handled correctly (or at all) under Solaris x86.

This makes sml/nj only handle integer values up to 2^29 correctly.

The problem is present in 110.59, 110.72 and 110.73.
The problem is NOT present in 110.0.7.
I have not tested other versions.

Additional comments:
I only copied some defines for from the Solaris sparc parts and that
seem to have fixed the problem.

% sml-test
Standard ML of New Jersey v110.73 [built: Mon Sep  5 17:40:30 2011]
- 536870910+1;
val it = 536870911 : int
- 536870910*2;
val it = 1073741820 : int
- 536870910*4;

uncaught exception Overflow [overflow]
  raised at: file stdIn
-


Fix:
--- ./runtime/mach-dep/signal-sysdep.h~ 2009-09-13 19:50:53.000000000 +0200
+++ ./runtime/mach-dep/signal-sysdep.h  2011-09-05 17:32:03.031470000 +0200
@@ -499,6 +499,12 @@
 #  elif defined(OPSYS_SOLARIS)
      /** x86, Solaris */

+#    define SIG_FAULT1 SIGFPE
+#    define INT_DIVZERO(s, c)          (((s) == SIGFPE)  ((c) == FPE_INTDIV))
+#    define INT_OVFLW(s, c)            (((s) == SIGFPE)  ((c) == FPE_INTOVF))
+
+#    define SIG_GetCode(info,scp)      ((info)-si_code)
+
 #    define SIG_GetPC(scp)             ((scp)-uc_mcontext.gregs[EIP])
 #    define SIG_SetPC(scp, addr)       { (scp)-uc_mcontext.gregs[EIP] = (int)(addr); }
 #    define SIG_ZeroLimitPtr(scp)      { ML_X86Frame[LIMITPTR_X86OFFSET] = 0; }


Submitted via web form by Joel Fredrikson Joel.Fredrikson@it.uu.se
",0,0,0,"x86","Solaris","Compiler","Fixed","Minor","5.10","110.73","FPE, Arithmetic Exception, Solaris, x86","","% sml
Standard ML of New Jersey v110.72 [built: Wed Oct 13 15:17:13 2010]
- 536870909+1;
val it = 536870910 : int
- 536870910+1;
Arithmetic Exception
%

","536870910+1;

"," *** 2019-08-18 10:42 --- John Reppy --- This bug appears to have been fixed some time ago."
79,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-09-09 16:51","2014-08-20 08:08","2014-08-20 08:08","ml-lpt: inconsistent treatment of %defs directive between ml-antlr and ml-ulex","Both ml-antlr and ml-ulex provide a %defs directive to
include user provided code in the parser or lexer.

Ml-antlr puts this code in a UserCode structure, hidden within a
local block making it inaccessible outside of the parser
functor.

Ml-ulex, on the other hand, puts the user provide code in a
UserDeclarations structure that is accessible outside of the
lexer structure.


Submitted via web form by James Bostock
",0,0,0,"None","Generic Unix","ML-ANTLR","Fixed","Cosmetic","","110.72","","","",""," *** 2014-08-20 08:08 --- John Reppy --- Changed ml-ulex to hide the UserDeclarations structure inside a local (like ml-antlr does)."
80,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-09-12 03:21","2011-10-25 21:06","2011-10-25 21:06","Installation fails on Linux 3.0","Installation fails on Linux 3.0 because of missing
.*-entry in config/_arch-n-opsys.

Additional comments:
With the following fix everything seems to work again.

Fix:
Please add the following line in config/_arch-n-opsys
between .6.*) ;; and *) exit 1 ;;:

          3.*) ;;



Submitted via web form by CaB
",0,0,0,"x86","Linux","Installer","None","Minor","3.0","110.73","","","$ uname -m
i686
$ uname -r
3.0-ARCH

$ config/install.sh n
config/install.sh: Using shell /bin/sh.
config/install.sh: SML root is /tmp/smlnj.
config/install.sh: Installation directory is /tmp/smlnj.
config/install.sh: Installing version 110.73.
config/install.sh: URL of source archive is http://smlnj.cs.uchicago.edu/dist/working/110.73/.
config/install.sh: !!! Script /tmp/smlnj/bin/.arch-n-opsys fails on this machine.
config/install.sh: !!! You must patch this by hand and repeat the installation.
","# config/_arch-n-opsys
  ...
  Linux)
    OPSYS=linux
    case `uname -m` in
      *86)
        ARCH=x86
      # we no longer support Linux before the 2.2 kernel.
        case `uname -r` in
          2.2.*) ;;
          2.3.*) ;;
          2.4.*) ;;
          2.5.*) ;;
          2.6.*) ;;
          *) exit 1 ;;
        esac
        ;;
  ...
"," *** 2011-10-25 21:06 --- Lars Bergstrom --- Fixed. We now support all 3.x kernels. *** 2011-10-08 14:55 --- Lars Bergstrom --- I think we should probably match 3.0.*, not just 3.*. I will try to track down a Linux machine with a 3.x kernel over the next few weeks."
81,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-10-16 16:43","2011-10-25 21:06","2011-10-25 21:06","sml/nj does not work with Linux 3.0","Due to an operating system version check sml/nj will
neither install (using install.sh) nor run
(if already installed before the kernel upgrade).

(I suspect this is the reason for the removal of smlnj
from the Ubuntu repositories as it no longer works on the
newest version of Ubuntu.)
Additional comments:
I did not include the transcript as the bug occurred on a
friends machine.

Fix:
Add 3.0.* or 3.* to the switch in .arch-n-opsys

After line 95 adding:

3.0.*) ;;

or

3.*) ;;

Fixes the problem.

Submitted via web form by Kaida kaidadragonfly@gmail.com
",0,0,0,"None","Linux","Other","None","Critical","3.0","110.73","kernel, linux, ubuntu","","","Attempt to install smlnj on top of Linux 3.0.

(Ubuntu 11.10 ships with a 3.0 kernel.)"," *** 2011-10-25 21:06 --- Lars Bergstrom --- Fixed. We now support all 3.x kernels. *** 2011-10-24 13:08 --- John Reppy --- Same as bug #80"
83,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-10-25 20:39","2011-11-26 09:57","2011-11-26 09:57","No support for Kernel 3.x ","It is not possible to start sml/nj on an x686 machine running a
kernel newer than 2.6, due to the immensely ugly \.arch-n-opsys\
script that apparently is run when you start sml/nj.

Ubuntu 11.10 ships with kernel 3.0.0-11-generic, and is thus not
supported. Someone seems to have made a temporary fix [1], however
that script seriously ought to be fixed. As far as I can see, then
the only reason why kernel versions are being explicitly checked,
is because kernel 2.2.x and below is not supported (as no extra
flags are set in the specific cases).

x86_64 seems to just fall back on x86, without having this check
for kernel  2.2. Maybe this entire script ought to have an audit
as it seems like hack upon hack upon hack...

  [1] : https://answers.launchpad.net/ubuntu/+source/smlnj/+question/174447
Submitted via web form by Jesper Reenberg jesper.reenberg@gmail.com
",0,0,0,"x86","Linux","Other","Fixed","Critical","Ubuntu 11.10","110.72-1",".arch-n-opsys","","$ sml
sml: unable to determine architecture/operating system
$ uname -r
3.0.0-11-generic
$ uname -m
i686

","Try to start sml/nj on an x686 machine with a kernel newer than 2.6."," *** 2011-10-25 21:06 --- Lars Bergstrom --- Fixed. We now support all 3.x kernels."
84,1,"Open",3,142,"Bug Submitter",100,"Nobody","2011-11-14 16:56","","2016-06-30 13:46","No shebang support","Its useful to begin scripts in other programming languages with a shebang.

hello.py:

#!/usr/bin/env python
print Hello World!

This allows a script to be run with dot slash notation in Unix, Linux, and Mac OS X.

In other words, while you can already do this:

$ python hello.py
Hello World!

It is useful to treat a script as if it were a binary:

$ ./hello.py
Hello World!

We can come close to this behavior in SML:

hello.sml:

print Hello World!\n;
OS.Process.exit(OS.Process.success);

$ sml hello.sml
Hello World!

However, when we add the proper shebang, SML/NJ borks.

hello.sml:

#!/usr/bin/env sml
print Hello World!\n;
OS.Process.exit(OS.Process.success);

Example:

$ ./hello.sml
Standard ML of New Jersey v110.72 [built: Mon Nov 14 17:30:10 2011]
[opening ./hello.sml]
./hello.sml:1.12-1.15 Error: unbound variable or constructor: env
./hello.sml:1.16-1.19 Error: unbound variable or constructor: sml
./hello.sml:1.8-1.11 Error: unbound variable or constructor: bin
./hello.sml:1.1-1.4 Error: unbound variable or constructor: #!/
./hello.sml:1.4-1.7 Error: unbound variable or constructor: usr
/opt/local/share/smlnj/bin/sml: Fatal error -- Uncaught exception Error with 0
 raised at ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27

The solution is for SML to treat #!...\n as a comment. This is already being discussed in Successive ML.

Futhermore, I lied. When you submit the following code to SML:

hello.sml:

print Hello World!\n;
OS.Process.exit(OS.Process.success);

SML spits out a bunch of spurious warnings and statements.

$ sml hello.sml
Standard ML of New Jersey v110.72 [built: Mon Nov 14 17:30:10 2011]
[opening hello.sml]
Hello World!
val it = () : unit
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
hello.sml:2.1-2.36 Warning: type vars not generalized because of
   value restriction are instantiated to dummy types (X1,X2,...)

These really get in the way of scripting, because they gum up command line interfaces. Can some of these be turned off by default? Or, could SML/NJ add a special -script flag that disables such warnings?
Fix:
Consider #!...\n a comment.

Disable some warnings by default, or add a -script option.

Submitted via web form by Andrew Pennebaker andrew.pennebaker@gmail.com
",0,0,0,"None","None","None","None","Minor","","","","","",""," *** 2011-11-25 13:55 --- John Reppy --- Probably the right way to address this request is to implement a wrapper program for running scripts.  The wrapper could strip off the ""#!"" line and submit the rest of the code to the sml program. ~ "
85,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2011-11-16 05:59","2014-08-20 08:22","2014-08-20 08:22","top-level identfiers in generated code clash with legacy code","This is a feature which is a critical bug for me!

ml-yacc (and to a lesser extent ml-lex) generated parsers exploit
assumptions about the top-level identifiers in the standard basis,
as per http://www.standardml.org/Basis/top-level-chapter.html

While porting some ancient (njsml 0.93 compilable) legacy software,
I encountered MANY hard-to-debug (until I figured out the global
problem) type errors/incompatibilities arising from use of
top-level identifiers (esp. for List primitives) and those in the
legacy code.

I agree with the principle regarding convenience which governs
top-level visibility, but for code-generators such as ml-yacc,
it seems much safer to adhere to signature-closed code in the
generated parsers (not least because the code generating sections
are fixed once and for all, so it only involves a one-time
change to the ml-yacc, ml-lex code base).
Additional comments:
I don	 know if this counts as a bug report, or merely a gripe,
but it certainly means I won	 be re-releasing this legacy code
in a hurry, given the extra work necessary to get it to compile.

It counts as critical for me, but maybe only of philosophical
interest to others!

There is a tension between the design principle articulated in the
Standard Basis document regarding pragmatics/convenience of having
top-level non-module identifiers visible, and the discipline
(originally Dave MacQueens?) of writing signature-closed code.

Theres a separate comment/bug report to file about how the type
signatures (and semantics!) of Standard Basis functions changed,
and the consequences for legacy code, but hey!
One source of knock-on viscosity is enough.

Fix:
Simple examples can easily be repaired by systematic renaming of
identifiers in legacy code, but thats the whole point! I was
lucky, and had access to source, but others may not be.

My solution was entirely ad-hoc: to hack the sources of ml-yacc
locally, and import base.sig etc. by hand into the source tree,
until such time as I could systematically eliminate all type
incompatibilities.

A better solution is as indicated above: write code generators
in a signature-closed way, as if your (defensive programmers)
expectation is that code will be deployed in a (type-)hostile
environment...


Submitted via web form by James McKinna james.mckinna@cs.ru.nl
",0,0,0,"x86","All","ML-Yacc","Fixed","Minor","Ubuntu 8.x","110.xy","legacy software, portability, ml-yacc, ml-lex","","","Too involved to deal with here.

Simple examples can easily be repaired by systematic renaming of
identifiers in legacy code, but thats the whole point!

But: List.rev is a (the?) major offender here.
(alternatively, be careful if you should rebind
ev in your
own code, and want ml-yacc generated parsers to work)"," *** 2014-08-20 08:22 --- John Reppy --- We have fixed the examples that we can detect by hand and also for the ml-opt tools.  No response from the original bug submitter, so we'll assume that it is fixed. *** 2011-11-26 10:39 --- John Reppy --- Fixed two unqualified IDs, but waiting for submitter response before closing the bug. ~ [2011-11-26] ~  *** 2011-11-16 12:03 --- Lars Bergstrom --- Without commenting on the signature-closed code issue, I can provide a fairly straightforward workaround. This issue is something we run into frequently in the context of generated code and the MLton compiler, which internally uses a modified Basis library built on top of the normal one. The trick that we use is to wrap the generated files in a CM file that provides the environment they expect. For example: ~  ~ Library ~   structure Parser ~ is ~   $/basis.cm ~   $/smlnj-lib.cm ~   parser.sml ~  ~ This does, unfortunately, mean that any SML code in productions has to use newspeak-List. But, it should hopefully be easier to adapt just the .lex/.grm files than the entire source codebase. In case it helps, I also attached a very small example .tgz that shows how to do this wrapping for simple SML files and a trivial change to the List structure (making app take its arguments tupled instead of curried)."
86,2,"Closed",3,142,"Bug Submitter",128,"Lars Bergstrom","2011-12-09 07:43","2012-01-21 16:38","2012-01-21 16:38","Structure C does not exist in Windows binary of 110.72 and 73.","I tried to update from 110.71 to 110.72 and 110.73
using Windows installer, smlnj.msi.
Then, I found that both of versions 110.72 and 110.73 do not
have lib/c.
Is structure C ($c/c.cm) no longer included in Windows binary of
110.72 and later?

Submitted via web form by Masaya Saito saitohm@ism.ac.jp
",0,0,0,"x86","Windows Vista","C Interface Library","None","Minor","Vista and 7","110.72","","","",""," *** 2012-01-21 16:38 --- Lars Bergstrom --- I fixed this for the 110.74 release. Also, the config/targets file has now been updated so that this will not be missed again. *** 2011-12-21 09:50 --- Lars Bergstrom --- This observation is correct. I failed to uncomment ml-nlffi-lib in config/targets when I last built SML/NJ. Next release, I will bring this file in line with the one we ship for OSX."
87,2,"Closed",3,128,"Lars Bergstrom",128,"Lars Bergstrom","2012-01-27 18:13","2012-08-03 17:32","2012-08-03 17:32","Buildling SML/NJ on WIndows fails if there is a number in the path","Just try to run config\install.bat from a directory with a number in the path. If you do, it will fail shortly after it enters the ""bin\sml.bat -m $smlnj/installer.cm"" command, as it will fail to copy ml-antlr.bat to the bin directory and the HTML4 package will fail to build and error out.",0,0,0,"x86","Windows XP","Other","Invalid","Minor","","","","","",""," *** 2012-08-03 17:32 --- Lars Bergstrom --- This does not reproduce. I believe it was an issue with directory permissions on the machine where it happened."
88,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2012-02-02 06:15","2012-02-05 06:58","2012-02-05 06:58","Support for UTF8 path names","Some of the OS.Path functions use the checkArc function to check the validity of arcs of paths.  This does not play well with UTF8-encoded paths (which otherwise more or less work).

For example, if I have a directory ��� and I do
OS.FileSys.openDir ���
I get no problems, whereas
OS.Path.concat (���, abc)
I do.
Additional comments:
I see that validArc in Basis/Implementation/Unix/os-path.sml uses Char.isPrint, which is strictly speaking not correct for Unix paths (which allow anything but / and \0), and also the root of the problem.  The Windows implementation in Basis/Implementation/Win32/os-path.sml seems more sane.

Submitted via web form by Michael Westergaard m.westergaard@tue.nl
",0,0,0,"None","Other","Basis Library","Fixed","Major","Tested on OS/X Lion and Windows XP (using the Cygwin-compiled compiler)","110.74","UTF8, OS.Path","","- OS.FileSys.openDir /Users/michael;
val it = DS {dirStrm=-,isOpen=ref true} : ?.OS_FileSys.dirstream
- val d = it;
val d = DS {dirStrm=-,isOpen=ref true} : ?.OS_FileSys.dirstream
- OS.FileSys.readDir d;
val it = SOME .abbot.properties : string option

and so on, until

- OS.FileSys.readDir d;
val it = SOME \95\134\195\152A\204\138 : string option
- val s =
Option.valOf it;
val s = \95\134\195\152A\204\138 : string
- val m = String.concat [/Users/michael/, s];

- OS.FileSys.openDir m;
val it = DS {dirStrm=-,isOpen=ref true} : ?.OS_FileSys.dirstream
- OS.Path.concat (m, abc);

uncaught exception InvalidArc
  raised at: Basis/Implementation/OS/os-path-fn.sml:47.62-47.72
- OS.Path.concat (���, abc);

uncaught exception InvalidArc
  raised at: Basis/Implementation/OS/os-path-fn.sml:47.62-47.72
","For example, if I have a directory ��� and I do
OS.FileSys.openDir ���
I get no problems, whereas
OS.Path.concat (���, abc)
I do."," *** 2012-02-05 06:58 --- John Reppy --- Fixed for 110.75.  We now accept any character except slash or null."
89,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2012-02-02 06:59","2012-08-02 12:36","2012-08-02 12:36","Building on OS X Lion","When building on my Mac, I get errors due to the build script trying to load include files from /Developer/SDKs/MacOSX10.5.sdk.  As I am using Lion and has a fairly recent clean installation of the developer tools, I do not have this directory.  Symlinking /Developer/SDKs/MacOSX10.7.sdk to the location fixes the problem, but it would probably be nicer to go with the newer SDK or auto-detect the newest one in the build process).
Submitted via web form by Michael Westergaard m.westergaard@tue.nl
",0,0,0,"x86","MacOS X","Other","Fixed","Cosmetic","OS X Lion","110.74","osx, building","","echo v-x86-darwin  v-x86-darwin
cc -m32 -ansi -c -g -O2 -D_DARWIN_C_SOURCE -isysroot /Developer/SDKs/MacOSX10.5.sdk -mmacosx-version-min=10.5 -I../config -I../objs -I../include ../config/gen-common.c
../config/gen-common.c:8:19: error: stdio.h: No such file or directory
../config/gen-common.c:9:20: error: stdlib.h: No such file or directory
In file included from ../config/gen-common.c:10:
../config/gen.h:11: error: expected �=�, �,�, �;�, �asm� or �__attribute__� before �*� token
../config/gen.h:12: error: expected �)� before �*� token
../config/gen-common.c:16: error: expected �=�, �,�, �;�, �asm� or �__attribute__� before �*� token
../config/gen-common.c:47: error: expected �)� before �*� token
make[1]: *** [gen-common.o] Error 1
make: *** [all] Error 2
","N/A"," *** 2012-08-02 12:36 --- John Reppy --- Fixed for 110.75 *** 2012-02-05 06:36 --- John Reppy --- Known issue, but we need to automate the handling of it in config/install.sh."
90,1,"Open",3,142,"Bug Submitter",105,"Matthias Blume","2012-02-02 07:03","","2012-02-05 06:36","makeml and installml scripts do not like locations with spaces","When building the compiler from a directory containing spaces, the makeml and installml scripts fail.

In the example below, Im building in
/Users/michael/Documents/Work/Projects/CPN Tools/Repositories/Simulator/sml
(notice space in CPN Tools; when removing that everything works.)
Submitted via web form by Michael Westergaard m.westergaard@tue.nl
",0,0,0,"x86","MacOS X","Other","None","Cosmetic","OS X Lion","110.74","makeml, installml","","./makeml: line 7: cd: /Users/michael/Documents/Work/Projects/CPN: No such file or directory
./makeml: line 11: [: /Users/michael/Documents/Work/Projects/CPN: binary operator expected
./makeml: line 56: [: /Users/michael/Documents/Work/Projects/CPN: binary operator expected
./makeml: line 88: [: =: unary operator expected
./makeml: line 161: cd: sml.boot.sparc-unix: No such file or directory
/Users/michael/Documents/Work/Projects/CPN Tools/Repositories/Simulator/sml/bin/.link-sml @SMLboot=BOOTLIST @SMLheap=sml @SMLalloc=1M @SMLverbose
./makeml: line 166: /Users/michael/Documents/Work/Projects/CPN: No such file or directory
./makeml: Something broke.
makeml./installml: line 12: cd: /Users/michael/Documents/Work/Projects/CPN: No such file or directory
./installml: line 24: [: /Users/michael/Documents/Work/Projects/CPN: binary operator expected
","",""
91,1,"Open",3,142,"Bug Submitter",106,"David MacQueen","2012-02-05 10:55","","2021-11-09 21:23","Type inference for records","The standard says is that \\\\\\\For each occurrence of a record pattern
containing a wild card, ..., the program context must determine
the domain ... of the row type.\\\\\\\ However, in many cases where
the context does determine the type, Standard ML of New Jersey
rejects the record pattern:

Additional comments:
The standard is pretty vague, but other compilers accept this code.

Submitted via web form by Rob Arthan rda@lemma-one.com
",0,0,0,"None","Generic Unix","Compiler","Won't Fix","Major","Mac OS X","110.73","types","","- stdIn:2.6-2.26 Error: unresolved flex record
   (can't tell what fields there are besides #x)

","fun f (r as {x : int, y : int}) : int =
        let     fun g {x, ...} = 2*x;
        in      g r * y
        end;
"," *** 2015-09-24 17:14 --- David MacQueen --- I am inclined to ""fix"" this issue by revising/clarifying the Definition so that only the context known at the point of definition of the variable (e.g. ""g"" in this example) is used to resolve the ""..."" (i.e. the implicit row-unification type variable that the ellipsis represents).  To allow the later uses of the variable in the scope of the definition to contribute to the type checking context complicates the process excessively for little practical gain. ~  *** 2012-02-05 12:04 --- David MacQueen --- DBM: This is a tricky issue.  In several places, the Definition mentions using ""context"" to resolve types, without making clear exactly what or how much context is to be analyzed.  In this case the problem is that we need to generalize the type of g for use in its scope, but the unresolved record pattern makes the (ungeneralized) type inexact, so we don't know exactly what unification variables might be implied by the ""..."" wildcard pattern.   This small example looks plausible, but much more convoluted examples can be constructed. ~  ~ For overloading resolution, we do use the scope of a definition as part of the context used, but that is a simpler case because the special unification variables associated with the undetermined types of overloaded operators are not generalizable. ~  ~ I'll think about this to see if there is a clean and reasonably ""canonical"" way to deal with this, but I am not inclined to take extreme measures to ""fix"" this issue.  I'll also try to see how the other compilers type checkers work for this example. ~  ~ "
92,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2012-02-09 06:52","2012-09-28 16:57","2012-09-28 16:57","IntInf.scan does not work on Hex numbers","According to the SML97 Basis Library specification,

    IntInf.scan StringCvt.HEX

should scan strings matching [+~-]?(0x | 0X)?[0-9a-fA-F]+, but
instead it just scans the leading ",0,0,0,"None","Generic Unix","Basis Library","Fixed","Major","","110.74","basis","","Standard ML of New Jersey v110.74 [built: Tue Jan 31 16:23:10 2012]
- StringCvt.scanString(IntInf.scan StringCvt.HEX) ","StringCvt.scanString(IntInf.scan StringCvt.HEX) "," *** 2012-09-28 16:57 --- John Reppy --- Fixed in 110.75"
93,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2012-02-09 07:23","2019-08-18 10:55","2019-08-18 10:55","hash tables should be allowed to be bigger","Right now, the limit on hash table size is 8388608 elements, but this
should be fixed.
Additional comments:
Subject: Re: question about SML library
From: John Reppy jhr@cs.uchicago.edu
To: Patel-Schneider, Peter F (Peter Frederick) peter.frederick.patel-schneider@alcatel-lucent.com
Date: Wed, 8 Feb 2012 16:33:30 -0600
Thread-Topic: question about SML library
Thread-Index: AczmsbNewX3b0O5vQa68TvQFkjv8HQ==
Accept-Language: en-US

Right now, the limit on hash table size is 8388608 elements, but this should be fixed.
Please file a bug report at https://smlnj-gforge.cs.uchicago.edu/bugform.php.  Thanks.

	- John

Submitted via web form by Peter F. Patel-Schneider pfps@research.bell-labs.com
",0,0,0,"All","Generic Unix","SML/NJ Library","Fixed","Minor","Fedora 16","110.74","hashtable library","","idefix 106 sml
Standard ML of New Jersey v110.74 [built: Tue Feb  7 05:32:46 2012]
- open HashTable;

exception NOT_FOUND ;
val hash_fn : string-word = HashString.hashString ;
val cmp_fn : string*string-bool = (op =) ;
val initial_size : int = 10000001 ;
val t : (string,int) hash_table = mkTable (hash_fn, cmp_fn)
	(initial_size, NOT_FOUND) ;

[autoloading]
[library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
[autoloading done]
opening HashTable
  datatype (a,) hash_table = ...
  val mkTable : (a - word) * (a * a - bool)
                - int * exn - (a,) hash_table
  val clear : (a,) hash_table - unit
  val insert : (a,) hash_table - a *  - unit
  val inDomain : (,a) hash_table -  - bool
  val lookup : (a,) hash_table - a - 
  val find : (a,) hash_table - a -  option
  val remove : (a,) hash_table - a - 
  val numItems : (a,) hash_table - int
  val listItems : (a,) hash_table -  list
  val listItemsi : (a,) hash_table - (a * ) list
  val app : ( - unit) - (a,) hash_table - unit
  val appi : (a *  - unit) - (a,) hash_table - unit
  val map : (a - c) - (,a) hash_table - (,c) hash_table
  val mapi : ( * a - c) - (,a) hash_table - (,c) hash_table
  val fold : ( * c - c) - c - (a,) hash_table - c
  val foldi : (a *  * c - c) - c - (a,) hash_table - c
  val modify : ( - ) - (a,) hash_table - unit
  val modifyi : (a *  - ) - (a,) hash_table - unit
  val filter : ( - bool) - (a,) hash_table - unit
  val filteri : (a *  - bool) - (a,) hash_table - unit
  val copy : (a,) hash_table - (a,) hash_table
  val bucketSizes : (a,) hash_table - int list
- - exception NOT_FOUND
- [autoloading]
[autoloading done]
val hash_fn = fn : string - word
- val cmp_fn = fn : string * string - bool
- val initial_size = 10000001 : int
- =
uncaught exception Size [size]
  raised at: smlnj/init/core.sml:148.52-148.56
- ","open HashTable;

exception NOT_FOUND ;
val hash_fn : string-word = HashString.hashString ;
val cmp_fn : string*string-bool = (op =) ;
val initial_size : int = 10000001 ;
val t : (string,int) hash_table = mkTable (hash_fn, cmp_fn)
	(initial_size, NOT_FOUND) ;
"," *** 2019-08-18 10:55 --- John Reppy --- At some point, the maxLen of arrays was increased to 2^24-1.  Larger arrays will be possible ion the 64-bit targets."
94,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2012-02-20 04:12","2012-07-27 22:33","2012-07-27 22:33","Running on OS X Mountain Lion","Starting SML on Mountain Lion (of course) fails.

I built the compiler under 10.7 Lion, and have not yet tested building the compiler on 10.8.
Fix:
Adding Mountain Lion to .arch-n-opsys:


	  8*) OPSYS=darwin;  HEAP_OPSYS=darwin ;; # MacOS X 10.4
	  9*) OPSYS=darwin;  HEAP_OPSYS=darwin ;; # MacOS X 10.5
	  10*) OPSYS=darwin;  HEAP_OPSYS=darwin ;; # MacOS X 10.6
	  11*) OPSYS=darwin;  HEAP_OPSYS=darwin ;; # MacOS X 10.7
	  12*) OPSYS=darwin;  HEAP_OPSYS=darwin ;; # MacOS X 10.8
	  *) exit 1;;
	esac;;


Submitted via web form by Michael Westergaard m.westergaard@tue.nl
",0,0,0,"x86","MacOS X","Other","Fixed","Minor","10.8 Mountain Lion","110.74","osx, mountain lion","","[michael@brincess:bin]$ ./sml
sml: unable to determine architecture/operating system

After fix:


[michael@brincess:bin]$ ./sml
Standard ML of New Jersey v110.74 [built: Wed Feb  1 12:08:39 2012]
- ",""," *** 2012-07-27 22:33 --- John Reppy --- Fixed in 110.75 *** 2012-06-17 18:12 --- David MacQueen --- Thanks for the fix.  We'll get this updated for 110.75 (4.0). ~ "
96,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2012-03-21 12:34","2012-08-02 12:40","2012-08-02 12:40","Build Failure with Xcode 4.3","Xcode 4.3 moved most of the infrastructure to new locations.  Instead of /Developer/SDKs/, the SDKs are now in /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/.  Furthermore, the 10.5 SDK does not appear to be distributed with Xcode, nor do I see a way to obtain it.
Submitted via web form by Brian Gernhardt brian.gernhardt@cs.rit.edu
",0,0,0,"x86","MacOS X","Installer","Fixed","Minor","10.7.3","110.74","build","","config/install.sh: Using shell /bin/sh.
config/install.sh: SML root is /usr/local/Cellar/smlnj/110.74/libexec.
config/install.sh: Installation directory is /usr/local/Cellar/smlnj/110.74/libexec.
config/install.sh: Installing version 110.74.
config/install.sh: URL of source archive is http://smlnj.cs.uchicago.edu/dist/working/110.74/.
config/install.sh: Script /usr/local/Cellar/smlnj/110.74/libexec/bin/.arch-n-opsys reports ARCH=x86; OPSYS=darwin; HEAP_SUFFIX=x86-darwin.
/usr/local/Cellar/smlnj/110.74/libexec/config/unpack: Fetching run-time from http://smlnj.cs.uchicago.edu/dist/working/110.74/. Please stand by...
/usr/local/Cellar/smlnj/110.74/libexec/config/unpack: Trying runtime.tgz ...
/usr/local/Cellar/smlnj/110.74/libexec/config/unpack: Fetching runtime.tgz was a success.
/usr/local/Cellar/smlnj/110.74/libexec/config/unpack: Un-GZIP-ing and un-TAR-ing run-time archive.
config/install.sh: Compiling the run-time system.
(make RUNTIME=
un.x86-darwin VERSION=v-x86-darwin CC=cc -m32 -ansi CFLAGS=-g -O2 -D_DARWIN_C_SOURCE -isysroot /Developer/SDKs/MacOSX10.5.sdk -mmacosx-version-min=10.5 CPP=cc -x assembler-with-cpp -E -P -ansi AS=/usr/bin/as -arch i386 TARGET=X86 DEFS=  -DHOST_X86 -DTARGET_X86 -DOPSYS_UNIX -DOPSYS_DARWIN -DOPSYS_MACOS_10_2 -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC XOBJS=\ XLIBS=../c-libs/dl/libunix-dynload.a LD_LIBS=-ldl run.x86-darwin)
(make MAKE=make clean)
rm -f v-* run.* interactive-run \
		gen-sizes gen-offsets gen-bc-instr-def \
		gen-unix-signals gen-unix-sigtbl \
		ml-sizes.h mlstate-offsets.h bc-instr-def.h \
		system-signals.h unix-sigtbl.c \
		*.o prim.s primops.s
(cd ../memory; make MAKE=make clean)
rm -f v-* *.o libmem.a
(cd ../c-libs; make MAKE=make clean)
for dir in posix-os smlnj-runtime smlnj-signals smlnj-sockets smlnj-prof smlnj-time smlnj-date smlnj-math smlnj-mp posix-error posix-filesys posix-io posix-procenv posix-process posix-signal posix-sysdb posix-tty smlnj-ccalls dl; do \
	  (cd $dir; echo cleaning $dir; make MAKE=make clean) ; \
	done
cleaning posix-os
rm -f v-* *.o libposix-os.a
cleaning smlnj-runtime
rm -f v-* *.o libsmlnj-runt.a
cleaning smlnj-signals
rm -f v-* *.o libsmlnj-sig.a
cleaning smlnj-sockets
rm -f v-* *.o libsmlnj-sock.a
cleaning smlnj-prof
rm -f v-* *.o libsmlnj-prof.a
cleaning smlnj-time
rm -f v-* *.o libsmlnj-time.a
cleaning smlnj-date
rm -f v-* *.o libsmlnj-date.a
cleaning smlnj-math
rm -f v-* *.o libsmlnj-math.a
cleaning smlnj-mp
rm -f v-* *.o libsmlnj-mp.a
cleaning posix-error
rm -f v-* *.o libposix-error.a
cleaning posix-filesys
rm -f v-* *.o ml_pathconf.h libposix-filesys.a
cleaning posix-io
rm -f v-* *.o libposix-io.a
cleaning posix-procenv
rm -f v-* *.o ml_sysconf.h libposix-procenv.a
cleaning posix-process
rm -f v-* *.o libposix-process.a
cleaning posix-signal
rm -f v-* *.o libposix-signal.a
cleaning posix-sysdb
rm -f v-* *.o libposix-sysdb.a
cleaning posix-tty
rm -f v-* *.o libposix-tty.a
cleaning smlnj-ccalls
rm -f v-* *.o *.s libsmlnj-ccalls.a
cleaning dl
rm -f v-* *.o libunix-dynload.a
rm -f v-* *.o
(cd ../gc; make MAKE=make clean)
rm -f v-* *.o libgc.a libmp-gc.a
(cd ../mp; make MAKE=make clean)
rm -f v-* *.o libmp.a
echo v-x86-darwin  v-x86-darwin
cc -m32 -ansi -c -g -O2 -D_DARWIN_C_SOURCE -isysroot /Developer/SDKs/MacOSX10.5.sdk -mmacosx-version-min=10.5 -I../config -I../objs -I../include ../config/gen-common.c
../config/gen-common.c:8:10: fatal error: stdio.h file not found
#include stdio.h
         ^
1 error generated.
make[1]: *** [gen-common.o] Error 1
make: *** [all] Error 2
config/install.sh: !!! Run-time system build failed for some reason.
",""," *** 2012-08-02 12:36 --- John Reppy --- Fixed for 110.75 *** 2012-03-24 12:07 --- John Reppy --- This bug is a duplicate of #89."
101,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2012-06-12 09:59","2012-07-27 12:04","2012-07-27 12:04","errono = 12","This might not be a bug. But I would be grateful if anyone could help here!

I was trying some tool writted in SML/NJ. After a long run of about 40hours, sml aborted with the following error info:

/home/wp/local/bin/sml: Error -- unable to map 1084948480 bytes, errno = 12
/home/wp/local/bin/sml: Error -- unable to allocate to-space for generation 5; trying smaller size
/home/wp/local/bin/sml: Error -- unable to map 1085800448 bytes, errno = 12
/home/wp/local/bin/sml: Error -- unable to allocate to-space for generation 5; trying smaller size
/home/wp/local/bin/sml: Error -- unable to map 1086193664 bytes, errno = 12
/home/wp/local/bin/sml: Error -- unable to allocate to-space for generation 5; trying smaller size
/home/wp/local/bin/sml: Error -- unable to map 1086652416 bytes, errno = 12
/home/wp/local/bin/sml: Error -- unable to allocate to-space for generation 5; trying smaller size
/home/wp/local/bin/sml: Error -- unable to map 1083572224 bytes, errno = 12
/home/wp/local/bin/sml: Fatal error -- unable to allocate minimum size

What does the error no. 12 mean? What would you expect the reason for this?

Cheers,
Peng
Submitted via web form by Peng like.a.bird@gmail.com
",0,0,0,"x86","Linux","Other","Invalid","Cosmetic","","110.74","garbage collection","","",""," *** 2012-07-27 12:04 --- John Reppy --- The problem here is insufficient address space for the application.  I gave the submitter some suggestions for how to reduce the VM footprint, but there is not much we can do about this while we are limited to 32-bits."
103,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2012-06-22 21:08","2012-08-02 08:58","2012-08-02 08:58","Unable to register an account for the bug tracker","I clicked on the
ew account link at https://smlnj-gforge.cs.uchicago.edu/ but got the login page instead.
Submitted via web form by David David.Feuer@gmail.com
",0,0,0,"None","Generic Unix","Other","Invalid","Minor","","","","","",""," *** 2012-08-02 08:58 --- John Reppy --- Not a bug."
104,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2012-07-10 14:49","2012-07-27 12:18","2012-07-27 12:18","ckit number parsing","I found a constant which was not parsed by ckit.

18446744073ULL

It is in OpenBSDs include directory sys/time.h. Im sending a patch
to parse that case.
Additional comments:
It looks like ckit can recover from the bug.

Fix:
--- src/parser/grammar/c.lex.orig       Wed Apr 25 00:27:12 2012
+++ src/parser/grammar/c.lex    Wed Apr 25 00:27:32 2012
@@ -126,7 +126,7 @@
 hexdigit       = [0-9a-fA-F];
 hexnum = 0[xX]{hexdigit}+[uUlL]?[uUlL]?;
 octnum = 0{octdigit}+[uUlL]?[uUlL]?;
-decnum = (0|([1-9][0-9]*))[uUlL]?[uUlL]?;
+decnum = (0|([1-9][0-9]*))[uUlL]?[uUlL]?[uUlL]?;
 realnum = (([0-9]+(\.[0-9]+)?)|(\.[0-9]+))([eE][+-]?[0-9]+)?[lL]?;
 ws     = (\
|[\t\ ])*;



Submitted via web form by Vesa Norrman vesbula@gmail.com
",0,0,0,"All","Other","C Interface Library","Fixed","Minor","OpenBSD 5.1","110.74","ckit","","ml-nlffigen -I/usr/X11R6/include -D__builtin_va_list=int -DXLIB_ILLEGAL_ACCESS -heavy -include ../x11handle.sml -libhandle X11Handle.x11 -dir FFI -cmfile x11.cm /usr/X11R6/include/X11/Xlib.h /usr/X11R6/include/X11/Xutil.h
/usr/include/sys/time.h:228.63: error: syntax error: inserting  SEMICOLON
Likely cause: missing typedef declaration.

???: warning: additional errors suppressed.
???: warning: additional warnings suppressed.
","Bug occurs when running ml-nlffigen."," *** 2012-07-27 12:18 --- John Reppy --- Fixed in 110.75.  Also fixed the suffixes for hex and octal integer literals and for floating-point literals."
106,1,"Open",3,142,"Bug Submitter",105,"Matthias Blume","2012-09-23 14:01","","2012-09-23 14:06","Bad error message for ml-build when the target directory is missing","ml-build fails with a poor error message when it is
unable to write out the heap image because of a missing
directory.

This error was originally reported to me by Alley Stoughton
in 2006, but got lost in my mailbox.
Additional comments:
Note that the .heap directory does not exist.


Submitted via web form by John Reppy jhr@cs.uchicago.edu
",0,0,0,"None","Generic Unix","CM","None","Minor","any","110.74","ml-build SysErr","","jhr@loki ml-build sources.cm Main.main .heap/out
Standard ML of New Jersey v110.74 [built: Tue Jan 31 16:23:10 2012]
[scanning sources.cm]
[parsing (sources.cm):main.sml]
[creating directory .cm/SKEL]
[library $SMLNJ-BASIS/basis.cm is stable]
[compiling (sources.cm):main.sml]
[creating directory .cm/GUID]
[creating directory .cm/x86-unix]
[code: 188, env: 199 bytes]
[scanning 6875-export.cm]
[scanning (6875-export.cm):sources.cm]
[parsing (6875-export.cm):6875-export.sml]
[compiling (6875-export.cm):6875-export.sml]
[code: 438, data: 38, env: 40 bytes]
/usr/local/smlnj-110.74/bin/.run/run.x86-darwin: Fatal error -- Uncaught exception SysErr with unknown raised at export-fun.c
","(* main.sml *)
structure Main =
  struct
    fun main _ = OS.Process.success
  end

(* sources.cm *)
Library
  structure Main
is
  $/basis.cm
  main.sml
",""
107,2,"Closed",5,142,"Bug Submitter",105,"Matthias Blume","2012-10-13 08:15","2012-10-20 13:41","2012-10-20 13:41","Bug of Int64 comparison","the Greater then operator on Int64 is completely wrong !

~2  0 is true !!!! (the same for all comparison negative  positive)

Submitted via web form by Christophe Raffalli raffalli@univ-savoie.fr
",0,0,0,"Other","All","SML/NJ Library","Fixed","Critical","debian testing","110.74","Int64 comparison","","raffalli@delli7:~/Caml/caml-shift$ uname -a
Linux delli7 3.2.0-3-amd64 #1 SMP Mon Jul 23 02:45:17 UTC 2012 x86_64 GNU/Linux
raffalli@delli7:~/Caml/caml-shift$ sml
Standard ML of New Jersey v110.74 [built: Sun Feb 19 03:57:22 2012]
- open Int64;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
opening Int64
  type int = Int64.int
  val precision : Int31.int option
  val minInt : int option
  val maxInt : int option
  val toLarge : int - IntInf.int
  val fromLarge : IntInf.int - int
  val toInt : int - Int31.int
  val fromInt : Int31.int - int
  val ~ : int - int
  val + : int * int - int
  val - : int * int - int
  val * : int * int - int
  val div : int * int - int
  val mod : int * int - int
  val quot : int * int - int
  val rem : int * int - int
  val min : int * int - int
  val max : int * int - int
  val abs : int - int
  val sign : int - Int31.int
  val sameSign : int * int - bool
  val  : int * int - bool
  val = : int * int - bool
  val  : int * int - bool
  val = : int * int - bool
  val compare : int * int - order
  val toString : int - string
  val fromString : string - int option
  val scan : StringCvt.radix
             - (char,a) StringCvt.reader - (int,a) StringCvt.reader
  val fmt : StringCvt.radix - int - string
- ~2  0;
val it = true : bool
","~2  0"," *** 2012-10-20 13:41 --- John Reppy --- Fixed for 110.76 *** 2012-10-14 08:34 --- John Reppy --- Int64.compare works, but the infix comparisons fail when the signs of the arguments differ."
108,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2012-10-21 13:59","2012-10-30 05:09","2012-10-30 05:09","off-by-one error in Util/dynamic-array.sml; iterators crash","The iterators in DynamicArray (Util/dynamic-array.sml) raise Subscript in most circumstances,
because the `slice\ function uses !bnd, which is the *last* used element, instead of
!bnd + 1, which is the upper bound needed by ArraySlice.
Fix:
--- dynamic-array.sml	2009-05-13 15:17:00.000000000 +0200
+++ /Users/joshua/nj-util/dynamic-array.sml	2012-10-21 20:48:45.000000000 +0200
@@ -95,7 +95,7 @@

   (* get the array slice that covers the defined portion of the array *)
     fun slice (BLOCK(arr, _, bnd)) =
-	  ArraySlice.slice(!arr, 0, SOME(!bnd))
+	  ArraySlice.slice(!arr, 0, SOME(!bnd + 1))

   (* we implement the iterators by using the array slice operations *)
     fun vector arr = ArraySlice.vector (slice arr)


Submitted via web form by Joshua Dunfield joshua@mpi-sws.org
",0,0,0,"All","Generic Unix","SML/NJ Library","Fixed","Major","","110.74","","","Standard ML of New Jersey v110.74 [built: Sun Oct 21 20:44:49 2012]
- val a = DynamicArray.array (4, NONE : int option);
DynamicArray.find (fn x = false) a;

(* Other iterators, such as foldli, also raise Subscript. *)
[autoloading]
[library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
[autoloading done]
val a = - : int option DynamicArray.array
-
uncaught exception Subscript [subscript out of bounds]
  raised at: Basis/Implementation/array-slice.sml:54.55-54.64
-
","val a = DynamicArray.array (4, NONE : int option);
DynamicArray.find (fn x = false) a;

(* Other iterators, such as foldli, also raise Subscript. *)
"," *** 2012-10-30 05:09 --- John Reppy --- Fixed for 110.76."
109,1,"Open",3,142,"Bug Submitter",103,"John Reppy","2012-10-27 12:28","","2018-03-25 07:03","Math.pow does not produce an integer result on 2^3","Math.pow does not return an integer result when an integer is
raised to an integer power.
Submitted via web form by John Reppy jhr@cs.uchicago.edu
",0,0,0,"x86","MacOS X","Basis Library","None","Major","10.8","110.75","reals","","jhr@loki sml
Standard ML of New Jersey v110.75 [built: Sun Sep 30 07:51:58 2012]
- Real.trunc (Math.pow (2.0, 3.0));
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val it = 7 : int
- 8.0 - Math.pow (2.0, 3.0);
val it = 1.7763568394E~15 : real
-
","Real.trunc (Math.pow (2.0, 3.0));
8.0 - Math.pow (2.0, 3.0);
"," *** 2018-03-25 07:03 --- John Reppy --- Perhaps we should reimplement this function based on the netlike C implementation at http://www.netlib.org/fdlibm/"
110,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2013-04-11 17:15","2014-08-17 12:21","2014-08-17 12:21","IntInf.~>> returns the wrong answer on negative input","IntInf.~ is rounding toward zero, not down as the spec calls for.
Submitted via web form by Karl Crary crary@cs.cmu.edu
",0,0,0,"x86","Other","Basis Library","Fixed","Minor","Windows 7","110.75","","","- IntInf.~ (~1, 0w1);
val it = 0 : IntInf.int
","IntInf.~ (~1, 0w1);

"," *** 2014-08-17 12:21 --- John Reppy --- Fixed for 110.77 *** 2013-04-11 17:22 --- Lars Bergstrom --- I'm guessing the transcript is actually: ~ - IntInf.~>> (~1, 0w1); ~ val it = 0 : int ~  ~ But the &gt;s were helpfully stripped out by our bug tracking form, in the name of security. ~ "
111,2,"Closed",3,142,"Bug Submitter",128,"Lars Bergstrom","2013-04-15 17:58","2013-06-04 11:56","2013-06-04 11:56","Socket.acceptNB returns somewhat broken sockets","When a socket is obtained using Socket.acceptNB, and then recvVec
is called on the resulting socket, the call does not block until
data is available. Instead, SysErr is raised if data is not
available.

If Socket.recvVecNB is used, it returns NONE, as desired. Also,
sockets obtained by Socket.accept seem to work fine.

Submitted via web form by Karl Crary crary@cs.cmu.edu
",0,0,0,"x86","Other","Basis Library","None","Minor","Windows 7","110.74","socket","","- Socket.recvVec (s, 1);

uncaught exception SysErr [SysErr: win32 error code 10035 [OS.errorName unimplemented]]
  raised at: recv.c
","val s =
   let
      val s = INetSock.TCP.socket ()
      val () = Socket.bind (s, I.any 5555)
      val () = Socket.listen (s, 5)
   in
      s
   end

(* someone else connects *)

val (s, _) = valOf (Socket.acceptNB s);
Socket.recvVec (s, 1)
"," *** 2013-06-04 11:56 --- Lars Bergstrom --- Fixed by detecting the platform and setting the NB-status appropriately. *** 2013-05-31 13:10 --- Lars Bergstrom --- On Windows, client sockets inherit the non-blocking and async status associated with the listening socket. So, we will need to reset it to blocking to conform with the rest of the codebase (and nice, normal Berkeley sockets conventions...)."
113,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2013-04-17 11:09","2013-04-26 15:48","2013-04-26 15:48","Socket.select waits exactly twice the indicated timeout","When Socket.select is used with a timeout, it waits exactly twice
as long as the indicated timeout.

Submitted via web form by Karl Crary crary@cs.cmu.edu
",0,0,0,"x86","Other","Basis Library","None","Minor","Windows 7","110.74","socket select timeout","","- wait 2;
val it = 4 : IntInf.int
- wait 3;
val it = 6 : IntInf.int
- wait 4;
val it = 8 : IntInf.int
- wait 15;
val it = 30 : IntInf.int
","val sd = blahblah

fun wait n = let val t = Time.toSeconds (Time.now ()) in Socket.select {rds=[sd], wrs=[], exs=[], timeout = SOME (Time.fromSeconds n)}; Time.toSeconds (Time.now ()) - t end"," *** 2013-04-26 15:48 --- John Reppy --- Fixed in 110.76. *** 2013-04-19 13:08 --- John Reppy --- The problem appears to be in the implementation of OS.IO.poll in system/Basis/Implementation/Win32/os-io.sml."
114,1,"Open",3,142,"Bug Submitter",103,"John Reppy","2013-04-20 16:27","","2013-05-05 11:02","PrimIO methods have a different type in CML","Some of the methods in the PrimIO.reader and PrimIO.writer datatypes
have a different type in CML than they do in the ordinary Basis.
In particular, many of the fields have option types in the basis
but non-option types in CML.  This makes it harder to port code
CML.
Submitted via web form by Karl Crary crary@cs.cmu.edu
",0,0,0,"x86","Other","CML","None","Minor","Windows 7","110.74","","","","",""
115,2,"Closed",3,142,"Bug Submitter",128,"Lars Bergstrom","2013-04-20 17:00","2013-06-04 11:56","2013-06-04 11:56","BinPrimIO writer method getPos doesn	 work under CML","The BinPrimIO writer methods don	 update the position returned
by the getPos method under CML.  So getPos () always returns 0
(or whatever the last position setPos was given).
Fix:
In win32-bin-prim-io.sml, change mkWriter so that the local
function write calls an incPos function, in much the same way
as readVec and readArr do in mkReader.


Submitted via web form by Karl Crary crary@cs.cmu.edu
",0,0,0,"x86","Other","CML","None","Minor","Windows 7","110.74","","","",""," *** 2013-06-04 11:56 --- Lars Bergstrom --- Fixed per suggestion in description."
116,2,"Closed",3,142,"Bug Submitter",128,"Lars Bergstrom","2013-04-22 00:50","2013-05-20 10:31","2013-05-20 10:31","Socket.sameDesc raises Match exception","The Socket.sameDesc function (without which Socket.select is not
very useful) raise the Match exception.

Submitted via web form by Karl Crary crary@cs.cmu.edu
",0,0,0,"x86","Other","Basis Library","None","Major","Windows 7","110.74","","","- val sd = Socket.sockDesc s;
val sd = SockDesc 380 : Socket.sock_desc
- Socket.sameDesc (sd, sd);

uncaught exception Match [nonexhaustive match failure]
  raised at: Basis/Implementation/Win32/os-io.sml:33.30
",""," *** 2013-05-20 10:30 --- Lars Bergstrom --- Confirmed on Win7 with the latest bits. *** 2013-05-01 10:56 --- John Reppy --- The problem is that the iodesc datatype (defined in Basis/Implementation/Win32/pre-os.sml) has both an IODesc constructor and a SockDesc constructor.  Much of the code in os-io.sml has not been updated to handle the SockDesc constructor."
117,2,"Closed",3,142,"Bug Submitter",128,"Lars Bergstrom","2013-04-26 16:38","2013-05-20 12:20","2013-05-20 12:20","BinIO.openAppend raises IO on non-existent file","When called with a file name that doesn	 exists, BinIO.openAppend
raises IO. The spec says it is supposed to create the file.
Submitted via web form by Karl Crary crary@cs.cmu.edu
",0,0,0,"x86","Other","Basis Library","None","Minor","Windows 7","110.74","","","- BinIO.openAppend ile;

uncaught exception Io [Io: openAppend failed on ile, win32-bin-prim-io:checkHndl: openApp: failed]
  raised at: Basis/Implementation/IO/bin-io-fn.sml:623.25-623.75
- BinIO.openOut ile;
val it = - : BinIO.outstream
- BinIO.closeOut it;
val it = () : unit
- BinIO.openAppend ile;
val it = - : BinIO.outstream
",""," *** 2013-05-20 12:20 --- Lars Bergstrom --- OPEN_ALWAYS was the right flag. The position is set immediately after with a second call to setfilepos. *** 2013-05-08 07:31 --- John Reppy --- Looking at the code in Basis/Win32/win32-{text,bin}-prim-io.sml, the problem is obvious.  The flag W32IO.OPEN_EXISTING is being used to open the file, but according to the Win32 documentation for createFile, the semantics of this option are ~  ~ Opens a file or device, only if it exists. ~ If the specified file or device does not exist, the function fails and the last-error code is set to ERROR_FILE_NOT_FOUND (2). ~  ~ The flag OPEN_ALWAYS might work as desired (it is not clear from the documentation if the file pointer is placed at the beginning or end of the file).  The other alternative is to check for the file's existence before trying to open it, but that does create a race condition with other processes."
118,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2013-06-25 22:53","2013-06-25 23:30","2013-06-25 23:30","Incorrect comparisons of Int64 on amd64","= and = return incorrect results when used with a negative and a positive number.

I\\\\\\\ve seen this on ppc and amd64.
Submitted via web form by James McCoy jamessan@debian.org
",0,0,0,"All","Linux","Basis Library","Fixed","Major","Debian","110.75","Int64","","$ sml
Standard ML of New Jersey v110.75 [built: Thu May  9 01:56:04 2013]
- open Int64;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
opening Int64
  type int = Int64.int
  val precision : Int31.int option
  val minInt : int option
  val maxInt : int option
  val toLarge : int - IntInf.int
  val fromLarge : IntInf.int - int
  val toInt : int - Int31.int
  val fromInt : Int31.int - int
  val ~ : int - int
  val + : int * int - int
  val - : int * int - int
  val * : int * int - int
  val div : int * int - int
  val mod : int * int - int
  val quot : int * int - int
  val rem : int * int - int
  val min : int * int - int
  val max : int * int - int
  val abs : int - int
  val sign : int - Int31.int
  val sameSign : int * int - bool
  val  : int * int - bool
  val = : int * int - bool
  val  : int * int - bool
  val = : int * int - bool
  val compare : int * int - order
  val toString : int - string
  val fromString : string - int option
  val scan : StringCvt.radix
             - (char,\\\\\\\a) StringCvt.reader - (int,\\\\\\\a) StringCvt.reader
  val fmt : StringCvt.radix - int - string
- ~1  1;
val it = true : bool
- ~1 = 1;
val it = false : bool
- 1  ~1;
val it = true : bool
- 1 = ~1;
val it = false : bool
-","open Int64;
~1  1;
~1 = 1;
1  ~1;
1 = ~1;
"," *** 2013-06-25 23:30 --- John Reppy --- Same as 107, which has been fixed for 110.76."
119,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2013-09-04 05:44","2014-08-14 16:10","2014-08-14 16:10","Conversion from vector of tupple to vector of vector causes a crush","Let us consider converting a vector containing a pair of integers to a vector of  length-2 vector
with Vector.map.
Doing this conversion itself does not result in a crush but I guess that the resultant object
is already malformed since sml-compiler prints #[prim?], not integers like
#[#[1,2],#[3,4]].
A crush will occurs when picking up an integer from the converted vector with
Vector.sub.

Though under an older version, 110.72, I have experienced a similar crush occurs in Linux.
Submitted via web form by Masaya Saito saitohm@ism.ac.jp
",0,0,0,"All","Other","Compiler","Fixed","Critical","Windows 7","110.75","","","","Standard ML of New Jersey v110.75 [built: Sat Sep 29 12:51:13 2012]
- val ss = #[(1,2)];
val ss = #[(1,2)] : (int * int) vector
- val ss = Vector.map (fn (a,b) => #[a,b]) ss;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val ss = #[prim?] : int vector vector
- Vector.sub(Vector.sub(ss,0),0);
C:\Program Files (x86)\SMLNJ\\bin\.run\run.x86-win32.exe: Fatal error -- win32:fault_handler: unexpected fault @0x375a8c0, code =

0xc0000005
"," *** 2014-08-14 16:10 --- John Reppy --- The problem turned out to be an overly aggressive optimization in CPS contraction.  Fixed for 110.77. *** 2013-09-04 09:43 --- John Reppy --- Here is a different version, which demonstrates that there is some inconsistency in the representations: ~  ~  ~ fun f (ss : int vector vector) = Vector.sub(Vector.sub(ss,0),0); ~ f #[ #[ 1, 2 ] ];  (* works *) ~ f (Vector.tabulate (2, fn i => #[i])); (* works *) ~ f (Vector.map (fn (a,b) => #[a,b]) #[(1,2)]);  (* core dump *) ~  *** 2013-09-04 06:04 --- John Reppy --- Confirmed on 110.76 / Mac OS X. *** 2013-09-04 05:56 --- Lars Bergstrom --- I confirmed that this occurs on OSX as well with 110.75."
120,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2013-10-06 08:34","2014-07-30 13:13","2014-07-30 13:13","Install fails w/ map failure on Chromebook","I\m getting non-recoverable errors when running binaries of sml, or
running the installer script. This is happening on an Acer C7
Chromebook running x86 Chrubuntu or Arch. Under either environment any
attempt to run sml or install.sh from the config.tgz results in the
following:

    Error -- unable to map 655360 bytes, errno = 1
    Fatal error -- unable to allocate memory object for BIBOP

With a binary installation (as with Ubuntu) this will be seen when
running sml at the command line. But when running the install scripts,
whether directly from the smlnj.org config.tgz or from Arch\s AUR, the
error comes at this point (discovered by enabling POSIX shell\s debug
output in the install script):

(after changing directories to /usr/local/smlnj/sml.boot.x86-unix)

    /usr/local/smlnj/bin/.link-sml @SMLheap=/usr/local/smlnj/sml @SMLboot=BOOTLIST @SMLalloc=512k

And here are the errors produced:

    /usr/local/smlnj/bin/.run/run.x86-linux: Error -- unable to map 655360 bytes, errno = 1
    /usr/local/smlnj/bin/.run/run.x86-linux: Fatal error -- unable to allocate memory object for BIBOP

Watching the above command with strace gives the following immediately
prior to the output errors:

    mmap2(NULL, 720896, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE, 3, 0) = -1 EPERM (Operation not permitted)

I attempted to replicate the problem using both Ubuntu and Arch
virtual machines with similar resources, but sml worked fine in both.

The rest of this description is just output from uname, /proc/cpuinfo,
and /proc/meminfo. The short of this is Linux kernel 3.4.0, dual-core
Celeron 847 @ 1.10 GHz, and 2GB DDR3 SDRAM.

========================================================================

uname -a:

Linux runciter 3.4.0 #1 SMP Thu Sep 12 16:21:05 PDT 2013 i686 GNU/Linux

------------------------------------------------------------------------

cat /proc/cpuinfo:

processor	: 0
vendor_id	: GenuineIntel
cpu family	: 6
model		: 42
model name	: Intel(R) Celeron(R) CPU 847 @ 1.10GHz
stepping	: 7
microcode	: 0x28
cpu MHz		: 800.000
cache size	: 2048 KB
physical id	: 0
siblings	: 2
core id		: 0
cpu cores	: 2
apicid		: 0
initial apicid	: 0
fdiv_bug	: no
hlt_bug		: no
f00f_bug	: no
coma_bug	: no
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe nx rdtscp lm constant_tsc arch_perfmon pebs bts xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer xsave lahf_lm arat epb xsaveopt pln pts dts tpr_shadow vnmi flexpriority ept vpid
bogomips	: 2195.08
clflush size	: 64
cache_alignment	: 64
address sizes	: 36 bits physical, 48 bits virtual
power management:

processor	: 1
vendor_id	: GenuineIntel
cpu family	: 6
model		: 42
model name	: Intel(R) Celeron(R) CPU 847 @ 1.10GHz
stepping	: 7
microcode	: 0x28
cpu MHz		: 800.000
cache size	: 2048 KB
physical id	: 0
siblings	: 2
core id		: 1
cpu cores	: 2
apicid		: 2
initial apicid	: 2
fdiv_bug	: no
hlt_bug		: no
f00f_bug	: no
coma_bug	: no
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe nx rdtscp lm constant_tsc arch_perfmon pebs bts xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer xsave lahf_lm arat epb xsaveopt pln pts dts tpr_shadow vnmi flexpriority ept vpid
bogomips	: 2195.08
clflush size	: 64
cache_alignment	: 64
address sizes	: 36 bits physical, 48 bits virtual
power management:

------------------------------------------------------------------------

cat /proc/meminfo:

MemTotal:        2002276 kB
MemFree:         1519772 kB
Buffers:           15280 kB
Cached:           228940 kB
SwapCached:            0 kB
Active:           229448 kB
Inactive:         220552 kB
Active(anon):     206724 kB
Inactive(anon):    64584 kB
Active(file):      22724 kB
Inactive(file):   155968 kB
Unevictable:          32 kB
Mlocked:              32 kB
HighTotal:         74504 kB
HighFree:            140 kB
LowTotal:        1927772 kB
LowFree:         1519632 kB
SwapTotal:             0 kB
SwapFree:              0 kB
Dirty:                 8 kB
Writeback:             0 kB
AnonPages:        205796 kB
Mapped:            58688 kB
Shmem:             65528 kB
Slab:              17800 kB
SReclaimable:       9632 kB
SUnreclaim:         8168 kB
KernelStack:         968 kB
PageTables:         1844 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:     1001136 kB
Committed_AS:     752488 kB
VmallocTotal:     122880 kB
VmallocUsed:       15392 kB
VmallocChunk:     106996 kB
DirectMap4k:       12280 kB
DirectMap2M:     1949696 kB

Submitted via web form by Christopher D. Walborn tuirgin@gmail.com
",0,0,0,"x86","Linux","Installer","Fixed","Critical","3.4.0","110.76","","","",""," *** 2014-07-28 16:45 --- John Reppy --- It appears that the problem is because of the fact that /dev (and thus /dev/zero) does not allow mapping with execute permission.  I have changed the runtime to use MAP_ANONYMOUS (which it should have been doing anyway) on Linux.  I cannot verify that this change fixes the bug, but I'm going to mark it closed. *** 2014-03-27 18:26 --- John Reppy --- I think that the issue is probably related to some form of sandboxing being done on the chrome book.  The EPERM error message means that the request for execute permission (PROT_EXEC) is not allowed.  SML/NJ needs to be able to allocate memory that has execute permission since its compiler generates and executes code on the fly.  I haven't been able to find any documentation for how to accomplish this in ChrUbuntu."
121,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2013-10-23 10:47","2014-12-20 10:38","2014-12-20 10:38","Cannot find runtime system","Getting this on running xml after installation:

sml: cannot find runtime system /usr/local/smlnj-110.76/bin/.run/run.x86-darwin

Submitted via web form by Naassih Gopee naasish@cmu.edu
",0,0,0,"x86","MacOS X","Installer","Works For Me","Cosmetic","10.9","smlnj-110.76","","","","sml: cannot find runtime system /usr/local/smlnj-110.76/bin/.run/run.x86-darwin
"," *** 2014-12-20 10:38 --- John Reppy --- We cannot reproduce this problem, so it probably was a fluke."
122,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2013-12-01 10:35","2013-12-01 12:25","2013-12-01 12:25","Possible wrong foldl implementation","The foldl signature is:
(a *  - ) -  - a list - 

instead of
(a*=a)-a- list-a


Submitted via web form by Leonardo Da Vinci leonadavinci@gmail.com
",0,0,0,"x86","Linux","SML/NJ Library","Invalid","Major","Ubuntu 12.04 LTS","110.75","foldl","","Just execute the above code to the sml interpreter.","foldl (op -) 2 [1];

Gives minus one (~1) instead of one (1)."," *** 2013-12-01 12:25 --- John Reppy --- This is correct behavior.  According to the Basis Library specification ~  ~ foldl f init [x1, x2, ..., xn] ~ returns ~ f(xn,...,f(x2, f(x1, init))...) ~  ~ In this case, that would be (op -)(1, 2) ==> -1."
123,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2014-01-02 20:08","2017-09-18 14:33","2017-09-18 14:33","missing warning for non-exaustive binding at top level","No warning is generated for a non-exhaustive binding in a top-level function
Additional comments:
This issue came up on the MLton mailing list.

Submitted via web form by John Reppy jhr@cs.uchicago.edu
",0,0,0,"None","Generic Unix","Compiler","None","Minor","","110.76","binding top-level","","% sml
Standard ML of New Jersey v110.76 [built: Mon Aug 19 10:38:12 2013]
- datatype ty = A | B of int;
datatype ty = A | B of int
- fun f x = let val B j = x in j end;
val f = fn : ty - int
- f A;

uncaught exception Bind [nonexhaustive binding failure]
  raised at: stdIn:7.19-7.26
","datatype ty = A | B of int;
fun f x = let val B j = x in j end;
"," *** 2017-09-18 14:33 --- David MacQueen --- The fix is to remove the call of ElabUtil.completeMatch in mkVBs, which was redundantly adding a default rule on top of the manually added default rule (eliminating the manually added rule and using completeMatch to add it did not work because of some problem with the type type information associated with the rule). *** 2017-09-18 12:37 --- David MacQueen --- The problem is that the way that let expressions (and particularly their declaration part) is translated in FLINT/trans/translate.sml (see mkVBs) directly builds an exhaustive CASE expression rather than calling matchcomp, which is where the nonexhaustive match warning is generated.  So nonexhaustive warnings will never be generated for let bindings, top-level or not.  One possible fix would be to create the simple one-branch case for the let and apply the matchcomp function to that to check for nonexhaustive let bindings."
124,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2014-02-02 14:24","2014-12-16 12:32","2014-12-16 12:32","Add support for OpenBSD/powerpc","Ive ported smlnj to OpenBSD/powerpc so please find below a link to the github
gist containing my patches. Or this there another way thats preferred to
submit patches?
Additional comments:
This has been tested on OpenBSD/macppc and its been committed to OpenBSD
ports (http://www.openbsd.org/cgi-bin/cvsweb/ports/lang/smlnj/)

Fix:
Patch for config:
https://gist.github.com/jasperla/8766593

Patch for ase:
https://gist.github.com/jasperla/8766687

Submitted via web form by Jasper Lievisse Adriaanse jasper@openbsd.org
",0,0,0,"None","None","None","None","None","","","","","","",""
125,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2014-02-27 03:32","2014-08-20 06:41","2014-08-20 06:41","build script is broken on Cygwin-x86","
config/install.sh fail compiling SML/NJ on current version cygwin env.
Off-cource I am using SMLNJ_CYGWIN_RUNTIME=1 :)

an error is occured like below:

  $ ./config/install.sh
  brah...
  brah...
  .
  .
  gcc  -c -O2 -DHOST_X86 -DTARGET_X86 -DOPSYS_UNIX -DOPSYS_CYGWIN -DGNU_ASSEMBLER -DDLOPEN -I../objs -I../include ../kernel/timers.c
  gcc  -c -O2 -DHOST_X86 -DTARGET_X86 -DOPSYS_UNIX -DOPSYS_CYGWIN -DGNU_ASSEMBLER -DDLOPEN -I../objs -I../include ../kernel/unix-timers.c
  gcc  -c -O2 -DHOST_X86 -DTARGET_X86 -DOPSYS_UNIX -DOPSYS_CYGWIN -DGNU_ASSEMBLER -DDLOPEN -I../objs -I../include ../kernel/qualify-name.c
  gcc  -c -O2 -DHOST_X86 -DTARGET_X86 -DOPSYS_UNIX -DOPSYS_CYGWIN -DGNU_ASSEMBLER -DDLOPEN -I../objs -I../include ../kernel/swap-bytes.c
  gcc  -c -O2 -DHOST_X86 -DTARGET_X86 -DOPSYS_UNIX -DOPSYS_CYGWIN -DGNU_ASSEMBLER -DDLOPEN -I../objs -I../include ../mach-dep/unix-fault.c
  In file included from ../mach-dep/unix-fault.c:10:0:
  ../mach-dep/cygwin-fault.c:21:43: fatal error: exceptions.h: No such file or directory
   #include exceptions.h /* Cygwin stuff */
                                             ^
  compilation terminated.
  makefile:242: recipe for target unix-fault.o failed
  make[1]: *** [unix-fault.o] Error 1
  make[1]: Leaving directory /cygdrive/c/usr/sml/base/runtime/objs
  mk.x86-cygwin:22: recipe for target all failed
  make: *** [all] Error 2
  ./config/install.sh: !!! Run-time system build failed for some reason.
  $



Fix:

I add the exception_list definition as below, compiling process seems to work well.
But I am not an assembly or SEH hacker.
So, I do not have the confidence in which this is right.

  /* base/runtime/include/cygwin-fault.h */
  #if !defined CYGWIN_FAULT_INCLUDED
  #define      CYGWIN_FAULT_INCLUDED

  #include windows.h

  typedef int (exn_handler_fn)(EXCEPTION_RECORD *, void *, CONTEXT *, void *);
  typedef struct exception_list {
  	struct exception_list * prev;
  	exn_handler_fn * handler;
  } exception_list;

  #endif    /* CYGWIN_FAULT_INCLUDED */


  /* base/runtime/mach-dep/cygwin-fault.c */
  $ diff base/runtime/mach-dep/cygwin-fault.c base/runtime/mach-dep/cygwin-fault.new.c
  20,21c20
   #include windows.h
   #include exceptions.h /* Cygwin stuff */
  ---
   #include cygwin-fault.h /* Cygwin stuff */



Submitted via web form by takayuki goto nephits@gmail.com
",0,0,0,"x86","Other","Installer","Fixed","Critical","Cygwin on Windows7(Pro,32bit)","110.75","install, SEH, windows, cygwin","","","  $ export SMLNJ_CYGWIN_RUNTIME=1
  $ tar -xf config.tgz
  $ ./config/install.sh
"," *** 2014-08-20 06:41 --- John Reppy --- Found a copy of exceptions.h on the web and included it verbatim in the cygwin-fault.c file. ~  ~ Fixed for 110.77. ~ "
126,2,"Closed",3,163,"Norman Ramsey",103,"John Reppy","2014-06-27 14:24","2014-06-27 17:49","2014-06-27 17:49","access to token spans is not documented","Page 3 of the LPT manual says that ""token position spans are automatically generated.""  I can't find them.  All I can find is yypos, which documents the token *start* position but not the full span.
",0,0,0,"None","None","ML-Ulex","Fixed","Minor","","","","","",""," *** 2014-06-27 17:49 --- John Reppy --- Documentation has been updated."
127,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2014-06-27 16:18","2014-07-30 13:12","2014-07-30 13:12","Crash on windows with OS.Process.system","When calling OS.Process.system \\\la bla\\\ where the length
of the string is equal to 14 + n * 8 (n=0) smlnj crashes (6 characters no crash).
Windows pops up a dialog which tells me :
run.x86-win32.exe has stopped working
with the three options:
* Check online ...
* Close the program
* Debug the program

If using the Debugger VS 2010 the exception is
sometimes a \\\heap corruption\\\ and somtimes an \\\access violation\\\.
In the case of a \\\heap corruption\\\ it is possible to continue the program.

The crash is not always triggered. But I am able to reproduce it reliable
with a fresh process.
I first encountered the crash with much larger strings (230,174,182 ...) where
the commadline contained arguments for the called program.

Is this a problem of appending a 0 to the commandline string but not accounting
for the increased size?
Additional comments:
While trying to submit the bug:
I do not see the captcha with Google Chrome.
the captcha is accessed with http instead of https

Is the SourceForge SMLNJ-Dev-List still active?

Submitted via web form by Roland Averkamp roland.averkamp.0@gmail.com
",0,0,0,"x86","Windows 7","Basis Library","Fixed","Minor","Windows 7, 64 bit","v110.76","windows system","","Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\Users\ravC:/Program Files (x86)/smlnj/bin/sml.bat
Standard ML of New Jersey v110.76 [built: Sun Jul 14 09:59:19 2013]
- OS.Process.system
otepad      ;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val it = 0wx0 : Word32.word
- OS.Process.system
otepad        ;
val it = 0wx0 : Word32.word
- (* 14 characters = crash*)
- OS.Process.system
otepad       ;
  = CRASH
C:\Users\rav","OS.Process.system
otepad      ;
OS.Process.system
otepad        ;
(* 14 characters = crash*)
OS.Process.system
otepad       ;"," *** 2014-07-30 13:12 --- John Reppy --- It was an off-by-one error in the runtime.  Fixed for 110.77."
128,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2014-08-05 13:50","2014-08-17 14:05","2014-08-17 14:05","Basis spec violation, race condition in OS.Filesys.tmpName()","The changelog of the Basis library specification [1] says ...

  July 14, 2003
  Fixed the semantics of OS.FileSys.tmpName to avoid a race condition.

... which is in line with the security considerations in the man page
of tmpnam [2]. And the (corrected) specification of tmpName [3] is
approximately that of mkstemp [4]:

  val tmpName : unit - string

  This creates a new empty file with a unique name and returns the full
  pathname of the file. The named file will be readable and writable by
  the creating process, but, if the host operating systems supports it,
  not accessible by other users. This function can be used to create a
  temporary file that will not collide with other applications. This
  function raises SysErr if it cannot create the unique file or filename.

Unfortunately the current SML/NJ implementation of the tmpName
function [5] in base/runtime/c-libs/posix-os/tmpname.c ...

  ml_val_t _ml_OS_tmpname (ml_state_t *msp, ml_val_t arg)
  {
      char	buf[L_tmpnam];
      tmpnam (buf);
      return ML_CString (msp, buf);
  } /* end of _ml_OS_tmpname */

... obviously dates back to a state of the Basis specification before
the acknowledgement of the race condition of tmpName (when it is
implemented by tmpnam).

[1] http://sml-family.org/Basis/history.html#section:14
[2] http://www.freebsd.org/cgi/man.cgi?query=tmpnammanpath=FreeBSD+10.0-RELEASE#end
[3] http://sml-family.org/Basis/os-file-sys.html#SIG:OS_FILE_SYS.tmpName:VAL
[4] http://www.freebsd.org/cgi/man.cgi?query=mkstempmanpath=FreeBSD+10.0-RELEASE
[5] http://smlnj-gforge.cs.uchicago.edu/scm/viewvc.php/sml/trunk/runtime/c-libs/posix-os/tmpname.c?view=markuproot=smlnj
Additional comments:
After applying the patch below and rebuilding SML/NJ,
tmpName creates a temporary file, which is owned by the
user running sml and only accessible by that user, as
demanded by the Basis library specification:

% echo \OS.Process.system (\ls -l \ ^ (OS.FileSys.tmpName ())) ;\ | sml
Standard ML of New Jersey v110.76 [built: Tue Aug  5 19:51:42 2014]
- [autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
-rw-------  1 me  mygroup  0 Aug  5 19:53 /tmp/TMP-SMLNJ.bDy50W
val it = 0 : OS.Process.status
-

Fix:
--- base/runtime/c-libs/posix-os/tmpname.c.orig	2000-06-01 20:34:03.000000000 +0200
+++ base/runtime/c-libs/posix-os/tmpname.c	2014-08-04 18:10:55.000000000 +0200
@@ -4,8 +4,11 @@
  */

 #include stdio.h
+#include string.h
+#include unistd.h
 #include \ml-base.h\
 #include \ml-values.h\
+#include \ml-c.h\
 #include \ml-objects.h\
 #include \cfun-proto-list.h\

@@ -13,9 +16,18 @@
  */
 ml_val_t _ml_OS_tmpname (ml_state_t *msp, ml_val_t arg)
 {
-    char	buf[L_tmpnam];
-
-    tmpnam (buf);
+    char	template[] = \/tmp/TMP-SMLNJ.XXXXXX\;
+    char	buf[sizeof(template)];
+    int		fd;
+
+    strcpy (buf, template);
+
+    fd = mkstemp (buf);
+
+    if (fd == -1)
+	return RAISE_SYSERR(msp, -1);
+    else
+	close (fd);

     return ML_CString (msp, buf);


Submitted via web form by Johannes 5 Joemann joemann@beefree.free.de
",0,0,0,"None","Generic Unix","Basis Library","Fixed","Major","","110.76","Basis, runtime, race condition, tmpName, tmpnam","","% echo \OS.Process.system (\ls -l \ ^ (OS.FileSys.tmpName ())) ;\ | sml
Standard ML of New Jersey v110.76 [built: Tue Aug  5 19:15:55 2014]
- [autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
ls: /tmp/tmp.0.oRn8hh: No such file or directory
val it = 1 : OS.Process.status
- ","OS.Process.system (\ls -l \ ^ (OS.FileSys.tmpName ()))"," *** 2014-08-17 14:05 --- John Reppy --- Fixed for 110.77"
129,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2014-11-14 10:50","2017-04-28 14:45","2017-05-02 19:41","Symbolic identifiers are allowed as strids","The definition states that stride must be alphanumeric, but
SML/NJ allows symbolic IDs as structure names too.
Additional comments:
Although the definition does not say so, I would think
that this restriction should apply to signature IDs too.

Submitted via web form by John Reppy jhr@cs.uchicago.edu
",0,0,0,"None","Generic Unix","Compiler","Fixed","Minor","any","110.77","syntax","","jhr@valhalla sml
Standard ML of New Jersey v110.77 [built: Sat Aug 23 09:49:47 2014]
- structure ## = struct end;
structure ## : sig end
","structure ## = struct end
"," *** 2017-05-02 19:41 --- David MacQueen --- First a comment about the Defn: StrIds (structure identifiers) are specified to be alphanumeric in Sec 2.4 (p. 5). Functor and signature identifiers are specified as alphanumeric in Sec 3.2 (p 11). ~  ~ The fix (contained in release 110.81, version 4330) involves splitting the ID token class into IDA (alphanumeric) and IDS (symbolic). Then in the grammar (Parse/parse/{ml.grm, sml.grm}) IDA is used in the rules for structure, functor, and signature bindings.  Also, a nonterminal idtyc = IDA | IDS is introduced for tycon identifiers (a more precise category than id, since it excludes asterisk).  This fix is in the lexical and grammar spec, so violations result in syntax errors during parsing, which are not very self-explanatory."
130,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2014-11-24 16:44","2019-10-12 19:03","2019-10-12 19:03","failure to raise Bind exception","A non-exhaustive let-binding pattern with non matching definiens
should raise a Bind exception at runtime. In the example it does
not do so.  A similar example with variables replaced by wildcard
patterns will raise Bind.

Additional comments:
Premature optimization or simplification of let binding code
where no variables are bound?


Submitted via web form by David MacQueen dmacqueen@mac.com
",0,0,0,"None","Generic Unix","Compiler","Fixed","Minor","OS X 10.10","110.77","pattern matching, let binding","","- let val (x :: y) = nil in 3 end;
val it = 3 : int
- let val (_ :: _) = nil in 3 end;

uncaught exception Bind [nonexhaustive binding failure]
  raised at: stdIn:3.9-3.23
- ","let val (x :: y) = nil in 3 end;
let val (_ :: _) = nil in 3 end;

"," *** 2019-10-12 19:02 --- David MacQueen --- Fixed by DBM, 10/12/19 for 110.94.  Fix is to not generalize types for val declarations in the lhs pattern is refutable.  The refutable test is conservative in that it does not yet deal with refutability of OR patterns (which is the same problem as the exhaustiveness check for matches that is performed by the match compiler."
131,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2014-12-30 11:11","2015-07-09 04:23","2015-07-09 04:24","ml-ulex does not allow comments in %states directives.","The ml-ulex grammar does not allow one to put comments in the body of a %states directive.
Submitted via web form by John Reppy jhr@cs.uchicago.edu
",0,0,0,"None","Generic Unix","ML-Ulex","Fixed","Minor","any","110.78","ml-ulex","","","In a ml-ulex file,

%states INITIAL (* a comment *) S;
"," *** 2015-07-09 04:23 --- John Reppy --- Fixed for 110.79"
132,3,"Deleted",3,142,"Bug Submitter",100,"Nobody","2015-05-21 16:22","2015-06-03 14:50","2015-06-03 14:50","This is a test","I don't have a problem, but I would like to test this anonymous bug reporter tool
Additional comments:
na

Fix:
na

Submitted via web form by Colin Hudler <chudler@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Installer","None","Cosmetic","na","na","notabug","","na","na",""
133,1,"Open",3,142,"Bug Submitter",106,"David MacQueen","2015-06-03 13:52","","2015-06-03 14:49","Error message uses wrong name for abstract type in error message","Given a structure matched by an opaque signature that specifies
a type t, the error message is using t's internal representation,
instead of the name ""t""
Additional comments:
The spec type in the error message should be ""t * t -> unit"",
since the signature is opaque.

Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Compiler","None","Cosmetic","na","110.78","types","","Standard ML of New Jersey v110.78 [built: Sun Dec 21 16:30:08 2014]
- structure Global :> sig

   type t

   val new : string -> t

   val same : t * t -> unit

   val toString : t -> string

 end = struct

   type t = string

   fun new name = name

   fun same (a : t, b) = (a = b)

   fun toString name = ""@"" ^ name

 end
= = = = = = = = = = = = = = = = = = = = = ;
stdIn:1.2-21.5 Error: value type in structure doesn't match signature spec
    name: same
  spec:   string * string -> unit
  actual: string * string -> bool
-
","structure Global :> sig

   type t

   val new : string -> t

   val same : t * t -> unit

   val toString : t -> string

 end = struct

   type t = string

   fun new name = name

   fun same (a : t, b) = (a = b)

   fun toString name = ""@"" ^ name

 end
",""
134,2,"Closed",3,234,"James McCoy",103,"John Reppy","2015-07-08 09:41","2015-07-09 03:01","2015-07-09 03:01","Fails to build with Linux kernel 4.x","The kernel checks in _arch-n-opsys only know about 2.x and 3.x kernels, so the script fails when the host is running a 4.x kernel.

The transcript showing the bug is from 110.76, but I've verified that the same issue occurs in 110.78.

Kernels prior to 2.2 are pretty old (1998 was the release of the last 2.1.x kernel), so it may be worthwhile to just drop that check.  If not, I've included a patch to blacklist old kernels rather than whitelist new kernels.",0,0,0,"x86","Linux","Installer","Fixed","Major","Debian sid","110.78","","https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=790283","make[1]: Entering directory '/tmp/buildd/smlnj-110.76'
echo ""s,@SHELL@,/bin/sh,g"" > vars.sed
echo ""s,@SMLNJ_HOME@,/usr/lib/smlnj,"" >> vars.sed
echo ""s,@BINDIR@,/usr/lib/smlnj/bin,"" >> vars.sed
echo ""s,@VERSION@,110.76,"" >> vars.sed
cat /tmp/buildd/smlnj-110.76/config/_arch-n-opsys | sed -f vars.sed > arch-n-opsys
chmod 777 arch-n-opsys
eval `./arch-n-opsys` && /usr/bin/make -f debian/rules boot.$ARCH-unix.tgz;
make[2]: Entering directory '/tmp/buildd/smlnj-110.76'
for f in *tgz; do tar zxf $f -C bootstrap; done
mkdir -p bootstrap/base
for f in base/*tgz; do tar zxf $f -C bootstrap/base; done
cd bootstrap && URLGETTER=/bin/false ./config/install.sh
./config/install.sh: Using shell /bin/sh.
./config/install.sh: SML root is /tmp/buildd/smlnj-110.76/bootstrap.
./config/install.sh: Installation directory is /tmp/buildd/smlnj-110.76/bootstrap.
./config/install.sh: Installing version 110.76.
./config/install.sh: URL of source archive is http://smlnj.cs.uchicago.edu/dist/working/110.76/.
./config/install.sh: !!! Script /tmp/buildd/smlnj-110.76/bootstrap/bin/.arch-n-opsys fails on this machine.
./config/install.sh: !!! You must patch this by hand and repeat the installation.
debian/rules:40: recipe for target '/tmp/buildd/smlnj-110.76/bootstrap/bin/sml' failed
make[2]: *** [/tmp/buildd/smlnj-110.76/bootstrap/bin/sml] Error 2
make[2]: Leaving directory '/tmp/buildd/smlnj-110.76'
debian/rules:56: recipe for target 'boot' failed
make[1]: *** [boot] Error 2
make[1]: Leaving directory '/tmp/buildd/smlnj-110.76'
debian/rules:78: recipe for target 'build-arch-stamp' failed
make: *** [build-arch-stamp] Error 2",""," *** 2015-07-09 03:01 --- John Reppy --- Fixed for 110.79."
135,2,"Closed",3,234,"James McCoy",103,"John Reppy","2015-07-22 22:13","2015-07-23 05:08","2015-07-23 06:14","Fails to build on Linux PowerPC","The _ml_os_tmpname changes in 110.77 caused the build to fail on Linux PowerPC systems.  The attached patch updates the build config for ppc to fix the build issues.",0,0,0,"PPC","Linux","Other","Fixed","Major","Debian sid","110.77","","https://buildd.debian.org/status/fetch.php?pkg=smlnj&arch=powerpc&ver=110.78-1&stamp=1437540067","make[6]: Leaving directory '/«PKGBUILDDIR»/build-dir/bootstrap/base/runtime/c-libs/posix-os'
echo ""v-ppc-linux"" > v-ppc-linux
gcc -ansi -O2 -DHOST_PPC -DTARGET_PPC -DOPSYS_UNIX -DOPSYS_LINUX -D_POSIX_SOURCE -D_BSD_SOURCE -DGNU_ASSEMBLER -I../../objs -I../../include -I.. -c posix-os-lib.c
gcc -ansi -O2 -DHOST_PPC -DTARGET_PPC -DOPSYS_UNIX -DOPSYS_LINUX -D_POSIX_SOURCE -D_BSD_SOURCE -DGNU_ASSEMBLER -I../../objs -I../../include -I.. -c poll.c
gcc -ansi -O2 -DHOST_PPC -DTARGET_PPC -DOPSYS_UNIX -DOPSYS_LINUX -D_POSIX_SOURCE -D_BSD_SOURCE -DGNU_ASSEMBLER -I../../objs -I../../include -I.. -c tmpname.c
tmpname.c: In function '_ml_OS_tmpname':
tmpname.c:41:3: error: expected expression before '/' token
   // for old systems
   ^
tmpname.c:44:13: error: 'buf' undeclared (first use in this function)
     tmpnam (buf);
             ^
tmpname.c:44:13: note: each undeclared identifier is reported only once for each function it appears in
make[5]: *** [tmpname.o] Error 1
makefile:37: recipe for target 'tmpname.o' failed
make[5]: Leaving directory '/«PKGBUILDDIR»/build-dir/bootstrap/base/runtime/c-libs/posix-os'",""," *** 2015-07-23 06:14 --- James McCoy --- Sorry for not being clear enough, but the problem is actually that tmpnam is trying to be used instead of mkstemp.  The patch updated ml-unixdep.h so the build process knows Linux PPC can use mkstemp and added the necessary -D_GNU_SOURCE to mk.ppc-linux. *** 2015-07-23 05:08 --- John Reppy --- Fixed for 110.79 by changing // comment to /* */ comment."
136,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2015-08-22 06:16","2015-08-22 08:08","2015-08-22 08:08","Incorrect raising of exceptions in Real.fmt and Time.fmt","The SML/NJ implementation of Real.fmt and Time.fmt do not agree
with the semantics specified in the Basis Library implementation.
Specifically, they should raise the Size exception on partial
application to a incorrect first argument, instead of waiting
for the second argument.
Additional comments:
The Basis Library specification is a bit imprecise
about Time.fmt, but it should have the same behavior
as Real.fmt.

Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","All","Basis Library","Fixed","Minor","any","110.78","exceptions","","<jhr@aeneas> sml
Standard ML of New Jersey v110.78 [built: Sun Dec 21 16:30:08 2014]
- Real.fmt (StringCvt.FIX(SOME ~1));
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val it = fn : real -> string
- it 1.0;

uncaught exception Size [size]
  raised at: Basis/Implementation/real-format.sml:124.33-124.45
- Time.fmt ~1;
[autoloading]
[autoloading done]
val it = fn : Time.time -> string
- it (Time.now());

uncaught exception Size [size]
  raised at: Basis/Implementation/time.sml:72.25-72.37
-
","Real.fmt (StringCvt.FIX(SOME ~1)); (* should raise Size *)
Time.fmt ~1; (* should raise Size *)
"," *** 2015-08-22 08:08 --- John Reppy --- Fixed for 110.79."
137,2,"Closed",3,234,"James McCoy",103,"John Reppy","2015-08-23 21:32","2015-09-22 09:26","2015-09-22 09:26","Adapt Linux PPC build to use mkstemp instead of tmpnam","Although the change of comment type made to fix [#135] did fix the build, it didn't address the other points of my patch (attached again here for good measure).  The Linux PPC build is using tmpnam when it could be using mkstemp instead.  It just needs the build config to be adjusted like the normal Linux x86 build config.",0,0,0,"PPC","Linux","Other","Fixed","Major","","110.78","","","",""," *** 2015-09-22 09:26 --- John Reppy --- Fixed in 110.79"
138,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2015-09-01 08:57","2015-09-28 10:41","2015-09-28 10:41","Incorrect behavior for Date.fromTimeLocal","The function Date.fromTimeLocal returns incorrect results.
The expected result will depend on the time zone in which
it is run.  These tests below were run in the Pacific
Time Zone.
Additional comments:
The expected output is

The UTC millenium (local time):  Fri Dec 31 16:00:00 1999

(verified against both mosml and mlton)

Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Basis Library","Fixed","Major","","110.78","Dates","","Standard ML of New Jersey v110.78 [built: Sun Dec 21 16:30:08 2014]
- val y2k = Date.date {
=       year= 2000, month= Date.Jan, day= 1, hour= 0, minute= 0, second= 0,
=       offset= SOME Time.zeroTime
=     };
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
val y2k =
  DATE
    {day=1,hour=14,isDst=SOME false,minute=0,month=Jan,
     offset=SOME (TIME {usec=#}),second=0,wday=Sat,yday=0,year=2000}
  : Date.date
- val _ = print(concat[
=       ""The UTC millenium (local time):  "",
=       Date.toString (Date.fromTimeLocal (Date.toTime y2k)), ""\n""
=     ]);
The UTC millenium (local time):  Sat Jan  1 20:00:00 2000
-
","val y2k = Date.date {
      year= 2000, month= Date.Jan, day= 1, hour= 0, minute= 0, second= 0,
      offset= SOME Time.zeroTime
    };
val _ = print(concat[
      ""The UTC millenium (local time):  "",
      Date.toString (Date.fromTimeLocal (Date.toTime y2k)), ""\n""
    ]);
"," *** 2015-09-28 10:41 --- John Reppy --- Fixed for 110.79"
139,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2015-09-01 09:11","2015-09-28 10:42","2015-09-28 10:42","Date.date is broken","The creation of Date values using the Date.date
function sometimes produces incorrect dates.
Additional comments:
The correct behavior was verified with both mosml and mlton

Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Basis Library","Fixed","Major","","110.78","Dates","","Standard ML of New Jersey v110.78 [built: Sun Dec 21 16:30:08 2014]
- fun mkdate (y,mo,d,h,mi,s) = Date.date {
= 	year=y, month=mo, day=d, hour=h, minute=mi, second=s,
= 	offset = NONE
=       };
- Date.weekDay(mkdate(1900, Date.Feb, 28, 1, 2, 3)) (* should be Wed *);
val it = Mon : Date.weekday
- Date.yearDay(mkdate(1900, Date.Feb, 28, 1, 2, 3)); (* should be 58 *)
val it = 0 : int
-","fun mkdate (y,mo,d,h,mi,s) = Date.date {
	year=y, month=mo, day=d, hour=h, minute=mi, second=s,
	offset = NONE
      };
Date.weekDay(mkdate(1900, Date.Feb, 28, 1, 2, 3)); (* should be Wed *)
Date.yearDay(mkdate(1900, Date.Feb, 28, 1, 2, 3)); (* should be 58 *)
"," *** 2015-09-28 10:42 --- John Reppy --- Fixed for 110.79."
140,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2015-09-25 22:39","2015-10-04 10:09","2015-10-04 10:09","Lookup failure in closure.sml when compiling Twelf","SMLNJ chokes when compiling the file src/solvers/cs-eq-field.fun in the Twelf source distribution (http://www.twelf.org/wiki/Download).
Submitted via web form by Ben Darwin <bcdarwin@gmail.com>
",0,0,0,"x86","All","Compiler","Accepted As Bug","Critical","3.18.20","110.78","FLINT","","...
[loading (server.cm):src/server/(sources.cm):../frontend/(sources.cm):../terminate/(sources.cm):../solvers/(sources.cm):cs-eq-field.sig]
[compiling (server.cm):src/server/(sources.cm):../frontend/(sources.cm):../terminate/(sources.cm):../solvers/(sources.cm):cs-eq-field.fun]
src/solvers/cs-eq-field.fun:528.13-529.57 Warning: match nonexhaustive
          App (U1,App (U2,Nil)) => ...

src/solvers/cs-eq-field.fun:523.13-524.39 Warning: match nonexhaustive
          App (U,Nil) => ...

src/solvers/cs-eq-field.fun:479.32 Warning: calling polyEqual
src/solvers/cs-eq-field.fun:415.40 Warning: calling polyEqual
src/solvers/cs-eq-field.fun:326.17-327.45 Warning: match nonexhaustive
          SOME m => ...

src/solvers/cs-eq-field.fun:280.20 Warning: calling polyEqual
src/solvers/cs-eq-field.fun:247.29 Warning: calling polyEqual
src/solvers/cs-eq-field.fun:139.17 Warning: calling polyEqual
src/solvers/cs-eq-field.fun:126.17 Warning: calling polyEqual
LOOKUP FAILS on v7034
in environment:
Values: v2958 v1694 v1695 v6271 v6313
Closures:
Closure v6740/6740 @0:
  Vals: v1109 v1694 v1708 v3161 v3174
  Closure v6664/6664 @0:
    Vals: v1607 v1695

..... (* much output elided *)

    Closure v6621/6621 @0:
      Vals: v5910 v5935 v6279
Disposable records:
 v7354 v7356 v7355
Known function mapping:
v39/known (L)v6663 - v6664
v6192/known (L)v7220 - v5 v6094 v7205

..... (* more elided *)

       v576(v6457,v6347)
    v576(v6458,v570)
 v3065(v6459,v5078,v5082,(I)0)
Error: Compiler bug: Closure: Lookup failure in cps/closure.sml
val it = false : bool
","cd twelf/src/solvers
sml
CM.make ""sources.cm"";
"," *** 2015-10-04 10:09 --- John Reppy --- This bug was caused by the switch in 110.78 to a new implementation of ListMergeSort.sort.  The old implementation reversed the order of equal elements, whereas the new implementation is a stable sort.   I have not been able to figure out how to fix the _real_ bug in FLINT/clos/closure.sml, but I have patched the problem for 110.79 by using the old implementation in the one place that it matters.  I have submitted a new bug report [#143] for the root problem."
143,1,"Open",3,103,"John Reppy",124,"Zhong Shao","2015-10-04 10:06","","2015-10-04 10:06","Closure thinning is broken.","See bug [#140] for more information.

This bug was caused by the switch in 110.78 to a new implementation of ListMergeSort.sort.  The old implementation reversed the order of equal elements, whereas the new implementation is a stable sort.   I have tracked the bug down to a specific instance of the sort in FLINT/clos/closure.sml, but I not been able to figure out what the fix is.  We patched [#140] by switching back to the old sort, but we should understand why thinning depends on the order.


",0,0,0,"All","All","Compiler","Accepted As Bug","Major","","110.78","FLINT, closure conversion","","See bug [#140] for details.","Try to build the twelf solvers library using version 110.78.",""
144,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2015-10-14 11:29","2015-12-07 13:43","2015-12-07 13:43","Splay sets are broken","SplaySetFn.all is broken
Submitted via web form by Sean McLaughlin <seanmcl@gmail.com>
",0,0,0,"All","Generic Unix","SML/NJ Library","Fixed","Major","Mac","v110.78","data structures","","$ rlwrap sml
Standard ML of New Jersey v110.78 [built: Thu Aug 20 19:23:18 2015]
- structure S = SplaySetFn(type ord_key = int val compare = Int.compare);
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
[autoloading done]
structure S : ORD_SET
- S.all (fn x => true) S.empty;
val it = false : bool
- S.all (fn x => true) (S.add (S.empty, 1));
val it = false : bool",""," *** 2015-12-07 13:43 --- John Reppy --- Fixed for 110.80"
145,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2015-10-20 09:41","2016-08-09 14:28","2016-08-09 14:28","Internal exception occurs on bogus annotation instead of typechecking diagnostic","An incorrect polymorphic type annotation that should produce typechecking
diagnostics instead results in an uncaught exception.
Additional comments:
The type is properly inferred when the annotation is left off, and diagnostics
are produced when given an incorrect annotation other than 'a list, such as
string list.

Submitted via web form by Mark Laws <mdl@60hz.org>
",0,0,0,"None","Generic Unix","Compiler","Fixed","Minor","","110.79","","","Standard ML of New Jersey v110.78 [built: Mon Feb 16 08:25:10 2015]
- fun f (x : 'a list) = 13 :: x;

unexpected exception (bug?) in SML/NJ: Match [nonexhaustive match failure]
  raised at: ../compiler/Elaborator/types/unify.sml:84.37
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Elaborator/elaborate/elabmod.sml:1741.65
             ../compiler/Elaborator/elaborate/elabmod.sml:1745.59
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:44.55","fun f (x : 'a list) = 13 :: x"," *** 2016-08-09 14:28 --- John Reppy --- Fixed for 110.80 *** 2015-10-20 10:33 --- John Reppy --- This bug is also present in 110.79."
146,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2015-11-05 15:16","2016-06-16 14:24","2016-06-16 14:24","Problems building on recent versions of 64-bit Ubuntu","When trying to install SML/NJ on Ubuntu 14.04 (64-bit), the
installer produces the following message:

config/install.sh: !!! SML/NJ requires support for 32-bit executables.
On Debian Linux, you may need to apt-get install gcc-multilib g++-multilib ia32-libs.
On RH Fedora, try: yum install glibc-devel.i686 libgcc.i686

The package ia32-libs is no longer supported, so there needs
to be an alternative suggestion.
Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Linux","Installer","Fixed","Critical","Ubuntu 14.04","110.79","installation","","","na"," *** 2016-06-16 14:24 --- John Reppy --- This issue, which is the same as bug 164, has been fixed for 110.80. *** 2015-11-05 15:24 --- Lars Bergstrom --- If it's the same package we used to use on Ubuntu, it's now ""libc6:i386"""
147,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2015-11-07 06:53","2015-11-09 09:35","2016-08-04 09:53","Hexadecimal escapes in strings are not supported","The \uxxxx syntax for hexadecimal strings is not supported:


Submitted via web form by Rob Arthan <rda@lemma-one.com>
",0,0,0,"None","Generic Unix","Compiler","Fixed","Cosmetic","N/A","110.79","lexis","","Standard ML of New Jersey v110.79 [built: Sun Oct  4 14:45:06 2015]
- (* The following should result in val shriek = ""!"" *)
val shriek = ""\u0021"";
- stdIn:2.14-2.16 Error: unclosed string","(* The following should result in val shriek = ""!"" *)
val shriek = ""\u0021"";

"," *** 2016-08-04 09:53 --- John Reppy --- My original fix mapped non-ASCII code points to UTF-8, but I now think that this is the wrong semantics.  Instead, we treat ""\u"" escapes the same way that decimal escapes are handled. *** 2015-11-09 09:35 --- John Reppy --- Fixed for 110.80.  Non-ascii code points are mapped to UTF-8."
149,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2015-11-23 23:16","2016-09-12 12:15","2016-09-12 12:15","Datatype replication exposes hidden constructors","Problem:     Datatype replication brings constructors into scope when it
should not, in particular when the constructors are hidden by either
1. a type constraint in a signature that is matched transparently or
2. abstype or
3. both of the above.

Additional comments:
In practice, this is a major failing of the type system.
This issue means that we can construct a theorem

  |- false

in ProofPower with a valid SML program, as shown below, even though no
sequence of valid logical inferences can give such a theorem.
--------
datatype z1 = datatype pp'Kernel.THM;
val Thm {level, theory, ...} = t_thm;
val false_thm = Thm {level = level, sequent = ([], %<%F%>%), theory =
theory};
--------
Ironically, ProofPower is an LCF-style theorem prover.  Interestingly,
ProofPower is still 'sound' because it builds with another SML compiler
that does not have this issue.  So here is a case where the standardized
ML, allowing compiler redundancy, is of practical benefit.

Submitted via web form by Phil Clayton <phil.clayton@lineone.net>
",0,0,0,"None","Generic Unix","Compiler","Fixed","Major","","110.79","datatype replication abstract type constructor","","","(* 1. Example with datatype made abstract by signature *)

signature TEST1 =
  sig
    type t
  end

structure Test1 : TEST1 =
  struct
    datatype t = A | B
  end

datatype z1 = datatype Test1.t;

(* Constructors for datatype t should not be accessible
 * but are made visible by the datatype replication. *)

A = B;        (* we can refer to A and B... *)
A : Test1.t;  (* ...and constuct values of type Test1.t *)


(* 2. Example with an abstype *)

abstype t2 = A of int | B of bool
with
end

datatype z2 = datatype t2;

A 4 : t2;     (* we can construct values of type t2 *)


(* 3. Example with both follows below *)
(*
Transcript:  The following example shows that certain abstract types
cannot guarantee properties of values.  In the following example, the
SML type system should guarantee that Test3.destNat returns a natural
number because Test3.t values can be created from natural numbers only.
*)
signature TEST3 =
  sig
    type t
    val mkNat : int -> t
    val destNat : t -> int
  end

structure Test3 : TEST3 =
  struct
    abstype t = Nat of int  (* always non-negative *)
    with
      fun mkNat n = if n < 0 then raise Fail ""negative"" else Nat n
      fun destNat (Nat n) = n
    end
  end

open Test3;

mkNat ~3;  (* Fail: negative - can't create a negative natural *)
destNat (mkNat 0);  (* ok *)

datatype z3 = datatype Test3.t;

val x = Nat ~3;  (* now we can create a negative natural *)

destNat x;  (* val it = ~3 : int *)
"," *** 2016-09-12 12:15 --- David MacQueen --- Fix committed for 110.81 (revision 4297).  Added a new boolean field ""stripped"" in the DATATYPE constructor for ticking.  This is true when a datatype has been matched to a simple type spec in signature matching, otherwise (default) false.  Datatype replication causes an error when the right hand side is a stripped datatype."
150,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2015-12-07 15:23","2016-08-18 15:11","2016-08-18 15:11","Add title to batch script","The title of scripts executed through sml.bat is ""CMD"" or the like - non informative, in the case where other CMD windows are open
Fix:
add

    title SML - Standard ML of New Jersey

as the second line in smlnj.bat

Submitted via web form by Elazar <elazarg@gmail.com>
",0,0,0,"None","Windows Vista","Installer","Fixed","Feature","Any Windows","<= 110.79","","","","run sml.bat"," *** 2016-08-18 15:11 --- John Reppy --- Confirmed fixed in 110.80 *** 2016-06-16 14:09 --- John Reppy --- I've patched the file as suggested; it will need to be tested before it is marked as closed."
151,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2016-01-10 08:58","2016-08-17 06:46","2016-08-17 06:46","Error installing from source on Mac OS X","Error when trying to compile from source on Mac OS X 10.9.5 (Mavericks).
Additional comments:
I've managed to get around it by editing the runtime/objs/mk.x86-darwin
file, precisely, I've **removed** the $(SDK) part in this line:

AS = /usr/bin/as -arch i386 $(SDK)

where SDK is defined as:

SDK = -mmacosx-version-min=10.6

All worked well after this small change, but I'm unsure what I might
have broken. My OS X version is quite old (10.9.5 — Mavericks) and I'm a
bit reluctant to upgrade it right now in order to test more recent versions.


Submitted via web form by Ionuț G. Stan <ionut.g.stan@gmail.com>
",0,0,0,"x86","MacOS X","Installer","Fixed","Critical","10.9.5","110.79","installation","","as -arch i386 -mmacosx-version-min=10.6 -o prim.o prim.s
FATAL:/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../libexec/as/i386/as:
I don't understand 'm' flag!
make[1]: *** [prim.o] Error 1
make: *** [all] Error 2
config/install.sh: !!! Run-time system build failed for some reason.
","n.a."," *** 2016-08-17 06:46 --- John Reppy --- Fixed for 110.80 by changing ""$(SDK)"" argument to ""as"" command to ""$(AS_SDK)""in mk.x86-darwin.  We use a command-line definition to the make command (AS_ACCEPTS_SDK=[yes|no]) to select the correct behavior.  Note that leaving off the SDK argument for 10.10+ results in  a loader warning: ~  ~ ld: warning: object file (prim.o) was built for newer OSX version (10.11) than being linked (10.6) ~  ~ which is why we include it for more recent versions of MacOS X. *** 2016-01-13 03:15 --- Alessandro Bruni --- I made a pull request for upgrading the homebrew package to the newer version, and this bug shows up on the same configuration. ~ Unfortunately I can't help on this bug since I don't have such setup, and it's the continuous integration server that's failing. ~  ~ I'll keep listening to this thread and make the proper updates on the brew package when the bug is resolved. ~ Here is a link to the homebrew pull request: ~ https://github.com/Homebrew/homebrew/pull/47955"
152,3,"Deleted",3,142,"Bug Submitter",100,"Nobody","2016-03-15 04:48","2016-04-07 07:49","2016-04-07 07:49","OS X El Capitan","The installation failed
Submitted via web form by John DiRuggiero <jdiru@me.com>
",0,0,0,"None","MacOS X","Installer","Invalid","Critical","10.11.3","","Version 10.11.3","","",""," *** 2016-04-07 07:49 --- John Reppy --- Report contains no useful information"
153,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2016-04-02 14:12","2016-09-12 20:24","2016-09-12 20:24","Enabling Successor ML features is delayed","The compiler does not recognize the ""0b0110"" syntax for integer
literals when in Successor ML mode.  Binary word literals do
work as expected.
Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Compiler","Fixed","Minor","","110.79","successor-ml","","Standard ML of New Jersey v110.79 [built: Sun Oct  4 14:45:06 2015]
- Control.succML := true;
val it = () : unit
- val w = 0wb100;
val w = 0wx4 : word
- val x = 0b100;
stdIn:2.10-2.14 Error: unbound variable or constructor: b100
stdIn:2.5-2.14 Error: operator is not a function [overload conflict]
  operator: [int ty]
  in expression:
    0 <errorvar>
","Control.succML := true;
val w = 0wb100; (* works *)
val x = 0b100;"," *** 2016-09-12 20:24 --- John Reppy --- Fixed for 110.81.   We now use a function Control.setSuccML to switch to/from Successor ML mode in the REPL.  The function resets the parser, so the next input will be correctly parsed. *** 2016-08-09 14:31 --- John Reppy --- Changed summary of bug to reflect its true nature (was ""Integer binary literals do not scan correctly"") *** 2016-04-02 15:46 --- John Reppy --- It turns out that the problem is not in scanning, but in switching from SML'97 mode to SuccessorML mode."
154,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2016-04-05 07:31","2016-04-07 07:48","2016-04-07 07:48","Return code for ml-ulex when there is an error","ml-ulex does not return an error status when there is
a syntax error in the input.  In fact, it even generates
a lexer in that case!
Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","ML-Ulex","Fixed","Minor","","110.79","","","<jhr@valhalla> ml-ulex gd.lex
[ml-ulex: parsing]
 [gd.lex:51.0] Syntax error: unclosed string
[ml-ulex: DFA gen]
 77 states in full DFA
[ml-ulex: SML gen]
<jhr@valhalla> echo $?
0
",""," *** 2016-04-07 07:48 --- John Reppy --- Fixed for 110.80"
155,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2016-04-06 18:42","2016-04-07 07:00","2016-04-07 07:00","Misleading printing of word literals in error messages","Word literals are printed as integer literals (i.e., without the leading ""0w""),
which can result in confusing error messages.
Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Installer","Fixed","Cosmetic","","110.79","","","Standard ML of New Jersey v110.79 [built: Wed Apr  6 18:38:53 2016]
- fun f (x : int) = x;
val f = fn : int -> int
- f 0w1;
stdIn:2.1-2.6 Error: operator and operand don't agree [overload conflict]
  operator domain: int
  operand:         [word ty]
  in expression:
    f 1
","fun f (x : int) = x;

f 0w1;
"," *** 2016-04-07 07:00 --- John Reppy --- Fixed for 110.80"
156,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2016-04-21 18:05","2016-05-03 18:21","2016-05-03 18:21","SML resumes after SIGSTOP with bogus exception report","Start sml interactively.  At some point, type your 'susp'
character (which defaults to '^Z'; I have it set to '^X' so
that I can use '^Z' for EOF everywhere).  This sends the
SIGSTOP signal and the sml process is suspended, returning you
to your shell (if your shell supports job control).  When you
resume the sml process using the 'fg' command, it reports
an unexpected interrupt in text-io-fn.sml

When this happens between top-level items, it's a minor
annoyance; when it happens while code is executing, it is
a major annoyance.
Additional comments:
I do not know whether this occurs on any other system.  My
machines were recently upgraded to OSX 10.11, which broke a
lot of things, so I had to install the latest SML/NJ.  One
of the things that broke was VirtualBox, so I haven't been
able to test this in Linux or X86 Solaris yet.

Submitted via web form by Richard A. O'Keefe <ok@cs.otago.ac.nz>
",0,0,0,"All","MacOS X","Compiler","Fixed","Cosmetic","at least 10.6 to 10.11","110.79","terminal interaction SIGSTOP unexpected exception","","m% sml
Standard ML of New Jersey v110.79 [built: Sun Oct  4 14:45:06 2015]
- (* I have stty eof ""^&Z"" susp ""^X"" *)
- ^X
[1]+  Stopped                 sml
m% fg
sml

unexpected exception (bug?) in SML/NJ: Io [Io: input failed on ""<stdIn>"", Interrupted system call]
  raised at: Basis/Implementation/IO/text-io-fn.sml:119.14-119.56
             ../compiler/Parse/lex/ml.lex.sml:933.40-933.45
             ../compiler/Parse/main/parser.sml:106.37
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:44.55
- - TextIO.inputLine TextIO.stdIn;
^X
[1]+  Stopped                 sml
m% fg
sml

uncaught exception Io [Io: inputLine failed on ""<stdIn>"", Interrupted system call]
  raised at: Basis/Implementation/IO/text-io-fn.sml:119.14-119.56

",""," *** 2016-05-03 18:21 --- John Reppy --- Fixed for 110.80 on Unix.  Not sure if this issue occurs on Windows."
157,1,"Open",3,142,"Bug Submitter",106,"David MacQueen","2016-05-09 11:27","","2016-05-09 11:42","Uninformative error message for missing component in nested structure","The error message for the situation where there is missing component
in a nested structure definition does not include the full path of
the component.  If there are multiple components with the same name
and the structure is large, it is difficult to track down the error.

A related problem is that the given line numbers are for the whole
outer structure, instead of just for the nested substructure.
Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Compiler","Accepted As Bug","Cosmetic","","110.79","error messages","","- signature SIG = sig structure A : sig val x : int end end;
signature SIG =
  sig
    structure A : sig val x : int end
  end
- structure S : SIG =
=   struct
=     structure A =
=       struct
=       end
=   end;
stdIn:1.2-11.6 Error: unmatched value specification: x
","signature SIG = sig structure A : sig val x : int end end;

structure S : SIG =
  struct
    structure A =
      struct
      end
  end;
",""
158,2,"Closed",3,142,"Bug Submitter",100,"Nobody","2016-05-11 06:27","2016-05-11 07:50","2016-05-11 07:50","Test Audio capcha","Visual captchas on the SMLNJ online bug report form are too obfuscated for my
eyes. This is a test of the alternate audio capcha.
Additional comments:
Some of the audio captcha voices have poor prononciation.

Submitted via web form by Roger Price <roger@rogerprice.org>
",0,0,0,"None","Generic Unix","Installer","None","Cosmetic","","","","","","Who remembers Tony Hoare's speech at the ACM awards?

Hopeful young programmer Ton-y
wrote code as he drove his car home. He
  partitioned in two
  and when he was through
passed both parts on to young Ton-

Professor, do I get extra credit for the tail recursion
in my limerick ?"," *** 2016-05-11 07:50 --- John Reppy --- Unfortunately, we do not have any control over the captcha mechanism, since it is just a link to the service provided by google."
159,1,"Open",3,142,"Bug Submitter",106,"David MacQueen","2016-05-17 00:37","","2022-06-02 08:42","uncaught exception EA when loading module ","Compiler throws an exception when loading two functions
Submitted via web form by Michal Seweryn <michalsew@gmail.com>
",0,0,0,"x86","All","Compiler","Accepted As Bug","Major","Fedora 22","110.78","","","[opening kea.sml]

uncaught exception EA
  raised at: ../../MLRISC/x86/mltree/x86.sml:417.32-417.34
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:292.17-292.20
","fun f x s = SOME (x, s)

fun g _ = #2 (g 0, f 0)
"," *** 2022-06-01 18:16 --- John Reppy --- This bug is still present in 110.99.2 (64 bit).  The example also causes the system to crash with a memory fault in 2021.1. *** 2016-05-17 14:02 --- John Reppy --- This bug is probably the same as #160."
160,1,"Open",3,142,"Bug Submitter",106,"David MacQueen","2016-05-17 00:53","","2022-06-02 08:42","uncaught exception TypTbl when loading module ","Exactly every third time a module is loaded to smlnj, EA exception is thrown and uncaught. The other two times TypTbl is thrown.
Submitted via web form by Michal Seweryn <michalsew@gmail.com>
",0,0,0,"x86","All","Compiler","Accepted As Bug","Major","Fedora 22","110.78","","","- use ""kea.sml"";
[opening kea.sml]

uncaught exception EA
  raised at: ../../MLRISC/x86/mltree/x86.sml:417.32-417.34
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:292.17-292.20
- use ""kea.sml"";

unexpected exception (bug?) in SML/NJ: TypTbl [TypTbl]
  raised at: ../../smlnj-lib/Util/int-hash-table.sml:90.31-90.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:44.55
- use ""kea.sml"";

unexpected exception (bug?) in SML/NJ: TypTbl [TypTbl]
  raised at: ../../smlnj-lib/Util/int-hash-table.sml:90.31-90.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:44.55
- use ""kea.sml"";
[opening kea.sml]

uncaught exception EA
  raised at: ../../MLRISC/x86/mltree/x86.sml:417.32-417.34
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:44.55
             ../compiler/TopLevel/interact/evalloop.sml:292.17-292.20
- use ""kea.sml"";

unexpected exception (bug?) in SML/NJ: TypTbl [TypTbl]
  raised at: ../../smlnj-lib/Util/int-hash-table.sml:90.31-90.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:44.55
- use ""kea.sml"";

unexpected exception (bug?) in SML/NJ: TypTbl [TypTbl]
  raised at: ../../smlnj-lib/Util/int-hash-table.sml:90.31-90.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:44.55
...","fun f x s= SOME (x, s)

fun snd (_, y) = y

fun g x = snd (g x, f 0)"," *** 2022-06-02 08:42 --- John Reppy --- The problem is caused by FLINT, which introduces code to unwrap floats (the code will never be executed, because it is guarded by type tests).  The unwrapping code (after CPS optimization) is trying to load from location 0, which is not a value effective address (EA). *** 2022-06-01 18:18 --- John Reppy --- This bug is still present in version 110.99.2 (64-bit) and causes a crash with a memory fault in 2021.1. *** 2016-05-17 14:02 --- John Reppy --- This is probably the same bug as #159.  Sometimes the ""EA"" exception is raised and sometimes the following happens: ~  ~ unexpected exception (bug?) in SML/NJ: GenTbl [GenTbl] ~   raised at: ../../smlnj-lib/Util/int-hash-table.sml:90.31-90.40 ~              ../compiler/Basics/stats/stats.sml:198.40 ~              ../compiler/Basics/stats/stats.sml:198.40 ~              ../compiler/Basics/stats/stats.sml:198.40 ~              ../compiler/TopLevel/interact/evalloop.sml:44.55 ~ "
161,2,"Closed",3,142,"Bug Submitter",107,"Mike Rainey","2016-05-23 15:42","2016-06-30 10:50","2016-06-30 10:50","MLRISC incorrect dividend sign extension before 32-bit divide in x86_64","Copied from: https://smlnj-gitlab.cs.uchicago.edu/manticore/pmlc/issues/3

This bug was uncovered in Manticore, but is an apparent problem in MLRISC's x86_64 code generator.

When performing -3/x where x is an int stored in %r9d, MLRISC generates

movl    $-3, %eax
cqto
idivl   %r9d

However, cqto sign extends %rax to %rdx:%rax, and since the upper half of
%rax is zeros, %rdx:%rax will contain 4294967293 and not -3.

What should have been emitted before performing idivl is cltd, which will
extend %eax to %edx:%eax. Reference for AT&T syntax assembly instructions
are here: https://docs.oracle.com/cd/E19120-01/open.solaris/817-5477/eoizm/index.html
Submitted via web form by Kavon Farvardin <kavon@cs.uchicago.edu>
",0,0,0,"x86","Generic Unix","Other","Fixed","Minor","OS X 10.11.4","110.79","MLRISC","","'Process 52376 launched: './a.out' (x86_64)
'Process 52376 stopped
* thread #2: tid = 0xf2a1b1, 0x000000010000ee76 a.out`else.82E + 14, stop reason = breakpoint 1.1
    frame #0: 0x000000010000ee76 a.out`else.82E + 14
a.out`else.82E:
    ; earlier we did:  movl   $-3, %eax
->  0x10000ee76 <+14>: movq   %r11, %r14
    0x10000ee79 <+17>: cqto
    0x10000ee7b <+19>: idivl  %r9d
    0x10000ee7e <+22>: movslq %eax, %rdi
(lldb) register read edx eax rdx rax
     edx = 0x0000e451
     eax = 0xfffffffd
     rdx = 0x000000010000e451  a.out`___lldb_unnamed_function228$$a.out
     rax = 0x00000000fffffffd
(lldb) stepi
(lldb) stepi
Process 52376 stopped
* thread #2: tid = 0xf2a1b1, 0x000000010000ee7b a.out`else.82E + 19, stop reason = instruction step into
    frame #0: 0x000000010000ee7b a.out`else.82E + 19
a.out`else.82E:
->  0x10000ee7b <+19>: idivl  %r9d
    0x10000ee7e <+22>: movslq %eax, %rdi
    0x10000ee81 <+25>: callq  0x1000220e0               ; M_IntToString at basis.c:48
    0x10000ee86 <+30>: movq   %r13, %r8
(lldb) register read edx eax rdx rax
     edx = 0x00000000
     eax = 0xfffffffd
     rdx = 0x0000000000000000
     rax = 0x00000000fffffffd","Manticore's usage of MLRISC for division is as follows:

val i32Ty = 32
...
| P.I32Div a => genArith2 (i32Ty, divs, a)
| P.I32Mod a => genArith2 (i32Ty, rems, a)
...
val fbind = BE.VarDef.fbind varDefTbl
...
fun genFArith2 (fty, oper, (v1, v2)) =
    fbind (fty, v, oper (fty, fdefOf v1, fdefOf v2))

fun divs (ty, a, b) = T.DIVS(T.DIV_TO_ZERO, ty, a, b)
fun rems (ty, a, b) = T.REMS(T.DIV_TO_ZERO, ty, a, b)

in the MLRISC backend.

And the following Manticore test case fails:

fun check f g =
	fn (a, b, expected) => let
		val (f_func, f_name) = f
		val (g_func, g_name) = g
		val fres = f_func a b
		val gres = g_func a b
	in
		if fres = gres andalso fres = expected
		then Print.print ""correct\n""
		else let
			val a = Int.toString a
			val b = Int.toString b
			val fres = Int.toString fres
			val gres = Int.toString gres
			val expected = Int.toString expected
		in
			Print.print (""wrong.\n""
			  ^ a ^ "" "" ^ f_name ^ "" "" ^ b ^ "" = "" ^ fres ^ ""\n""
			  ^ a ^ "" "" ^ g_name ^ "" "" ^ b ^ "" = "" ^ gres ^ ""\n""
			  ^ ""and expected them both to be "" ^ expected ^ ""\n"")
		end
	end

val modCases = [
	(~5, 4, ~1),
	(~5, ~4, ~1),
	(5, ~4, 1),
	(5, 4, 1)
]

val divCases = [
	(~3, 2, ~1),
	(3, 2, 1)
]

fun f_mod a b = a mod b
fun f_rem a b = Int.rem(a, b)
val modChecker = check ((f_mod, ""mod"")) ((f_rem, ""rem""))

fun f_div a b = a div b
fun f_quot a b = Int.quot(a, b)
val divChecker = check ((f_div, ""div"")) ((f_quot, ""quot""))

val _ = List.app modChecker modCases
val _ = List.app divChecker divCases

"," *** 2016-06-30 10:50 --- John Reppy --- Fixed for 110;80. *** 2016-05-23 16:12 --- Kavon Farvardin --- _probably_ being added by default, I haven't actually confirmed it. *** 2016-05-23 16:11 --- Kavon Farvardin --- Per intel's architecture manual, CQO and CDQ use the same opcode, but use a different prefix. Namely, CQO uses the REX.W prefix, and it is being added by default to all CQO-type sign extensions in MLRISC's x86_64 code generator."
164,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2016-06-15 10:31","2016-06-15 11:43","2016-06-16 14:23","Inaccurate install instructions, ia32-libs have been deprecated","As of Debian Wheezy, 'ia32-libs' have been deprecated in favor of using multiarch support.
https://wiki.debian.org/Multiarch
https://wiki.ubuntu.com/MultiarchSpec




Fix:
Replace the instructions to install 'ia32-libs' with the following:

You will probably need to do the following to achieve the same goal:
  dpkg --add-architecture i386 # enable multi-arch
  apt-get update
  apt-get install libc6:i386 # install base 32bit libraries

This seems to be true for CentOS as well.

On CentOS I was able to install the following to install smlnj successfully:
   yum groupinstall ""Development tools"" # ~= 'build-essential'
   yum install libgcc.i686
   yum install glibc-devel.i686

Presumably Fedora is further along than CentOS so I would assume the above instructions work there as well.


I would like my extra credit in the form of beer, delivered to the techstaff office. :P

Submitted via web form by Phil Kauffman <kauffman@cs.uchicago.edu>
",0,0,0,"None","Linux","Installer","Fixed","Cosmetic","","110.79","","","",""," *** 2016-06-16 14:23 --- John Reppy --- This is the same issue as bug #146. *** 2016-06-15 11:43 --- John Reppy --- This issue has been fixed for 110.80"
165,1,"Open",3,142,"Bug Submitter",118,"Allen Leung","2016-07-01 07:23","","2019-10-04 16:03","Nowhere generates incorrect SML code","When we invoke nowhere on a small file test.now, it generates
a file test.sml that contains undefined variables. test.sml
is then rejected by the compiler.

Additional comments:
Enclosed is the generated file test.sml:

<<<<<<<<<<<<<<<<<<<<
(* WARNING: this is generated by running 'nowhere test.now'.
 * Do not edit this file directly.
 * Version 1.2.2
 *)

(*#line 6.1 ""test.now""*)
datatype xbool =
  Xtrue
| Xfalse
    and strg =
  Xa
| Xb
| C of strg * strg

(*#line 9.1 ""test.now""*)
fun gte ((x1:strg), (x2:strg)) = (
    let val v_6 = (x1, x2)
        fun state_0 () = raise Match
        fun state_8 () =
            let val (v_8, v_7) = v_1
            in
               let val e = v_5
                   and e2 = v_8
                   and s2 = v_7
               in (if (e = e2)
                     then Xfalse
                     else (state_0 ()))
               end
            end
    in
       let val (v_5, v_0) = v_6
       in
          (case v_5 of
            C v_4 =>
            let val (v_3, v_2) = v_4
            in
               let val e = v_3
                   and e2 = v_0
                   and s = v_2
               in gte (e, e2)
               end
            end
          | Xa =>
            (case v_0 of
              C v_1 => state_8 ()
            | Xa => Xtrue
            | Xb => state_0 ()
            )
          | Xb =>
            (case v_0 of
              C v_1 => state_8 ()
            | _ => state_0 ()
            )
          )
       end
    end : xbool)

(*#line 15.1 ""test.now""*)
fun main () = print ""\n""

(*#line 19.1 ""test.now""*)
val _ = main ()
>>>>>>>>>>>>>>>>>>>>

Submitted via web form by Hubert Garavel <hubert.garavel@inria.fr>
",0,0,0,"x86","Linux","Other","None","Major","Debian jessie","110.79","nowhere","","$ nowhere test.now
test.now:9.1-13.41: warning: non-exhaustive matches
(Xa, Xa) => ...
(C(e, s), e2) => ...
(e, C(e2, s2)) where ... => ...
[Generating test.sml]

$ sml test.sml
Standard ML of New Jersey v110.79 [built: Thu Jun 23 15:18:54 2016]
[opening test.sml]
test.now:14.34-14.37 Error: unbound variable or constructor: v_1
test.now:16.28-16.31 Error: unbound variable or constructor: v_5
/home/mtabikh/SML/bin/sml: Fatal error -- Uncaught exception Error with 0
raised at ../compiler/TopLevel/interact/evalloop.sml:66.19-66.27
","local

datatype xbool = Xtrue | Xfalse
and strg = Xa | Xb | C of strg * strg;
in
datatype xbool = Xtrue | Xfalse
and strg = Xa | Xb | C of strg * strg;

fun gte (x1:strg, x2:strg ): xbool =
case (x1, x2) of
(Xa, Xa) => Xtrue
| (C (e, s), e2) => gte (e, e2)
| (e, C (e2, s2)) where e = e2 => Xfalse

fun main () =(
  print ""\n""
)

val _ = main ()

end"," *** 2019-10-04 16:03 --- David MacQueen --- DBM, 2019:10:4. nowhere was a tool build by Allen Leung as part of MLRISC.  If/when we replace MLRISC (e.g. by llvm), this bug will go away. ~ "
166,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2016-07-29 03:15","2016-08-04 09:42","2016-08-04 09:42","Can't install SML/NJ in directories containing spaces","Installation fails if the root directory contains spaces.
Fix:
diff -r smlnj-old/config/unpack smlnj/config/unpack
58c58
<     for base in $2 $VERSION-$2 ; do
---
>     for base in ""$2"" ""$VERSION-$2"" ; do
290c290
< 	unpack ""documentation"" $ROOT doc doc
---
> 	unpack ""documentation"" ""$ROOT"" doc doc
diff -r smlnj-old/nlffi/gen/build smlnj/nlffi/gen/build
42c42
< $BUILD ml-nlffigen.cm Main.main $HEAP_IMAGE
---
> ""$BUILD"" ml-nlffigen.cm Main.main ""$HEAP_IMAGE""


Submitted via web form by Eugene <eush77@gmail.com>
",0,0,0,"None","Generic Unix","Installer","Fixed","Major","Ubuntu","v110.79","install, config, nlffi","","/home/eush77/dir A/smlnj/config/unpack: Fetching documentation from http://smlnj.cs.uchicago.edu/dist/working/110.79/. Please stand by...
/home/eush77/dir A/smlnj/config/unpack: Trying A/smlnj.tgz ...
/home/eush77/dir A/smlnj/A/smlnj.tgz: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Trying A/smlnj.tar.gz ...
/home/eush77/dir A/smlnj/A/smlnj.tar.gz: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Trying A/smlnj.tar.Z ...
/home/eush77/dir A/smlnj/A/smlnj.tar.Z: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Trying A/smlnj.tz ...
/home/eush77/dir A/smlnj/A/smlnj.tz: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Trying A/smlnj.tar ...
/home/eush77/dir A/smlnj/A/smlnj.tar: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Trying A/smlnj.tar.bz2 ...
/home/eush77/dir A/smlnj/A/smlnj.tar.bz2: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Trying 110.79-A/smlnj.tgz ...
/home/eush77/dir A/smlnj/110.79-A/smlnj.tgz: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Trying 110.79-A/smlnj.tar.gz ...
/home/eush77/dir A/smlnj/110.79-A/smlnj.tar.gz: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Trying 110.79-A/smlnj.tar.Z ...
/home/eush77/dir A/smlnj/110.79-A/smlnj.tar.Z: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Trying 110.79-A/smlnj.tz ...
/home/eush77/dir A/smlnj/110.79-A/smlnj.tz: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Trying 110.79-A/smlnj.tar ...
/home/eush77/dir A/smlnj/110.79-A/smlnj.tar: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Trying 110.79-A/smlnj.tar.bz2 ...
/home/eush77/dir A/smlnj/110.79-A/smlnj.tar.bz2: No such file or directory
/home/eush77/dir A/smlnj/config/unpack: Fetching 110.79-A/smlnj.tar.bz2 was no success.
   You should try to do it manually now.
/home/eush77/dir A/smlnj/config/unpack: Please, fetch documentation archive
 (A/smlnj.* or 110.79-A/smlnj.*)
 from http://smlnj.cs.uchicago.edu/dist/working/110.79/
 and then re-run this script!
FAILURE: unpacking failed
./config/install.sh: !!! Installation of libraries and programs failed.",""," *** 2016-08-04 09:42 --- John Reppy --- Fixed for 110.80 (needs to be tested)."
167,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2016-08-03 08:44","2016-08-03 08:52","2016-08-03 08:52","Bug in handling of long options in GetOpt","The GetOpt module does not support long options, where one flag
is a prefix of another (e.g., ""--log"" and ""--log-x"").
Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","SML/NJ Library","Fixed","Minor","","110.79","","","- opts();

uncaught exception Fail [Fail: option `--log' is ambiguous; could be one of:
    --log
    --log-x
]
  raised at: stdIn:21.31-21.37
","val opts = GetOpt.getOpt {
        argOrder = GetOpt.RequireOrder,
        options = [
            {short = """", long = [""log""], desc = GetOpt.NoArg(fn () => print ""log\n""), help = """"},
            {short = """", long = [""log-x""], desc = GetOpt.NoArg(fn () => print ""logx\n""), help = """"}
          ],
        errFn = fn s => raise Fail s
      } [""--log"", ""foo""];
"," *** 2016-08-03 08:52 --- John Reppy --- Fixed in 110.80"
168,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2016-08-19 09:38","2020-06-17 08:52","2020-06-17 08:52","heap2exec broken on 64-bit machines with default toolchains","This is probably not particularly urgent, especially with recent
ongoing work on Successor ML, but this might break some
old build setups.

heap2exec (the script itself) appears to be unusable by default
on 64bit machines with default toolchains. The reason is that most
64bit machines now compile (cc) and link (ld) targeting 64bit
architectures by default. Hence, additional flags must be added to
the $(CC) and $(LD) variable to the script to accomodate that.
Additional comments:
This is reproducable on 2 64bit machines:
one running linux and one running OSX.
Both have the standard developer toolchains installed. On linux
it triggers gcc, while on OSX it triggers clang. Both broke, with
somewhat similar messages. On OSX (HEAP-SUFFIX=x86-darwin),
it tried to link with the binary instead of the relocatable.

I believe that the updates in runtime, which now has the -m32
flags, forgot to update the heap2exec script as well?

Fix:
I actually don't know what the exact linker flags for ld should be,
but something like this linked properly on my machine:

gcc -m32 mltq.s runtime.x86-linux.a -lm -ldl -rdynamic

So for my own projects, I use my own build scripts (apparently
some folks really like linked binaries).

However, I'm extremely confused about what flags should be passed
to ld to make it link with the binary runtime. I've tried
something along the lines ""ld -m elf_i386"", but it still didn't
like it, but I do believe something to should be added to
EXEC_FLAGS, SO_FLAGS, and A_FLAGS in
config/_heap2exec (lines 77~85 declared, modified in if checks).

If it's any help, this is the output of `gcc -v` for the above command:


Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Debian 4.9.2-10' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --with-arch-32=i586 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 4.9.2 (Debian 4.9.2-10)
COLLECT_GCC_OPTIONS='-v' '-m32' '-rdynamic' '-mtune=generic' '-march=i586'
 as -v --32 -o /tmp/cchsuADs.o mltc.s
GNU assembler version 2.25 (x86_64-linux-gnu) using BFD version (GNU Binutils for Debian) 2.25
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/4.9/32/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../i386-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib32/:/lib/i386-linux-gnu/:/lib/../lib32/:/usr/lib/i386-linux-gnu/:/usr/lib/../lib32/:/usr/lib/gcc/x86_64-linux-gnu/4.9/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../i386-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../:/lib/i386-linux-gnu/:/lib/:/usr/lib/i386-linux-gnu/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-m32' '-rdynamic' '-mtune=generic' '-march=i586'
 /usr/lib/gcc/x86_64-linux-gnu/4.9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/4.9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/4.9/lto-wrapper -plugin-opt=-fresolution=/tmp/ccFy9PiM.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --sysroot=/ --build-id --eh-frame-hdr -m elf_i386 --hash-style=gnu -export-dynamic -dynamic-linker /lib/ld-linux.so.2 /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib32/crt1.o /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib32/crti.o /usr/lib/gcc/x86_64-linux-gnu/4.9/32/crtbegin.o -L/usr/lib/gcc/x86_64-linux-gnu/4.9/32 -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../i386-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib32 -L/lib/i386-linux-gnu -L/lib/../lib32 -L/usr/lib/i386-linux-gnu -L/usr/lib/../lib32 -L/usr/lib/gcc/x86_64-linux-gnu/4.9 -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../i386-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/4.9/../../.. -L/lib/i386-linux-gnu -L/usr/lib/i386-linux-gnu /tmp/cchsuADs.o ../run.x86-linux.a -ldl -lm -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib/gcc/x86_64-linux-gnu/4.9/32/crtend.o /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib32/crtn.o

I'm no good at this, so I'm not exactly sure which flags made it tick.

I'm also very much a n00b to the source code,
so I might be missing something really obvious, and I apologize
in advance if that's the case.

Submitted via web form by Haoxuan ""Aaron"" Yue <haoxuany@andrew.cmu.edu>
",0,0,0,"x86","Linux","Other","Fixed","Minor","","110.79","heap2exec","","This is the output of `heap2exec mltq.x86-linux mltq`.
I'm not particularly sure why it chose to link with
runtime.x86-linux.a (the static lib)
instead of runtime.x86-linux (the binary, it's present in objs/),
might be some misconfiguration or accidental fiddling on my
end, but that is irrelevant.

/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(main.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(c-libraries.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ml-options.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(boot.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(load-ml.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(run-ml.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(globals.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ml-state.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(error.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(timers.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(unix-timers.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(swap-bytes.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(unix-fault.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(signal-util.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(prim.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(posix-os-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tmpname.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(smlnj-runt-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(sysinfo.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(smlnj-sig-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(smlnj-prof-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(smlnj-sock-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(socket.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(socketpair.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(to-inetaddr.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(to-unixaddr.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(smlnj-time-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(timeofday.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(smlnj-date-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(strftime.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(smlnj-math-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(sqrt64.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(posix-process-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(sleep.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(waitpid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(posix-procenv-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(setgid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(setpgid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(setsid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(setuid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(sysconf.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(time.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(times.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ttyname.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(uname.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(posix-filesys-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(readdir.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(readlink.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(rename.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(rewinddir.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(rmdir.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(stat.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(stat_64.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(symlink.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(umask.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(unlink.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(utime.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(posix-io-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(read.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(readbuf.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(write.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(writebuf.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(posix-sysdb-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(posix-signal-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(posix-tty-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tcdrain.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tcflow.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tcflush.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tcgetattr.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tcgetpgrp.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tcsendbreak.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tcsetattr.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tcsetpgrp.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(posix-error-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(posix-name-val.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(big-objects.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(build-literals.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(c-globals-tbl.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(call-gc.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(gc-util.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(import-heap.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(init-gc.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(major-gc.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(minor-gc.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ml-objects.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(mem-mmap.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(unix-dynload-lib.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(unix-raise-syserr.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(qualify-name.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(poll.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(alloc-code.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(argv.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(blast-in.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(blast-out.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(cmd-name.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(debug.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(dummy.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(export-fun.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(export-heap.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(gc-ctl.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(itick.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(mkexec.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(mkliterals.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(raw-argv.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(record-concat.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(record1.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(setitimer.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(shift-argv.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getsigmask.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getsigstate.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(listsignals.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(pause.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(setsigmask.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(setsigstate.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getpquantum.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(setpref.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(setptimer.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(accept.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(bind.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(close.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(connect.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctlBROADCAST.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctlDEBUG.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctlDONTROUTE.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctlKEEPALIVE.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctlLINGER.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctlNODELAY.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctlOOBINLINE.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctlRCVBUF.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctlREUSEADDR.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctlSNDBUF.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(from-inetaddr.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(from-unixaddr.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getATMARK.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getERROR.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getNREAD.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getTYPE.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getaddrfamily.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(gethostbyaddr.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(gethostbyname.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(gethostname.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getnetbyaddr.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getnetbyname.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getpeername.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getprotbyname.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getprotbynum.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getservbyname.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getservbyport.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getsockname.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(inetany.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(list-addr-families.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(list-sock-types.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(listen.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(recv.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(recvbuf.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(recvbuffrom.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(recvfrom.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(sendbuf.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(sendbufto.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(setNBIO.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(shutdown.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tbl-addr-family.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tbl-sock-type.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(util-mkhostent.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(util-mknetent.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(util-mkservent.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(util-sockopt.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(gettime.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(asctime.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(gmtime.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(localoffset.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(localtime.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(mktime.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(atan64.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(cos64.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctlrndmode.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(exp64.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(log64.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(sin64.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(alarm.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(exec.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(exece.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(execp.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(exit.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(fork.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(kill.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(osval.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(pause.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ctermid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(environ.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getegid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getenv.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(geteuid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getgid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getgroups.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getlogin.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getpgrp.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getpid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getppid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getuid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(isatty.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(access.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(chdir.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(chmod.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(chown.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(closedir.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(fchmod.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(fchown.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ftruncate.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(ftruncate_64.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getcwd.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(link.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(mkdir.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(mkfifo.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(opendir.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(openf.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(osval.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(pathconf.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(close.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(dup.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(dup2.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(fcntl_d.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(fcntl_gfd.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(fcntl_gfl.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(fcntl_l.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(fcntl_l_64.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(fcntl_sfd.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(fcntl_sfl.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(fsync.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(lseek.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(lseek_64.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(osval.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(pipe.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getgrgid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getgrnam.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getpwnam.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(getpwuid.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(osval.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(osval.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(errmsg.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(geterror.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(listerrors.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(tbl-errno.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(addr-hash.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(blast-in.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(blast-out.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(export-heap.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(flip.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(heap-in-util.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(heap-out-util.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(mem-writer.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(obj-info.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(record-ops.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(writer.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(dlclose.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(dlerror.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(dlopen.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(dlsym.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(unix-signal.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(unix-prof.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: i386 architecture of input file `/home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(blast-gc.o)' is incompatible with i386:x86-64 output
/usr/bin/ld: mltq(.eh_frame): relocation "".text+0x0 (type R_386_PC32)"" goes out of range
/usr/bin/ld: /home/haoxuany/projects/smlnj/bin/.run/run.x86-linux.a(swap-bytes.o): file class ELFCLASS32 incompatible with ELFCLASS64
/usr/bin/ld: final link failed: File in wrong format
collect2: error: ld returned 1 exit status","Shouldn't be particularly relevant. Occurs on all projects. I've
chosen mltq as an example."," *** 2020-06-17 08:52 --- John Reppy --- Should be working now (using the -64 flag)"
170,1,"Open",3,142,"Bug Submitter",103,"John Reppy","2016-10-13 12:48","","2016-10-24 08:07","Bogus ""Left recursion"" error message from ML-Antlr","ML-Antlr reports a left recursion, where there is no such
problem.  There is a problem that the grammar is not LL(k)
and it appears that the generated parser may not work on
valid input.
Additional comments:
It looks like the generated parser would fail on the input

    if X then skip

because the function for the E nonterminal fails if the
first token is not ""else"".

Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","ML-ANTLR","None","Major","","110.80","ml-lpt","","<jhr@dhcp-10-135-11-128> ml-antlr dangling-else.grm
[ml-antlr: parsing dangling-else.grm]
[ml-antlr: checking grammar]
 2 nonterminals
 4 productions
Left recursion detected: E -> E ...
","%token
  : IF		(""if"")
  | THEN	(""then"")
  | ELSE	(""else"")
  | SKIP	(""skip"")
  | ID
  ;

%start S;

S	: ""if"" ID ""then"" S E
	| ""skip""
	;

E	: ""else"" S
	| (* empty *)
	;
",""
171,1,"Open",3,142,"Bug Submitter",106,"David MacQueen","2016-10-23 20:00","","2016-10-24 08:06","Types structure from SML/NJ compiler is visible in REPL","For some reason, the Types structure is visible
in the REPL environment.
Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Compiler","None","Minor","","110.80","","","<jhr@valhalla> sml
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- open Types;
[autoloading]
[library $smlnj/compiler/current.cm is stable]
[library $smlnj/compiler/x86.cm is stable]
[library $smlnj/viscomp/elabdata.cm is stable]
[library $smlnj/viscomp/basics.cm is stable]
[library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
[autoloading done]
opening Types
  type label = Symbol.symbol
  type polysign = bool list
  datatype eqprop = ABS | DATA | IND | NO | OBJ | UNDEF | YES
  datatype litKind = CHAR | INT | REAL | STRING | WORD
  datatype openTvKind = FLEX of (label * ty) list | META
  datatype ovldSource
    = OLIT of litKind * IntInf.int * SourceMap.region
    | OVAR of Symbol.symbol * SourceMap.region
  datatype tvKind
    = INSTANTIATED of ty
    | LBOUND of {depth:int, eq:bool, index:int}
    | OPEN of {depth:int, eq:bool, kind:openTvKind}
    | OVLD of {options:ty list, sources:ovldSource list}
    | UBOUND of {depth:int, eq:bool, name:Symbol.symbol}
  datatype tycpath
    = TP_APP of tycpath * tycpath list
    | TP_FCT of tycpath list * tycpath list
    | TP_SEL of tycpath * int
    | TP_TYC of tycon
    | TP_VAR of exn
  datatype tyckind
    = ABSTRACT of tycon
    | DATATYPE of {family:dtypeFamily, freetycs:tycon list, index:int,
                   root:Stamps.stamp option, stamps:Stamps.stamp vector}
    | FLEXTYC of tycpath
    | FORMAL
    | PRIMITIVE of int
    | TEMP
  datatype tycon
    = DEFtyc of {path:?.InvPath.path, stamp:Stamps.stamp, strict:bool list,
                 tyfun:tyfun}
    | ERRORtyc
    | FREEtyc of int
    | GENtyc of gtrec
    | PATHtyc of {arity:int, entPath:?.EntPath.entPath, path:?.InvPath.path}
    | RECORDtyc of label list
    | RECtyc of int
  datatype ty
    = CONty of tycon * ty list
    | IBOUND of int
    | MARKty of ty * SourceMap.region
    | POLYty of {sign:polysign, tyfun:tyfun}
    | UNDEFty
    | VARty of tyvar
    | WILDCARDty
  datatype tyfun = TYFUN of {arity:int, body:ty}
  type dconDesc =
    {domain:Types.ty option, name:Symbol.symbol, rep:Access.conrep}
  type dtmember =
    {arity:int, dcons:Types.dconDesc list, eq:Types.eqprop ref, lazyp:bool,
     sign:Access.consig, tycname:Symbol.symbol}
  type dtypeFamily =
    {members:Types.dtmember vector, mkey:Stamps.stamp,
     properties:PropList.holder}
  type stubinfo = {lib:bool, owner:PersStamps.persstamp}
  type gtrec =
    {arity:int, eq:Types.eqprop ref, kind:Types.tyckind, path:?.InvPath.path,
     stamp:Stamps.stamp, stub:stubinfo option}
  type tyvar = Types.tvKind ref
  val infinity : int
  val mkTyvar : tvKind -> tyvar
  val copyTyvar : tyvar -> tyvar
  datatype datacon
    = DATACON of {const:bool, lazyp:bool, name:Symbol.symbol,
                  rep:Access.conrep, sign:Access.consig, typ:ty}
-
","from REPL

  open Types;",""
172,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2017-01-10 11:36","2017-09-18 10:20","2017-09-18 10:20","Broken link to tutorial on web page","The first link on the web page listing SML tutorials is now a 404.
From the web archive it looks like this happened in 2016.

I'm referring to the link on this page to Robert Harper's book:

    http://www.smlnj.org/doc/literature.html#tutorials

Looks like it should be changed to point here instead of /smlbook/:

    http://www.cs.cmu.edu/~rwh/isml/

Setting severity 'Major', because this is the first thing I found
when considering relearning SML, which isn't ideal :-)
Submitted via web form by Geoff Richards <geoff@geoffrichards.co.uk>
",0,0,0,"None","Generic Unix","Other","Fixed","Major","","","documentation","","","",""
173,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2017-01-12 15:39","2019-08-24 09:43","2019-08-24 09:43","OS.Process.sleep only works with whole numbers","val dt = Time.fromReal(1.5);
OS.Process.sleep(dt)
Is supposed to sleep for 1.5 seconds, whereas it only does so for 1.

In general, all real-valued times supplied to sleep are floored to the smaller integer.

Submitted via web form by Leonid Zlotnikov <zlotnleo@gmail.com>
",0,0,0,"None","MacOS X","Basis Library","Fixed","Major","10.12.2","110.80","OS Process sleep real int","","Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- [autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val dt = TIME {usec=1750000} : Time.time
[autoloading]
[autoloading done]
1484257107.91
1484257108.92
1484257109.92
1484257110.92
1484257111.92
1484257112.92
1484257113.93
1484257114.93
^C
Interrupt
-
","val dt = Time.fromReal(1.6);
while true do (
	print (Real.toString(Time.toReal(Time.now())) ^ ""\n"");
	OS.Process.sleep(dt)
);"," *** 2019-08-24 09:43 --- John Reppy --- For systems that have the nanosleep(2) system call (and Windows), the sleep function supports sub-second resolution in 110.93. *** 2017-09-18 12:39 --- John Reppy --- We've decided to fix this bug by changing the semantics of Posix.Process.sleep() to use the most precise version of sleep/usleep/nanosleep that is available.  This change will require changing the runtime-system API for sleep (which currently expects an integer number of seconds as the argument to sleep). ~  ~ Also, the Posix.Process.alarm() function should receive a similar treatment, since recent versions os Posix also have ualarm(). *** 2017-01-12 16:00 --- John Reppy --- OS.Process.sleep is just a wrapper around Posix.Process.sleep, which maps onto the sleep(3) function that only sleeps integral units of time.  Since the POSIX standard now has functions like usleep and nano-sleep, we should probably be using those in the Posix.Process implementation. ~  ~ I'm not sure what the story for Windows is. ~ "
175,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2017-02-08 15:46","2017-02-09 11:53","2017-02-09 11:56","Executable Stack on Linux","Hi,

bin/.run/run.x86-linux and bin/.run/run.x86-linux.so currently have the stack set to executable.

A number of Linux distributions (Fedora, Ubuntu, Gentoo) are trying to reduce the use of executable stack for security reasons. Here is a good summary: https://wiki.gentoo.org/wiki/Hardened/GNU_stack_quickstart

I do not believe that smlnj needs the stack to be executable, but I may be wrong. Editing the binary by hand to make the stack unexecutable (by calling execstack -c bin/.run/run.x86-linux*) produced no regressions in the tests/ directory of SVN trunk.

I am not an expert in these matters, and so it's not totally clear to me what is causing the stack to be marked executable. So there may be a reason for it that doesn't come up in the tests or that I didn't notice in glancing through the code.
Fix:
If executable stack is in fact not needed and is the result of unmarked assembly code, there are two ways to fix it: https://wiki.gentoo.org/wiki/Hardened/GNU_stack_quickstart#How_to_fix_the_stack_.28in_practice.29

The first is to add the appropriate stack markings (see previous link).

The second is to compile with -Wa,--noexecstack

Submitted via web form by Daniel Moerner <dmoerner@gmail.com>
",0,0,0,"None","Linux","Installer","Fixed","Minor","","110.80","","","",""," *** 2017-02-09 11:53 --- John Reppy --- Fixed for 110.81 on x86 and PPC architectures (those are the only Linux targets that we currently support)."
176,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2017-02-08 16:01","2020-04-02 12:48","2020-04-02 12:48","Manpages","Hi,

smlnj is missing a number of man pages for its binaries. Several have been in Debian for a long time, and I just wrote brief ones for heap2asm and heap2exec. There are now manpages for all executables shipped by smlnj.

https://pagure.io/smlnj-packaging/raw/master/f/heap2asm.1
https://pagure.io/smlnj-packaging/raw/master/f/heap2exec.1
https://pagure.io/smlnj-packaging/raw/master/f/ml-burg.1
https://pagure.io/smlnj-packaging/raw/master/f/ml-lex.1
https://pagure.io/smlnj-packaging/raw/master/f/ml-nlffigen.1
https://pagure.io/smlnj-packaging/raw/master/f/ml-yacc.1
https://pagure.io/smlnj-packaging/raw/master/f/nowhere.1

I wanted to share them in case you wanted to add them to the doc tarball.
Submitted via web form by Daniel Moerner <dmoerner@gmail.com>
",0,0,0,"None","Generic Unix","Installer","Fixed","Cosmetic","","110.80","doc","","",""," *** 2020-04-02 12:48 --- John Reppy --- I've added manual pages to the doc/src/man directory for ml-burg, ml-lex, ml-nlffigen, and ml-yacc.  The other programs are currently not part of the standard install, so they are omitted for now. *** 2017-08-28 09:34 --- John Reppy --- Manpages exist as part of the ""doc"" tree, although some of the commands are missing manpages (e.g., nowhere, ml-nlffigen)."
179,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2017-03-16 00:13","2017-04-07 12:48","2017-04-07 12:48","ml-ulex writing debug messages to stdOut","Hi, my makefiles are a bit wacky,

as i've been both
a) automatic depenency generation,
b) generation of mlton mlb files from sources.cm

this tends to work ok, but when using
c) generated sources

we need to c -> b -> a to generate the dependency graph...
with ml-ulex debug output has been ending up in the mlb file.
Additional comments:
fix refers to the file ml-ulex/main.sml
changing the debug function to write to stderr

Sorry I don't have a minimal reproducer at the moment,
I'm guessing it should reproduce by running the Mlton cm2mlb
on lex using project

Fix:
    fun debug s =
      let val fd = TextIO.stdErr;
          (* Flush probably unecessary *)
          fun printerr s = (TextIO.output (fd, s); TextIO.output (fd, ""\n""); TextIO.flushOut fd);
        in printerr s end


Submitted via web form by matt rice <ratmice@gmail.com>
",0,0,0,"None","Generic Unix","ML-Ulex","Fixed","Minor","","110.79","","","",""," *** 2017-04-07 12:48 --- John Reppy --- Fixed for 110.81"
183,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2017-06-08 10:10","2017-09-18 15:18","2017-09-18 15:18","status code returned by sml REPL","The status code returned by the `sml` REPL changed between 110.79 and
110.81. Previously, if I gave a filename on the command line and it
had a compilation error, sml would return a non-zero status code.

Now, in 110.81, it just issues the error and prints another prompt. If
I specify `</dev/null` on the command line then sml exits, but the
status code is zero despite the error.

This is causing a problem in the build scripts for my qcheck library,
which aims to be usable with every implementation of SML. Its build
script tries to check which basis libraries are available, and it
relied on the status code described above.

The bug report to qcheck is at
<https://github.com/league/qcheck/issues/5#issuecomment-307125426>

If this change in behavior is intentional with a meaningful rationale,
then fine -- I can work around it. But if it was inadvertent I thought
I'd notify you and maybe it can be fixed to work the previous way.
Thanks.

Submitted via web form by Christopher League <league@contrapunctus.net>
",0,0,0,"None","Generic Unix","Compiler","Fixed","Minor","","110.81","","","https://github.com/league/qcheck/issues/5#issuecomment-307125426",""," *** 2017-09-18 15:18 --- John Reppy --- Fixed for 110.82"
184,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2017-06-11 08:28","2017-08-28 09:31","2017-08-28 09:31","Difference between mlton/sml-nj in type generalization","In a silly example there is an observable difference between SML/NJ and MLton,
SML/NJ rejects the code, while MLTon accepts it,

I'm not quite sure though one or both may conform to the standard,
with differing interpretations of the value restriction context.


Additional comments:
Perhaps everything is conforming and this can be closed without change.
I just figured I would point it out.

Submitted via web form by matt rice <ratmice@gmail.com>
",0,0,0,"None","All","Compiler","Won't Fix","Cosmetic","","110.81","","","Standard ML of New Jersey v110.81 [built: Sun Jun 11 05:04:27 2017]
[opening silly.sml]
val id = fn : 'a -> 'a
val curry = fn : ('a * 'b -> 'c) -> 'a -> 'b -> 'c
val foo = fn : int * (bool * (unit * real)) -> unit
silly.sml:6.5-6.20 Warning: type vars not generalized because of
   value restriction are instantiated to dummy types (X1,X2,...)
silly.sml:7.11-7.19 Error: operator and operand don't agree [tycon mismatch]
  operator domain: 'Z * 'Y -> 'X
  operand:         ?.X1 -> int * ?.X1
  in expression:
    curry it
","fun id x = x
fun curry f x y = f (x, y)
fun foo (w : int, (x : bool, (y : unit, z : real))) = ();

val it = curry id 0
val it = (curry it) true
val it = (curry it) ()
val it = it 0.0
val _ = foo it;
"," *** 2017-08-28 09:31 --- John Reppy --- The Definition of Standard ML is ambiguous w.r.t. this question (also the scope of overload resolution)."
185,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2017-08-27 17:31","2017-08-28 09:28","2017-08-28 09:28","Bring command line help text into parity with man page.","The -h help text is missing some options present in the sml.1 manual page.
The attached adds the missing options,
and reorders an existing option to reflect the order presented in the manual page.
Additional comments:
Testing this out by running config/install.sh did not show new help text,
I went through the process here: http://www.smlnj.org/doc/CM/btcomp/node5.html
to check it, not sure if that is normal or not.

Fix:
Index: base/cm/main/cm-boot.sml
===================================================================
--- base/cm/main/cm-boot.sml	(revision 4397)
+++ base/cm/main/cm-boot.sml	(working copy)
@@ -730,10 +730,13 @@
 		     \\n\
 		     \  rtsargs:\n\
 		     \    @SMLload=<h>     (start specified heap image)\n\
+		     \    @SMLrun=<r>      (specify runtime system)\n\
+		     \    @SMLversion      (echo the version of SML/NJ then exit)\n\
+		     \    @SMLsuffix       (echo heap suffix for the system then exit)\n\
 		     \    @SMLalloc=<s>    (specify size of allocation area)\n\
 		     \    @SMLcmdname=<n>  (set command name)\n\
+		     \    @SMLverbose      (show heap image load progress)\n\
 		     \    @SMLquiet        (load heap image silently)\n\
-		     \    @SMLverbose      (show heap image load progress)\n\
 		     \    @SMLobjects      (show list of executable objects)\n\
 		     \    @SMLdebug=<f>    (write debugging info to file)\n\
 		     \\n\


Submitted via web form by matt rice <ratmice@gmail.com>
",0,0,0,"None","All","Compiler","Fixed","Cosmetic","","110.81","","","",""," *** 2017-08-28 09:28 --- John Reppy --- Fixed for 110.82; also made some changes to the manual page."
186,1,"Open",3,142,"Bug Submitter",103,"John Reppy","2017-09-21 13:49","","2017-09-21 13:50","Inlining for Word8 arithmetic operations is broken","Word8.+, Word8.-, Word8.*, and Word8.~ are not inline expanded.

Additional comments:
The problem is the w8adapt function in
base/system/smlnj/init/pervasive.sml.

To fix, the w8adapt function needs to be merged into the
actual primitive implementations.

Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Compiler","Accepted As Bug","Minor","","110.81","","","[After convert ...]

v12(v25[C],v17[PR2]) =
   v28(v29[PV]) =
      v28(""bogus"")
   v24(v30[PV]) =
      v28(""bogus"")
   v17.0 -> v18[F]
   v1(v26[C],v5[I]) =
      v18(v26,v5,(I)1)
   {v1} -> v16
   v25(v16)
","(* to demonstrate *)
Control.CG.printit := true;
fun f (x : Word8.word) = x + 0w1;
",""
187,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2017-10-02 03:56","2017-11-01 13:26","2017-11-01 13:26","Build failure on macOS 10.13","Build fails when running config/install.sh because script config/_arch-n-opsys does not recognise the macOS version 10.13 (i.e. Darwin 17).

Given that all macOS versions yield the same values of OPSYS, and given that building on macOS 10.13 works flawlessly once that obstacle is removed, I suggest the pattern matching for `uname -r` be remove entirely.
Fix:
Given that all macOS versions yield the same values of OPSYS, and given that building on macOS 10.13 works flawlessly once that obstacle is removed, I suggest the pattern matching for `uname -r` be remove entirely.

Submitted via web form by FX Coudert <fxcoudert@gmail.com>
",0,0,0,"x86","MacOS X","Installer","Fixed","Critical","10.13","110.81","build","","",""," *** 2017-11-01 13:26 --- John Reppy --- Fixed in 110.82"
188,2,"Closed",3,298,"Jackson Woodruff",106,"David MacQueen","2017-10-19 09:52","2019-11-16 08:02","2019-11-16 08:02","Missing warning for nonexhaustive valbind patterns","Hi all,

Currently, SMLNJ does not emit a warning for the following code:

val x = fn y => let
  val nil = [1]
in
  y
end

According to page 32, item number 3 in the definition of ML http://sml-family.org/sml97-defn.pdf, this must emit a warning informing the user that the match is invalid.

A further note to this matter is that MosML and PolyML both successfully report a warning in this case.

Jackson.

As a precise example of what I mean:
                                                                                                                                                                     [15:50:24]
Poly/ML 5.6 Release
> val x = fn y => let val nil = [1] in y end;;
poly: : warning: Pattern is not exhaustive. Found near val nil = [1]
val x = fn: 'a -> 'a
> %

                                                                                                                                                                         [15:50:40]
Standard ML of New Jersey v110.79 [built: Wed Nov  2 06:06:36 2016]
- val x = fn y => let val nil = [1] in y end;;
val x = fn : 'a -> 'a
- ",0,0,0,"x86","All","Compiler","Fixed","Minor","","110.82 (trunk)","Warning","","",""," *** 2019-11-16 08:02 --- John Reppy --- This was presumably fixed when bug 130 was fixed (version 110.94) *** 2018-04-20 12:09 --- David MacQueen --- In 110.82 this bug is gone, and the ""binding not exhaustive"" warning is given.  ~ However, when executed, this example should raise the Bind exception when [1] does not match the pattern nil.  It looks like the let binding has been improperly optimized away so that it is not executed.  So this reveals a different bug in the optimizer, which is changing the dynamic semantics of the code. *** 2017-11-01 13:20 --- John Reppy --- This bug appear to be related to 130."
189,2,"Closed",3,298,"Jackson Woodruff",103,"John Reppy","2017-10-19 09:58","2017-11-01 13:26","2017-11-01 13:26","Compile functions with redundant patterns","Hi all,

Currently, we emit an error when compling a function like this:

val x = fn x => x
             |  y => y

The same issue arises with top level functions.

fun f x = x
   |  f y = y


The ML definition states that an implementation ""must"" emit a warning for these (which we do, to the extent of an error). However,  it also states that we ""should"" still compile the pattern. (See page 32, item 3, http://sml-family.org/sml97-defn.pdf)

Was it a concious design decision to reject these?

Thanks,

Jackson.",0,0,0,"None","All","Compiler","Invalid","None","","110.82 (trunk)","","","",""," *** 2017-11-01 13:26 --- John Reppy --- The default behavior of rejecting redundant patterns as bugs can be turned off by setting the Control.MC.matchRedundantError flag to false."
190,2,"Closed",3,298,"Jackson Woodruff",106,"David MacQueen","2017-10-19 10:03","2020-01-13 12:47","2020-01-13 12:47","Unexpected exception in SML/NJ with invalid list pattern match","Hi all,

The following interactive session results in an error:

val [x] = [];;

I get the message

unexpected exception (bug?) in SML/NJ: Bind [nonexhaustive binding failure]
  raised at: stdIn:1.6-4.1
             ../compiler/MiscUtil/print/ppobj.sml:396.20
             ../compiler/TopLevel/interact/evalloop.sml:45.54

This seems related, but not the same as http://smlnj-gforge.cs.uchicago.edu/tracker/index.php?func=detail&aid=130&group_id=33&atid=215

Jackson.",0,0,0,"None","All","Compiler","Fixed","Minor","","110.82 (trunk)","","","",""," *** 2020-01-13 12:47 --- John Reppy --- This was fixed in 110.94 (when #130 was fixed). *** 2018-05-19 09:31 --- John Reppy --- May be related to bug #199 *** 2017-11-01 13:21 --- John Reppy --- This appears to be a duplicate of 130."
191,2,"Closed",3,298,"Jackson Woodruff",103,"John Reppy","2017-11-01 15:39","2018-04-20 10:31","2018-04-20 10:31","Compiler crash when handling large reals","Hi all,

Currently, on input of reals out of the accepted range, SMLNJ crashes:

val x = 1e1000;;

Produces:

unexpected exception (bug?) in SML/NJ: BadReal [BadReal]
  raised at: ../compiler/MiscUtil/bignums/realconst.sml:237.54-237.63
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:45.54

This happens in interactive sessions. When opening files, the assignments are ignored.

Thanks,

Jackson.",0,0,0,"x86","None","Compiler","Fixed","Minor","","110.82 (trunk)","","","","val x = 1e1000000"," *** 2018-04-20 10:31 --- John Reppy --- Fixed for 110.83. *** 2017-11-01 16:15 --- John Reppy --- We can fix this problem as part of the literal-representation overhaul.  Currently, real literals are being represented as strings until code generation, which is too late to gracefully catch and handle this problem."
192,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2017-12-18 12:41","2017-12-18 13:22","2017-12-18 13:22","Mac OS pkg has invalid version info","The package receipt generated by installing SML/NJ on a Mac has
an invalid version.  This matters if you use package management
software such as Munki, because the management software cannot
determine the installed version, and therefore whether an update
is needed.

Submitted via web form by Ian Collier <imc@cs.ox.ac.uk>
",0,0,0,"x86","MacOS X","Installer","Fixed","Minor","","110.82","","","$ pkgutil --info org.smlnj.x86.pkg
package-id: org.smlnj.x86.pkg
version: 0

$ pkgutil --expand smlnj-x86-110.82.pkg /tmp/sml
$ egrep version /tmp/sml/smlnj.pkg/PackageInfo
<?xml version=""1.0"" encoding=""utf-8"" standalone=""no""?>
<pkg-info overwrite-permissions=""true"" relocatable=""false"" identifier=""org.smlnj.x86.pkg"" postinstall-action=""none"" version=""0"" format-version=""2"" generator-version=""InstallCmds-502 (14F27)"" install-location=""/usr/local/Xsmlnj"" auth=""root"">

Both of these say version ""0"" instead of the correct version number.",""," *** 2017-12-18 13:22 --- John Reppy --- I've updated the build-pkg.sh script to add the version to the package.  It appears to work: ~  ~ <jhr@aeneas> pkgutil --info org.smlnj.x86.pkg ~ package-id: org.smlnj.x86.pkg ~ version: 110.82 ~ volume: / ~ location: usr/local/smlnj ~ install-time: 1513624830 ~ "
193,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2018-01-27 20:58","2019-04-23 07:36","2019-04-23 07:36","SML/NJ does not print unhandled exceptions in loaded files","We use SML/NJ to teach SML to freshmen and sophomores.
We currently have version 110.81 running on university machines.

Some students who are using version 110.82 on personal machines are
reporting that run-time errors in 'use'd files go unreported.  For
instance, raised but unhandled Div and Bind exceptions are not
reported:  'use' returns without any direct indication on the screen
of any error.  This new behavior complicates teaching the difference
between compile-time and run-time errors, and it is affecting some
student code testing.

We have replicated the behavior on one of our machines, with specs as
indicated in the bug-report fields.

If this new behavior is intentional, is there some way of determining
from 'use' that a run-time exception has occurred and where it has
occurred?  If the new behavior is inadvertent, would it be possible to
revert to the prior behavior (or provide an alternative 'use' function)?

Thank you!
Additional comments:
It seems that loading of the file stops on reaching an error, but
any previously-defined variables in the file are properly bound.
This leads us to believe that the internal machinery invoked by the
""use"" directive is incorrectly aborting the program with an ""exit
code"" (as if the file were loaded with the command ""smlnj
test.sml"" from a shell).

Submitted via web form by Cameron Wong <cjwong@andrew.cmu.edu>
",0,0,0,"All","Generic Unix","Compiler","Fixed","Major","Arch Linux","110.82","exceptions, reporting, file","","Standard ML of New Jersey v110.82 [built: Mon Oct 23 10:28:15 2017]
- use ""test.sml"";
[opening test.sml]
val it = () : unit
-
","val _ = 1 div 0"," *** 2019-04-23 07:36 --- John Reppy --- Fixed in 110.86. ~  ~ Same as bugs #217 and #219. *** 2018-10-10 16:46 --- John Reppy --- Same as #217."
194,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2018-02-13 20:20","2018-04-12 08:36","2018-04-12 08:36","Real.fromString overflows or hangs","When given a large (but syntactically correct) input,
Real.fromString should return (SOME inf).  Instead, it
sometimes raises Overflow, or even hangs.

I have observed the problem on both Unix and Windows.

Submitted via web form by Karl Crary <crary@cs.cmu.edu>
",0,0,0,"None","Generic Unix","Basis Library","Fixed","Minor","","110.81","reals","","- Real.fromString ""1e10000000000"";  (* ten zeros *)

uncaught exception Overflow [overflow]
  raised at: <file Basis/Implementation/num-scan.sml>

- Real.fromString ""1e100000000"";  (* eight zeros *)

Interrupt
","Real.fromString ""1e10000000000"";  (* ten zeros *)
Real.fromString ""1e100000000""; (* eight zeros *)
"," *** 2018-04-12 08:36 --- John Reppy --- There were two issues here.  First, the Overflow exception was coming from scanning the exponent, but it was not being handled.  The second problem was that the scaling for large exponents did not terminate once infinity (or zero) was reached, so it would take a long time (it does eventually terminate).  These problems have been fixed for 110.83. *** 2018-03-01 13:27 --- John Reppy --- The Basis Library specification states that the result should be infinity in these cases."
195,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2018-03-08 16:11","2020-04-05 13:22","2020-04-05 18:11","SuccessorML do expression in Functor arguments.","When performing do expressions within functors,
the compiler can encounter a few errors
(with syntax the compiler might occasionally recommend),

the ""val _ ="" form works, however,
replacing that with do can fail in a few ways depending upon how you invoke smlnj.
Additional comments:
The name of the functor I noticed this with just happened to be FIXME,
not meant to indicate the location of the problem.

Submitted via web form by matt rice <ratmice@gmail.com>
",0,0,0,"x86","Linux","Compiler","Fixed","Major","","110.82","SuccessorML do",""," $ (echo 'CM.make ""foo.cm"";';echo 'SMLofNJ.exportFn(""foo.x86-linux"",Main.main);') | CM_VERBOSE=false sml -Cparser.succ-ml=true
Standard ML of New Jersey v110.82 [built: Thu Mar  8 13:23:37 2018]
- Error: Compiler bug: ElabMod: elabmod: extractSig Unexpected dec
val it = false : bool
stdIn:2.34-2.43 Error: unbound structure: Main in path Main.main


$ sml foo.sml
Standard ML of New Jersey v110.82 [built: Thu Mar  8 13:23:37 2018]
[opening foo.sml]
foo.sml:19.24-19.46 Error: syntax error: deleting  DO IDS STRING

","functor FIXME () = struct end

structure Main = struct
  fun $ _ = ()
  (* Note recommended syntax: INSERTING DO *)
  (* structure F0 = FIXME($""some random note"") *)

  (* Works. *)
  structure F1 = FIXME(val _ = $""some random note"")
  (* :( *)
  structure F2 = FIXME(do $""some random note"")
  fun main _ = ()
end
"," *** 2020-04-05 13:22 --- David MacQueen --- Fixed.  Missing DOdec case in function getDeclOrder in ElabModFn (Elaborator/elaborate/elabmod.sml, l. 563). ~ "
196,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2018-03-08 16:56","2020-04-05 13:07","2020-04-05 18:16","dontPickle error when trying to use SuccessorML ","Using the Successor ML ""do"" syntax at top level causes a dontPickle compiler bug.

Additional comments:
I was looking into bug 195, when I discovered this problem.

Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Compiler","Fixed","Major","any","110.82","pickler SuccessorML","","<jhr@dhcp-10-135-11-141> sml -Cparser.succ-ml=true
Standard ML of New Jersey v110.82 [built: Sat Oct 14 15:12:52 2017]
- do print ""hi\n"";
Error: Compiler bug: PickMod: dontPickle 1: PATH(0,EXTERN(4698CC08B2EB764C429515D7653560DA))
","do print ""hi\n"";"," *** 2020-04-05 13:07 --- David MacQueen --- elabDOdec in ElabCore (compiler/Elaborator/elaborate/elabcore.sml, l 1094) was returning the context static environment instead of the empty static environment."
197,1,"Open",3,298,"Jackson Woodruff",106,"David MacQueen","2018-03-25 04:39","","2018-03-25 06:45","Typechecker hangs with a large number of curried arguments","Hi all,

The typechecker appears to undergo some sort of exponential blowup when the number of curried arguments is increased to about 15.  I've included an example above.

Tested on 110.79 and a trunk I built a few months ago. FWIW, MosML and PolyML have no issues detecting the error.

Thanks,

Jackson",0,0,0,"None","None","Compiler","Accepted As Bug","Minor","","110.82","typechecker, hangs","","","(* Takes unbearably long to typecheck.  The correct version typechecks quickly.  *)
fun f' 0 b c d e f g h i j k l m n p q r s = 0
  | f' a b c d e f g h i j k l m n p q r s = f' (a - 1) b c d e f g h i j k l m n p q r",""
199,2,"Closed",3,103,"John Reppy",106,"David MacQueen","2018-05-05 09:26","2019-11-16 12:23","2019-11-16 12:23","Compiler bug in pretty printing of result","This bug is from the old bugs list (#1250) and is in the regression tests.",0,0,0,"All","All","Compiler","Fixed","Minor","","110.82","pretty printing","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- datatype 'a foo = Foo1 of 'a | Foo2 of 'a;
datatype 'a foo = Foo1 of 'a | Foo2 of 'a
- val Foo1 f = Foo2(fn x => x);
stdIn:2.5-2.29 Warning: binding not exhaustive
          Foo1 f = ...

unexpected exception (bug?) in SML/NJ: Bind [nonexhaustive binding failure]
  raised at: stdIn:2.5-2.29
             ../compiler/MiscUtil/print/ppobj.sml:396.20
             ../compiler/TopLevel/interact/evalloop.sml:45.54
","datatype 'a foo = Foo1 of 'a | Foo2 of 'a;
val Foo1 f = Foo2(fn x => x);
"," *** 2019-11-16 12:23 --- John Reppy --- This bug was fixed in 110.94 as a side effect of fixing bug #130. *** 2018-05-19 09:30 --- John Reppy --- May be related to bug #190"
200,2,"Closed",3,103,"John Reppy",106,"David MacQueen","2018-05-06 09:03","2021-10-27 13:46","2021-10-27 13:46","Compiler bug in translate on unresolved flex record","This bug is a regression of a bug on the old bugs list (bug588.sml).  The expected behavior is an error message about an unresolved flex record.",0,0,0,"All","All","Compiler","Fixed","Minor","","110.82","type checker","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- (fn {...} => ()) 3;
Error: Compiler bug: Translate: fillPat found unresolved flex record type
","(fn {...} => ()) 3;"," *** 2021-10-27 13:46 --- John Reppy --- Not sure when this was fixed, but 110.99 does not exhibit the bug."
201,2,"Closed",3,103,"John Reppy",103,"John Reppy","2018-05-11 14:44","2018-05-19 09:21","2018-05-19 09:21","The AMD64.cm library is missing","The AMD64.cm library is missing from the installed version of MLRisc in 110.82.  The above transcript is from trying to compile Manticore using 110.82.",0,0,0,"Other","Generic Unix","Other","Fixed","Major","","110.82","MLRisc, AMD64","","[library $SMLNJ-MLRISC/Peephole.cm is stable]
[scanning $SMLNJ-MLRISC/AMD64.cm]
codegen/group.cm:40.3-40.25 Error: Io: openIn failed on ""/usr/local/smlnj/lib/SMLNJ-MLRISC/AMD64.cm"", No such file or directory
Compilation failed.
",""," *** 2018-05-19 09:21 --- John Reppy --- Fixed for 110.83"
204,1,"Open",3,103,"John Reppy",106,"David MacQueen","2018-05-19 09:37","","2018-05-19 09:37","Pretty printing of Absyn in error message does not respect fixity","The error message prints '::' as a prefix operator, instead of as an infix operator.  This behavior is a regression, since previous versions got it right (see tests/bugs/outputs/bug0027.out for example).",0,0,0,"All","All","Compiler","Accepted As Bug","Cosmetic","any","110.82","Pretty printing","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- fun f [] = 0
=   | f (x::xs) y = 1;
stdIn:1.6-2.20 Error: clauses don't all have same number of patterns
stdIn:1.6-2.20 Error: parameter or result constraints of clauses don't agree [tycon mismatch]
  this clause:      'Z list * 'Y -> 'X
  previous clauses:      'W list -> 'X
  in declaration:
    f = (fn nil => 0
          | (:: <pat>,y) => 1)
","fun f [] = 0
    | f (x::xs) y = 1;",""
205,1,"Open",3,103,"John Reppy",106,"David MacQueen","2018-05-19 09:53","","2018-05-19 09:53","Vector pattern causes integer variables to be printed as abstract types","For some reason, the values of b and c are being printed as ""-"" (i.e., an abstract value), instead of as ""2"" and ""3"" (resp).",0,0,0,"All","All","Compiler","Accepted As Bug","Minor","","110.82","pretty-printing","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- val v = #[1, 2, 3];
val v = #[1,2,3] : int vector
- val #[a, b, c] = v;
stdIn:2.5-2.19 Warning: binding not exhaustive
          #[a,b,c] = ...
val a = 1 : int
val b = - : int
val c = - : int
","val v = #[1, 2, 3];
val #[a, b, c] = v;
",""
206,2,"Closed",3,103,"John Reppy",103,"John Reppy","2018-05-19 09:55","2018-05-30 10:42","2018-05-30 10:42","Parsing of explicit type variables and val rec is broken","The above syntax is allowed according to the Definition of SML (1997).",0,0,0,"All","All","Compiler","Fixed","Minor","","110.82","","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- val 'a rec f = fn x : 'a => x;
stdIn:1.9-1.16 Error: syntax error: deleting  REC IDA EQUALOP
stdIn:1.17-1.23 Error: syntax error: deleting  FN IDA COLON
stdIn:1.24-1.29 Error: syntax error: deleting  TYVAR DARROW
","val 'a rec f = fn x : 'a => x;"," *** 2018-05-30 10:42 --- John Reppy --- The problem is that the parser had the tyvarseq following the `rec` keyword, instead of before it (as specified in the Definition).  This is fixed for 110.83."
207,1,"Open",3,103,"John Reppy",106,"David MacQueen","2018-05-20 08:15","","2021-11-09 21:30","Pretty printing of numeric types like Int32.int as ?.int32 in REPL","In some cases, known numeric types like Int32.in get printed as ?.int32.  This problem occurs when printing the result of an expression, but not in a simple binding example.

This bug is recorded as bugs number 1300 and 1399 in the old open bugs list.",0,0,0,"All","None","Compiler","Accepted As Bug","Cosmetic","any","110.82","pretty-printing","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- val x : Int32.int = 1;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val x = 1 : Int32.int
- val y = x * 12;
val y = 12 : ?.int32
- datatype t = T of Int32.int;
datatype t = T of ?.int32
","val x : Int32.int = 1;
val y = 12 * x;
datatype t = T of Int32.int;"," *** 2021-11-09 21:30 --- David MacQueen --- [DBM, 2021.11.7] Some work was done on this problem before merging the new MC code into the trunk, but we are still generating ""?.int32"" instead of Int32.int when printing from the REPL.  Further work is required on the general problem of eliminating more ""?.path"" tycon names. ~ "
208,2,"Closed",3,103,"John Reppy",103,"John Reppy","2018-05-26 08:25","2022-06-29 06:43","2022-06-29 06:43","Real.toManExp produces incorrect results in some cases","This is a long standing bug (see 1228, 1319, 1362, and 1443 in the old bug list).  I think that the right solution is to first add real64ToBits and bitsToRea64l primitive operations to the compiler.  Then we can implement this operation (and the PackReal modules) in terms of bit manipulations.

The correct results for the above tests are:

    Real.toManExp(0.0) = {exp = 0, man = 0}
    Real.toManExp(1.0) = {exp = 1, man = 0.5}
    Real.toManExp(7.0) = {exp = 3, man = 0.875}
    Real.toManExp(7.9 * 2e307) = {exp = 1024, man = 0.878904}

so toManExp is working for 1.0 and 7.0, but not for the other two cases.  There may also be a problem with subnormal arguments.",0,0,0,"All","All","Basis Library","Fixed","Major","","110.82","Real","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- Real.toManExp(0.0);
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val it = {exp=~1022,man=0.0} : {exp:int, man:real}
- Real.toManExp(1.0);
val it = {exp=1,man=0.5} : {exp:int, man:real}
- Real.toManExp(7.0);
val it = {exp=3,man=0.875} : {exp:int, man:real}
- Real.toManExp(7.9 * 2e307);
val it = {exp=0,man=1.58E308} : {exp:int, man:real}
","Real.toManExp(0.0);
Real.toManExp(1.0);
Real.toManExp(7.0);
Real.toManExp(7.9 * 2e307);
"," *** 2022-06-29 06:43 --- John Reppy --- This bug appears to be fixed.  I think that the fix was in 110.93 (see the history entry for 2019/08/25), but the bug status was not updated at the time."
209,2,"Closed",3,103,"John Reppy",106,"David MacQueen","2018-05-26 09:33","2020-04-09 09:51","2020-04-09 09:51","Special identifiers can be rebound in datatype and exception declarations","In Section 2.9 of the Definition (page 9), there is a restriction on the rebinding of special identifiers (true, false, it, ::, and nil) in datatype/exception declarations.  This restriction is not being enforced.",0,0,0,"All","All","Compiler","Fixed","Minor","","110.82","","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- datatype t1 = it;
datatype t1 = it
- datatype t2 = true;
datatype t2 = true
- exception false;
exception false
- datatype t3 = ::;
datatype t3 = ::
- exception nil;
exception nil
","datatype t1 = it;
datatype t2 = true;
exception false;
datatype t3 = ::;
exception nil;
"," *** 2018-05-26 09:37 --- John Reppy --- This bug is number 1328 in the old bug list."
210,1,"Open",3,103,"John Reppy",106,"David MacQueen","2018-05-27 12:20","","2018-05-27 12:20","Equality-type check in where type","The following signature declaration should not elaborate; but it does
in SML/NJ.

  signature K = sig
    type s
    include sig eqtype t end where type t = s
  end

In rule (64) the requirement

    /\'a(k).\tau admits equality, if t does

is not checked properly (I presume.)

This report was originally submitted by Martin Elsman (bug number 1324 in the old list)",0,0,0,"All","All","Compiler","Accepted As Bug","Minor","","110.82","Elaboration","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- signature K = sig
=    type s
=    include sig eqtype t end where type t = s
= end;
signature K =
  sig
    type s
    type t = s
  end
","signature K = sig
   type s
   include sig eqtype t end where type t = s
end;
",""
211,1,"Open",3,103,"John Reppy",106,"David MacQueen","2018-05-27 12:29","","2018-05-27 12:30","Problem with realisation in where type","This bug was originally reported by Martin Elsman (bug number 1329 in the old bug list).
",0,0,0,"All","All","Compiler","Accepted As Bug","Minor","","110.82","Elaboration","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- signature S = sig
=   datatype 'a t = A of 'a
= end where type 'a t = int;
signature S =
  sig
    datatype t = datatype int
  end
"," signature S = sig
    datatype 'a t = A of 'a
 end where type 'a t = int
",""
212,1,"Open",3,103,"John Reppy",106,"David MacQueen","2018-05-28 07:44","","2018-05-28 07:44","datatype rebinding leaks info from abstype","The constructor B is made visible and the abstract type `A` incorrectly supports equality (see pages 20 & 23 of Definition).

This bug comes from the test case for bug number 1394 in the old bugs list (the original bug was fixed).
",0,0,0,"All","All","Compiler","Accepted As Bug","Minor","","110.82","abstype","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- abstype A = B with datatype A = datatype A end;
type A
datatype A = B
- (B = B);
stdIn:2.4 Warning: calling polyEqual
val it = true : bool
-
","abstype A = B with datatype A = datatype A end;
(B = B);
",""
213,2,"Closed",3,103,"John Reppy",103,"John Reppy","2018-05-28 09:18","2019-04-23 09:28","2019-04-23 09:28","Int32.div raises Div instead of Overflow when dividing minInt by ~1","According to the Basis Library specification, dividing the largest negative number by ~1 should result in an Overflow exception (since the result is too large).  The compiler's behavior is correct for 31-bit tagged integers (because the overflow is detected when the untagged result is converted to a tagged result), but is not correct for 32-bit integers.  This bug is likely present on other architectures.

This bug is bug numbers 1388 and 1509 in the old bug list.",0,0,0,"x86","All","Compiler","Fixed","Minor","","110.82","integer division","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- Int.div(valOf Int.minInt, ~1);
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]

uncaught exception Overflow [overflow]
  raised at: <file stdIn>
- Int32.div(valOf Int32.minInt, ~1);
[autoloading]
[autoloading done]

uncaught exception Div [divide by zero]
  raised at: <file stdIn>
- Int32.~(valOf Int32.minInt);

uncaught exception Overflow [overflow]
  raised at: <file stdIn>
- Int32.quot(valOf Int32.minInt, ~1);

uncaught exception Div [divide by zero]
  raised at: <file stdIn>
","Int.div(valOf Int.minInt, ~1);
Int32.div(valOf Int32.minInt, ~1);
Int32.~(valOf Int32.minInt);
Int32.quot(valOf Int32.minInt, ~1);
"," *** 2019-04-23 09:28 --- John Reppy --- Fixed in 110.86."
214,2,"Closed",3,103,"John Reppy",106,"David MacQueen","2018-05-28 09:22","2020-04-09 20:34","2020-04-10 07:44","exception raised by pretty printer in REPL","This bug is number 1400 in the old bug list.",0,0,0,"All","All","Compiler","Fixed","Minor","","110.82","pretty printer","","Standard ML of New Jersey v110.82 [built: Sat Oct 14 13:08:58 2017]
- val a = 0
= datatype t = a;
val a = <PPDec.getVal failure>
datatype t = a
-
","val a = 0
datatype t = a;
"," *** 2020-04-09 20:34 --- David MacQueen --- The fix consists of simply changing the string printed when the binding of the variable is shadowed by a second declaration.  Another example of this is: ~  ~ val a = 0 exception a; ~  ~ It now prints ~  ~ val a = <hidden> ~  ~ for the val declaration for a. ~  *** 2020-04-08 17:29 --- David MacQueen --- Secondary error noted in previous comment occurs only in the aftermath of ~ the main bug above. *** 2020-04-08 17:22 --- David MacQueen --- Related bug: ~ structure S = struct val a = 0 datatype t = a end; ~  ~ produces the error ~  ~ Error: pattern and expression in val dec do not agree [overload conflict]"
215,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2018-09-20 13:43","2018-09-20 13:51","2018-09-20 13:51","ArraySlice problem in 110.84","For class, I use a sequence library that builds on ArraySlice.
There seems to be a new bug in ArraySlice (I don't recall seeing this issue last time through the course, in Spring 2017).
In particular, ArraySlice.subslice seems to compute the bounds incorrectly.
Submitted via web form by Dan Licata <dlicata@wesleyan.edu>
",0,0,0,"x86","MacOS X","Basis Library","Fixed","Critical","11.6","110.84 Sept 3 2018","","","here's a check that I'm not misunderstanding ArraySlice:

- ArraySlice.vector(ArraySlice.subslice(ArraySlice.full (Array.fromList [1,2,3,4]),2,NONE));
val it = #[1,2] : int vector

this should be [3,4] not [1,2]","- (ArraySlice.subslice(ArraySlice.full (Array.fromList [1,2,3,4]),2,NONE));
val it = SL ([|1,2,3,4|],0,2) : int slice

looks like the slice is starting at 0, when it should start at 2"," *** 2018-09-20 13:51 --- John Reppy --- This bug snuck out is a pre-release version of 110.84, but was subsequently fixed.  Just reinstall 110.84 and it should be fixed."
216,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2018-10-07 22:06","2018-10-08 09:01","2018-10-08 09:01","run-time system fatal error with large top-level value","Reusing a homework assignment we used successfully several times between Winter 2017 and Winter 2018,
we are now seeing fatal errors in 110.84 and 110.83 that look like one of these:

Fatal error -- bad string tag 0, obj = 0x7f6000c, desc = 0xa110200

Fatal error -- bad string tag 0, obj = 0xf3cf6a68, desc = 0x61a0000

We are not seeing these errors with 110.82, so we'll ask students to revert to that version.

Smells like a bug that requires GC to trigger, so producing a small file that causes the bug seems difficult.
Additional comments:
Probably unrelated to this crashing bug, but we'd love to have students be able to load a file like buggy.sml but
with a million reocrds instead of 100 or 1000, but SML becomes intractably slow reading it in
(even a file like the provided one but 10x larger takes several seconds to load).

Actually parsing a real json file with an SML-written parser is of
course super-speedy, but writing such a parser is the extra credit for
the assignment, so we can't give them the parser, which is why we
give them these .sml files with large top-level values.

This slow parsing has been the case for all versions.

Submitted via web form by Dan Grossman <djg@cs.washington.edu>
",0,0,0,"None","Generic Unix","Compiler","Fixed","Major","(confirmed on Linux, Mac, and Windows)","110.84","","","-bash-4.2$ sml /cse/web/courses/cse341/18au/buggy.sml
Standard ML of New Jersey v110.84 [built: Wed Sep 19 18:31:10 2018]
[opening /cse/web/courses/cse341/18au/buggy.sml]
/usr/lib/smlnj/bin/sml: Fatal error -- bad string tag 0, obj = 0xf4326a68, desc = 0x61a0000
","The smallest file I have is ~2000 lines, so I've put it here:

https://courses.cs.washington.edu/courses/cse341/18au/buggy.sml

It contains only two top-level bindings.

This file will trigger the bug on Linux or Mac, but not on Windows.  If
you want an even larger file for Windows, email me -- I have it. :)"," *** 2018-10-08 09:01 --- John Reppy --- This problem was introduced in 110.83 when the old- literal-bytecode interpreter was split off into a different function (BuildLiteralsV1).  Because the 8-byte header was already consumed, the byte code pointer (lits) was pointing into the heap object for the literals, instead of pointing to the head of the object.  If a major GC happened during literal construction, then this pointer confused the GC, which resulted in the error message. ~  ~ The bug has been fixed for 110.85."
217,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2018-10-10 15:55","2019-04-23 07:35","2019-04-23 07:35","Unhandled exceptions no longer print anything when inside used file","I don't know if you all would call this a bug or a feature but for
many years an unhandled exception when using a file would print a
failure like:

- use ""foo.sml"";
[opening foo.sml]
val test = fn : int -> int

uncaught exception Fail [Fail: foo]
  raised at: foo.sml:1.35-1.47

But in 110.82 or higher, we are met with no indication an
exception was raised.
Additional comments:
Compared to 110.81:

- use ""foo.sml"";
[opening foo.sml]
val test = fn : int -> int

uncaught exception Fail [Fail: foo]
  raised at: foo.sml:1.35-1.47




Submitted via web form by Dan Grossman <djg@cs.washington.edu>
",0,0,0,"None","Generic Unix","Other","Fixed","Cosmetic","","110.82 or higher","","","Standard ML of New Jersey v110.82 [built: Tue Dec 26 08:16:21 2017]
- use ""foo.sml"";
[opening foo.sml]
val test = fn : int -> int
val it = () : unit
- test;
val it = fn : int -> int
- test 1;

uncaught exception Fail [Fail: foo]
  raised at: foo.sml:1.35-1.46
","In foo.sml:

fun test n = if n = 1 then raise Fail (""foo"") else 2;
val t = test 1;

"," *** 2019-04-23 07:35 --- John Reppy --- Fixed in 110.86 (see #219 also) *** 2018-10-10 16:43 --- John Reppy --- This is a duplicate of bug #193."
218,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-01-08 02:00","2022-06-29 07:27","2022-06-29 07:27","OS.Path.toString raise invalidArc if arcs have ShiftJIS code","OS.Path.toString raises InvalidArc(*1) exception if arcs includes some Shift-JIS
code letters whose 2byte is a special one (at least ""|"").

This problem may be related to ""[#88] Support for UTF8 path names"", which has already been fixed.

*1 InvalidArc exception:
uncaught exception InvalidArc
  raised at: Basis/Implementation/OS/os-path-fn.sml:47.62-47.72
Additional comments:
I guess it may be difficult to give a general solution which does not collide with the other codes.
So, I hope that a switching I/F or another API like ""toStringUnsafe"" which just concatinates arcs will be released.


Submitted via web form by Masaya Saito <saitohm@ism.ac.jp>
",0,0,0,"x86","Windows 8.x","Basis Library","Won't Fix","Minor","Windows 10","110.85","OS.Path, Windows","","- OS.Path.toString {arcs = [""\129|""], isAbs = false, vol = """"};
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]

uncaught exception InvalidArc
  raised at: Basis/Implementation/OS/os-path-fn.sml:47.62-47.72
-","OS.Path.toString {arcs = [""\129|""], isAbs = false, vol = """"};"," *** 2022-06-29 07:27 --- John Reppy --- This bug is specific to Windows, where ""|"" is an invalid character in paths.  Given that Unicode has mostly replaced the use of Shift JIS, this one may not be worth fixing."
219,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-03-19 20:01","2019-04-23 07:33","2019-04-23 07:33","""use"" fails silently when a function inside a structure raises an exception","SML/NJ REPL fails to report error when loading a file that raises an exception

More specifically, this is experienced with a function raising an exception within a structure.

On v110.81, the REPL correctly outputs:

uncaught exception Empty
  raised at: test.sml:7.59-7.64
/usr/local/bin/sml: Fatal error -- Uncaught exception Empty with 0
 raised at test.sml:7.59-7.64

while on v110.85, it fails silently, outputting

val it = () : unit
Additional comments:
Likely a regression from an older version.

Submitted via web form by Yuanchu Xie <yuanchux@andrew.cmu.edu>
",0,0,0,"x86","Linux","Compiler","Fixed","Minor","4.19.28-1","110.85","modules","","Standard ML of New Jersey v110.85 [built: Thu Dec 27 20:00:48 2018]
- use ""test.sml"";
[opening test.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val it = () : unit
-


","structure ConstantQueue =
struct
type 'a queue = 'a list * 'a list
val empty : 'a queue = ([], [])
fun enqueue ((l, r): 'a queue) (v: 'a): 'a queue = (v::l, r)
exception Empty
fun dequeue (([], []): 'a queue): 'a * 'a queue = raise Empty
  | dequeue (l, r::rs) = (r, (l, rs))
  | dequeue (l, []) = dequeue ([], List.rev l)
end

structure CQ = ConstantQueue

val _ = CQ.dequeue CQ.empty
"," *** 2019-04-23 07:33 --- John Reppy --- Fixed in 110.86"
220,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2019-04-19 09:40","2020-04-21 11:48","2020-04-21 11:48","Incorrect error message for equality-type failure?","What appears to be an equality type error results in an error message
complaining about incorrect overloading of *.

The sample code is a version of map that tests whether the argument list is
empty using the = operator.  Thus the list must be an equality type, and in
fact the map function is correctly typed as

  (''a -> 'b) -> ''a list -> 'b list

But when the map function is used to map fn x => x*x over a real list, the
complaint is that real is not a [* ty].

My understanding is that the problem is not with fn x => x*x, because the
overloading is not resolved to a default type until a top-level declaration.
Indeed, if I change ys = nil to null ys in simpleMap, no type errors are
reported.


Submitted via web form by Norman Danner <ndanner@wesleyan.edu>
",0,0,0,"x86","Linux","Compiler","Fixed","Minor","Debian 9","110.85","","","$ cat ullman-ex5.23.sml
fun simpleMap F ys =
  if ys = nil then nil
  else
    let
      val x = hd ys
      val xs = tl ys
    in
      F(x) :: simpleMap F xs
    end ;

simpleMap (fn x => x*x) [1.0, 2.0, 3.0] ;

$ sml ullman-ex5.23.sml
Standard ML of New Jersey v110.85 [built: Mon Feb 25 15:10:48 2019]
[opening ullman-ex5.23.sml]
ullman-ex5.23.sml:2.9 Warning: calling polyEqual
val simpleMap = fn : (''a -> 'b) -> ''a list -> 'b list
ullman-ex5.23.sml:11.1-11.40 Error: operator and operand do not agree [overload conflict]
  operator domain: [* ty] list
  operand:         real list
  in expression:
    (simpleMap (fn x => <exp> * <exp>)) (1.0 :: 2.0 :: 3.0 :: nil)
","fun simpleMap F ys =
  if ys = nil then nil
  else
    let
      val x = hd ys
      val xs = tl ys
    in
      F(x) :: simpleMap F xs
    end ;

simpleMap (fn x => x*x) [1.0, 2.0, 3.0] ;
"," *** 2020-04-09 16:49 --- David MacQueen --- Here is a simpler test case: ~  ~ - (fn x => (x = x; x * x)) 1.0; ~ stdIn:1.2-2.15 Error: operator and operand do not agree [overload conflict] ~   operator domain: [* ty] ~   operand:         real ~   in expression: ~     (fn x => (<exp> = <exp>; <exp> * <exp>)) 1.0 ~  ~ The problem here is that the equality operation imposes a constraint that the type of x (as a metavariable or unification variable in the type inference algorithm) must be an equality type (i.e. the type metavariable has an equality attribute). The x*x subexpression means that that metavariable is instantiated to a special form of metavariable used for overloading resolution, which can only be instantiated to a limited set of ground types (like int, real).  But the equality attribute is propagated with this instantiation, so ~ we now we have a type metavariable that is both an overloading resolution variable (for operation *) and an equality metavariable, which can only be instantiated to an equality type. When this is unified with type real, there is an error caused by the fact that real is not an equality variable. ~  ~ So a solution of the bug could be to  ~  ~ (a) print the metavariable more accurately, as, e.g. [=,*-ty] to represent the two constraining attributes of the metavariable, and ~  ~ (b) have the type error message make clear that the failure is due to real not being  an equality type, instead of saying it is an “overload” conflict) (since real is a valid instantiation of the overloaded type of * ~  ~ Of course, (a) would accomplish (b) indirectly (if we get rid of the “overload conflict” annotation. ~  ~ This error situation can be revisited in the general rewrite of the type checker. ~  ~ One notational issue or problem is how I am now printing type metavariables in error messages (they should never occur when printing the actual types resulting from type inference).  There are various conventions.  By default, they can be printed as ‘X (like a type variable but capitalized), and ‘’X can be used to denote a metavariable with the equality attribute (where X is a completely arbitrary name).  I am using [* ty] to denote an _overloading resolution_ metavariable deriving from the overloaded “*” operator. So what is the best way to represent a metavariable which has the equality attribute and also is an overloading resolution metavariable?"
221,1,"Open",3,142,"Bug Submitter",103,"John Reppy","2019-05-03 11:36","","2019-05-27 09:01","Incorrect formatting of real number","Formatting of a large integer represented as a real
number adds a fractional part.  This bug turns up in
the Basis regression tests.
Additional comments:
This bug may be a problem with the handling of real literals,
since I've observed the following:

- Real.fmt (StringCvt.FIX NONE) (91827364509182.0 * 10.0);
val it = ""918273645091821.000000"" : string


Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Basis Library","None","Cosmetic","","110.85","basis, reals","","- Real.fmt (StringCvt.FIX NONE) 91827364509182.0;
val it = ""91827364509182.100000"" : string
","Real.fmt (StringCvt.FIX NONE) 91827364509182.0;",""
222,2,"Closed",3,142,"Bug Submitter",105,"Matthias Blume","2019-05-21 09:54","2019-06-08 09:56","2019-06-08 18:06","CM exports from imported library rather than from defined library","With SML/NJ 110.88, there seems to be a problem with CM sometimes
exporting a module from an imported library rather than exporting
the locally defined module of the same name.

Additional comments:
It seems to be related to the library exporting both a module directly from the
imported library and exporting a shadowing module; as noted above, if the
`structure Char` export is commented, then the correct `structure Int` is
exported.  Curiously, though, some direct exports from the imported library
don't cause the wrong `structure Int` to be exported; for example, if `structure
Char` is replaced by `structure List`, then the correct `structure Int` is
exported.

Also, note that uses of `structure Int` within the library are correctly
resolved; `structure Foo` is correctly defined using the library-defined
`structure Int` (rather than the imported `structure Int` from `$/basis.cm`).

This bug occurs ""in the wild"" with MLton's source code; in particular, MLton's
utility library redefines/extends much of the Basis Library, but a few
structures are exported directly from the Basis Library.

Submitted via web form by Matthew Fluet <Matthew.Fluet@gmail.com>
",0,0,0,"x86","Linux","CM","Accepted As Bug","Major","Ubuntu 16.04","110.88","CM","","Standard ML of New Jersey v110.88 [built: Wed May 15 15:59:12 2019]
- CM.make ""sources.cm"";
[autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
[scanning sources.cm]
[parsing (sources.cm):int.sml]
[creating directory .cm/SKEL]
[parsing (sources.cm):foo.sml]
[compiling (sources.cm):int.sml]
[creating directory .cm/GUID]
[creating directory .cm/x86-unix]
[code: 120, env: 93 bytes]
[compiling (sources.cm):foo.sml]
[code: 64, env: 93 bytes]
[New bindings added.]
val it = true : bool
- Foo.foo;
val it = fn : int -> int
- Int.inc;
stdIn:3.1-3.8 Error: unbound variable or constructor: inc in path Int.inc
- Int.maxInt;
val it = SOME 1073741823 : int option


Standard ML of New Jersey v110.87 [built: Thu May 09 14:56:50 2019]
- CM.make ""sources.cm"";
[autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
[scanning sources.cm]
[parsing (sources.cm):int.sml]
[creating directory .cm/SKEL]
[parsing (sources.cm):foo.sml]
[compiling (sources.cm):int.sml]
[creating directory .cm/GUID]
[creating directory .cm/x86-unix]
[code: 120, env: 93 bytes]
[compiling (sources.cm):foo.sml]
[code: 64, env: 93 bytes]
[New bindings added.]
val it = true : bool
- Foo.foo;
val it = fn : int -> int
- Int.inc;
val it = fn : int -> int
- Int.maxInt;
stdIn:4.1-4.11 Error: unbound variable or constructor: maxInt in path Int.maxInt","(* sources.cm *)
Library

structure Char  (* commenting out this export results in the correct `Int` being exported *)
structure Int
structure Foo

is

$/basis.cm
int.sml
foo.sml

(* int.sml *)
structure Int =
struct
  (* open Int *)
  fun inc (x: int) = x + 1
end

(* foo.sml *)
structure Foo =
struct
  val foo = Int.inc
end
"," *** 2019-06-08 18:06 --- Matthew Fluet --- Thanks Matthias! ~ -Matthew *** 2019-06-08 09:56 --- Matthias Blume --- Svn commit 5348 fixes this. *** 2019-06-07 00:29 --- Matthias Blume --- Update:  I have convinced myself that this is, indeed, a bug in CM - probably one that has been there for 20 years.  The reorganization of bindings in the Basis has exposed it. ~ I am still working on understanding the exact mechanics of what's going on.  Once I have this I will provide a fix. ~  ~ I suspect that symbol filtering at the ""root"" of a traversal (i.e., where CM.make eventually introduces bindings into the interactive environment) is broken while the same scenario at an internal node of the traversal is handled correctly. ~  ~ Additional info:  I figured out what the significance of structure Char is:  Both structure Char and structure Int are now defined in the same source file.  Re-exporting any other structure defined in that same file has the same effect (triggering the bug).  Re-exporting a symbol that is exported by the Basis but not defined in that same file (e.g., structure Array) does not trigger the effect. *** 2019-06-04 20:20 --- Matthias Blume --- This bug first appears in version 110.88.  It was absent in 110.87. ~  ~ My guess is that something is wrong with the new primop implementation, and that that has some subtle effect on the way the compiler's internal environments work. ~  ~ Side note:  The compiler's internal representation of environments seems ancient and in need of modernization.  For example, we could use red-black maps from the smlnj library.  The current implementation internally makes use of Array and Vector and some index arithmetic. ~ See base/compiler/ElabData/basics/env.sml *** 2019-05-27 13:11 --- Matthias Blume --- I'm looking into this now. ~  ~ First observation:  This seems to happen only at the interactive toplevel. ~ When I create another library that wraps the above sources.cm, then within that library's source the correct version of structure Int is visible. ~  ~ (* Other files as above, sources.cm re-exporting Char *) ~  ~ (* bar.cm *) ~ Library Bar ~   structure Foo ~   structure Int ~   structure Bar ~ is ~   sources.cm ~   bar.sml ~  ~ (* bar.sml *) ~ structure Bar = struct ~   val foo = Foo.foo ~   val inc = Int.inc ~ end ~  ~  ~  *** 2019-05-27 09:00 --- John Reppy --- There were no changes to CM in 110.88 (in fact, there have not been any changes to CM in the last year).  Therefore, I expect that this bug was triggered by the reorganization of the Basis Library to make it more target-size neutral. ~ "
223,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-07-08 06:53","2019-08-14 17:25","2019-08-14 17:25","Incremental Build fails on Windows","Incremental build (pre-existing data inside .cm directory) always raises Io exception.

Deleting .cm directory makes 1st build pass.  Any successive invocation of CM.make fails.
Additional comments:
Issue present since 110.90

Submitted via web form by Daniel Siderits <daniel.siderits@logicdata.net>
",0,0,0,"x86","Windows 8.x","Compiler","Fixed","Major","Win7(SP1)/x86-64","110.91","","","Error: Io: openOut failed on <skel-file>, win32-bin-prim-io.openWr: failed","CM.make <main-cm-file> on any project.  E.g.:

t.cm ::= Library structure T is t.sml
t.sml ::= structure T = struct end"," *** 2019-08-14 17:25 --- John Reppy --- There was a missing CloseHandle() call in the file system code to get a file's timestamp.  This led to access denied errors. ~  ~ It is fixed for 110.93."
224,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-07-08 06:54","2019-07-09 11:09","2019-07-09 11:09","Word64.fromLargeInt fails","Word64.fromLargeInt fails.  In REPL prints exception; as part of compiled project yields wrong value.
Additional comments:
Issue exists since 110.90

Submitted via web form by Daniel Siderits <daniel.siderits@logicdata.net>
",0,0,0,"x86","Other","Compiler","Fixed","Major","Win7(SP1)/x86-64","110.91","","","- Word64.fromLargeInt 1;

unexpected exception (bug?) in SML/NJ: Representation [Representation]
  raised at: Basis/Implementation/Unsafe/target32-object.sml:201.17-201.31
             ../compiler/MiscUtil/print/ppobj.sml:373.24
             ../compiler/MiscUtil/print/ppobj.sml:373.24
             ../compiler/MiscUtil/print/ppobj.sml:373.24
             ../compiler/TopLevel/interact/evalloop.sml:45.54","Word64.fromLargeInt 1"," *** 2019-07-09 11:09 --- John Reppy --- Fixed for 110.92.  The problem was an incorrect record kind in infcnv.sml for the packed pair of 32-bit words; it should be RK_RAWBLOCK."
225,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-09-21 10:28","2019-10-04 15:31","2019-10-04 15:31","Math.ln giving erroneous answers on Windows","Math.ln 10.0; (* in REPL *) gives wrong answer
of ~1.978 but should be about 2.302
Additional comments:
On Windows 10, machine architecture AMD64, Windows version 10.0.17763

Submitted via web form by Robert Gislason <gztown2216@yahoo.com>
",0,0,0,"x86","Other","Basis Library","Fixed","Critical","Windows 10","110.93","","","PS C:\Users\gztow\Documents\Pgmg\Sml\Moolah\Simpson> sml
Standard ML of New Jersey v110.93 [built: Thu Sep 05 19:16:24 2019]
- Math.ln 10.0;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val it = ~1.97809402413 : real","Math.ln 10.0; (* in REPL *)

"," *** 2019-10-04 15:31 --- John Reppy --- Fixed for 110.94.  The problem was in the assembly implementation of scalb. *** 2019-09-21 12:15 --- John Reppy --- This bug appears to be Windows specific, since I was not able to reproduce it on macOS.  As far as I can tell, the same code is run for this expression on Windows and macOS, so it is not clear why the results are different."
226,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-10-07 15:06","2019-10-23 07:48","2019-10-23 07:48","SML/NJ does not support 64-bit systems","WHen you have a functioning 64 bit beta for Mac OS X,
we at Bricklayer.org would like to get access to it.  I am the IDE
developer at Bricklayer, which wraps a Python-based IDE around
a SMLNJ compiler for STEM related educational activities

(www.bricklayer.org).

This software is in use in many schools (from elementary to college)

 and is supported for MacOS and
Windows.

The current version for Mac OS Catalina will not work  with our currently
release.

Thank you !

Hubert Hickman

Submitted via web form by Hubert Hickman <hubert.hickman@gmail.com>
",0,0,0,"x86","MacOS X","Compiler","Fixed","Major","","","64 BIT ","","",""," *** 2019-10-23 07:48 --- John Reppy --- Version 110.94 will include 64-bit support for both Linux and macOS."
227,2,"Closed",3,103,"John Reppy",103,"John Reppy","2019-10-23 07:43","2019-10-23 10:21","2019-10-23 10:21","CPS contraction is taking an excessive amount of time on word8 basis test","The CPS contraction phase is taking an excessive amount of time (> 50 seconds) on the word8.sml test in the basis test suite.  This problem first appeared in Version 110.93.",0,0,0,"All","All","Compiler","Fixed","Minor","","110.93","CPS contraction","","% cd basis
% sml
Standard ML of New Jersey v110.93 [built: Thu Sep 05 12:38:37 2019]
- let val t = Time.now() in use ""tests/word8.sml""; Time.-(Time.now(), t) end;
[autoloading]
...
val it = TIME {usec=51445658} : Time.time
- Time.toReal it;
val it = 51.445658 : real
",""," *** 2019-10-23 10:21 --- John Reppy --- Fixed for 110.94"
228,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-11-01 14:00","2019-11-01 17:10","2019-11-01 17:10","Bug in Math.ln, Math.exp on Windows","Getting wrong answers in the REPL for Math log and exponential
functions.
Additional comments:
Reported a similar bug in SMLNJ 110.93

Submitted via web form by Robert Gislason <gztown2216@yahoo.com>
",0,0,0,"x86","Windows Vista","Basis Library","Fixed","Major","Windows 10 v. 1809","110.94","Math module","","See above","PS C:\Users\gztow> sml
Standard ML of New Jersey (32-bit) v110.94 [built: Thu Oct 31 22:47:01 2019]
- Math.log 10.0;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
stdIn:1.2-1.10 Error: unbound variable or constructor: log in path Math.log
- Math.ln 10.0;
val it = ~1.97809402413 : real
- Math.ln 2.718281828;
val it = ~3.36438838525 : real
- Math.exp 1.0;
val it = ~5.71390465393E~32 : real
- ^Z"," *** 2019-11-01 17:10 --- John Reppy --- The bug fix for #225 was overwritten when merging code from the num64 branch.  It has been restored and a replacement installer for Windows has been posted."
229,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-11-01 23:19","2019-11-07 13:23","2019-11-07 13:23","Real.fromString errors","I observe a segementation fault with `Real.fromString` on a valid
(but unusual) input with 110.94 (32-bit).

Neither 110.93 nor 110.94 (64-bit) exhibits the segmentation
fault, but both return the wrong answer.
Additional comments:
The wrong answer bug presumably was introduced as part of the fix
for bug #194 (https://smlnj-gforge.cs.uchicago.edu/scm/viewvc.php?view=rev&root=smlnj&revision=4520);
a large positive exponent, but zero mantissa, should return 0,
rather than posInf.


Submitted via web form by Matthew Fluet <Matthew.Fluet@gmail.com>
",0,0,0,"x86","Linux","Basis Library","Fixed","Major","","110.94 (32-bit)","reals","","[mtf@sulfur smlnj]$ for v in 110.93 110.94-32 110.94-64; do echo 'Real.fromString ""0.00000000000e123213213123213123123""' | ./smlnj-$v/bin/sml; done
Standard ML of New Jersey v110.93 [built: Fri Nov 01 09:18:58 2019]
- = [autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val it = SOME inf : real option

Standard ML of New Jersey (32-bit) v110.94 [built: Fri Nov 01 23:02:58 2019]
- = [autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
Segmentation fault (core dumped)
Standard ML of New Jersey (64-bit) v110.94 [built: Fri Nov 01 23:55:39 2019]
- = [autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val it = SOME inf : real option

","Real.fromString ""0.00000000000e123213213123213123123"""," *** 2019-11-07 13:23 --- John Reppy --- The fix is two parts.  The result of Real.posInf, instead of 0.0 has been fixed in the RealScan module in the basis implementation.  The crash on x86/linux was the result of assuming that SIGFPE was the signal that is raised by the `into` instruction, when, in fact, the signal is SIGSEGV. ~  ~ Both of these fixes are in place for 110.95. *** 2019-11-03 08:31 --- John Reppy --- The memory fault seems to be specific to Linux; it just returns infinity on macOS."
230,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-11-04 15:04","2019-11-07 10:19","2019-11-07 10:19","segmentation fault when compiling MLton sources with SML/NJ 64-bit","I consistently get a segmentation fault / bus error when compiling
the MLton sources (in particular, the MLton utility libraries)
with 64-bit SML/NJ.  Both on Linux and MacOS.
Submitted via web form by Matthew Fluet <Matthew.Fluet@gmail.com>
",0,0,0,"Other","Generic Unix","Compiler","Fixed","Major","","110.94 (64-bit)","","","Linux:

[mtf@sulfur basic]$ sml -m sources.cm
Standard ML of New Jersey (64-bit) v110.94 [built: Fri Nov 01 23:55:39 2019]
[scanning sources.cm]
...
[compiling (sources.cm):dot.sig]
[code: 57, data: 1, env: 18793 bytes]
[compiling (sources.cm):dot.sml]
Segmentation fault (core dumped)


MacOS

[mtf@uller basic]$ sml -m sources.cm
Standard ML of New Jersey (64-bit) v110.94 [built: Fri Nov 01 12:24:51 2019]
[scanning sources.cm]
...
[compiling (sources.cm):dot.sig]
[code: 57, data: 1, env: 18793 bytes]
[compiling (sources.cm):dot.sml]
Bus error: 10","$ git clone https://github.com/MLton/mlton.git
$ cd cd mlton/lib/mlton/basic
$ sml -m sources.cm
"," *** 2019-11-07 10:19 --- John Reppy --- This is fixed for 110.95.  The problem was with the assembly code for vector allocation (in the case where the runtime was called to allocated the vector)."
231,2,"Closed",3,103,"John Reppy",103,"John Reppy","2019-11-09 18:04","2019-11-09 18:17","2019-11-09 18:17","New literals-lifting code does not handle pair of reals","The new literals-lifting code used on 64-bit targets does not handle pairs of reals.

- Control.CG.debugLits := true;
...
- (0.0, 0.0);

==== Before Literals.liftLiterals
v30(v34[C],v32[PR0]) =
   {RK_RAW64BLOCK 2,(R64)0.0,(R64)0.0} -> v28
   {v28} -> v31
   v34(v31)
Error: Compiler bug: Literals: unexpected REAL
",0,0,0,"Other","All","Compiler","Fixed","Critical","","110.94","real literals","","<jhr@Freia> sml
Standard ML of New Jersey (64-bit) v110.94 [built: Fri Nov 01 16:08:14 2019]
- (0.0, 0.0);
Error: Compiler bug: Literals: unexpected REAL
","(0.0, 0.0)"," *** 2019-11-09 18:17 --- John Reppy --- Fixed for 110.95."
232,1,"Open",3,142,"Bug Submitter",105,"Matthias Blume","2019-11-11 16:09","","2020-01-09 14:13","Reassigning Compiler.Control.Print.out fails on 64 bit","Reassining Compiler.Control.Print.out causes the 64-bit compiler to fail on
110.95, though the 32-bit compiler seems fine.  In the sample code I reassign
it to accumulate the output in a string ref.  The transcript shows the result
of compiling under 'sml -32' and 'sml -64'.

Submitted via web form by Norman Danner <ndanner@wesleyan.edu>
",0,0,0,"x86","Linux","Compiler","Accepted As Bug","Minor","Debian 10","110.95","64 bit, Compiler.Control.Print.out","","$ /opt/smlnj-110.95/bin/sml -32
Standard ML of New Jersey (32-bit) v110.95 [built: Mon Nov 11 16:32:21 2019]
- CM.make ""A.cm"" ;
[autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
[scanning A.cm]
[library $smlnj/compiler/compiler.cm is stable]
[library $smlnj/compiler/current.cm is stable]
[library $smlnj/compiler/x86.cm is stable]
[library $smlnj/viscomp/basics.cm is stable]
[library $smlnj/viscomp/x86.cm is stable]
[library $smlnj/viscomp/core.cm is stable]
[library $smlnj/MLRISC/MLRISC.cm is stable]
[library $SMLNJ-MLRISC/MLRISC.cm is stable]
[library $smlnj-lib.cm(=$SMLNJ-LIB/Util)/smlnj-lib.cm is stable]
[library $Graphs.cm(=$SMLNJ-MLRISC)/Graphs.cm is stable]
[library $Lib.cm(=$SMLNJ-MLRISC)/Lib.cm is stable]
[library $compiler/(core.cm):MiscUtil/const-arith/sources.cm is stable]
[library $smlnj/smlnj-lib/controls-lib.cm is stable]
[library $SMLNJ-LIB/Controls/controls-lib.cm is stable]
[library $smlnj/MLRISC/Lib.cm is stable]
[library $smlnj/viscomp/debugprof.cm is stable]
[library $smlnj/viscomp/elabdata.cm is stable]
[library $smlnj/smlnj-lib/pp-lib.cm is stable]
[library $SMLNJ-LIB/PP/pp-lib.cm is stable]
[library $html-lib.cm(=$SMLNJ-LIB/HTML)/html-lib.cm is stable]
[library $smlnj/viscomp/execute.cm is stable]
[library $smlnj/viscomp/parser.cm is stable]
[library $smlnj/viscomp/elaborate.cm is stable]
[library $smlnj/MLRISC/IA32.cm is stable]
[library $SMLNJ-MLRISC/IA32.cm is stable]
[library $smlnj/MLRISC/Graphs.cm is stable]
[library $smlnj/MLRISC/Visual.cm is stable]
[library $SMLNJ-MLRISC/Visual.cm is stable]
[library $smlnj/MLRISC/Control.cm is stable]
[library $SMLNJ-MLRISC/Control.cm is stable]
[library $smlnj/internal/smlnj-version.cm is stable]
[loading (A.cm):a.sml]
[New bindings added.]
val it = true : bool
-
$
$ /opt/smlnj-110.95/bin/sml -64
Standard ML of New Jersey (64-bit) v110.95 [built: Mon Nov 11 16:33:17 2019]
- CM.make ""A.cm"" ;
[autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
[scanning A.cm]
[library $smlnj/compiler/compiler.cm is stable]
[library $smlnj/compiler/current.cm is stable]
[library $smlnj/compiler/amd64.cm is stable]
[library $smlnj/viscomp/basics.cm is stable]
[library $smlnj/viscomp/amd64.cm is stable]
[library $smlnj/viscomp/core.cm is stable]
[library $smlnj/MLRISC/MLRISC.cm is stable]
[library $SMLNJ-MLRISC/MLRISC.cm is stable]
[library $smlnj-lib.cm(=$SMLNJ-LIB/Util)/smlnj-lib.cm is stable]
[library $Graphs.cm(=$SMLNJ-MLRISC)/Graphs.cm is stable]
[library $Lib.cm(=$SMLNJ-MLRISC)/Lib.cm is stable]
[library $compiler/(core.cm):MiscUtil/const-arith/sources.cm is stable]
[library $smlnj/smlnj-lib/pp-lib.cm is stable]
[library $SMLNJ-LIB/PP/pp-lib.cm is stable]
[library $html-lib.cm(=$SMLNJ-LIB/HTML)/html-lib.cm is stable]
[library $smlnj/MLRISC/Lib.cm is stable]
[library $smlnj/viscomp/debugprof.cm is stable]
[library $smlnj/viscomp/elabdata.cm is stable]
[library $smlnj/viscomp/execute.cm is stable]
[library $smlnj/viscomp/parser.cm is stable]
[library $smlnj/viscomp/elaborate.cm is stable]
[library $smlnj/MLRISC/AMD64.cm is stable]
[library $SMLNJ-MLRISC/AMD64.cm is stable]
Error: Compiler bug: UnpickMod: stub lookup failed for environment in $SMLNJ-MLRISC/AMD64.cm@499290(../amd64/c-calls/amd64-svid.sml): m = (6, functor AMD64SVID_CCalls), i = <moduleId>

-
","(* A.cm *)

Library
  structure A
is
  a.sml

  $smlnj/compiler/compiler.cm


(* a.sml *)

structure A =
struct

  fun f() =
  let
    val tb = ref("""")
  in
      (
        Compiler.Control.Print.out := {
                                        say=fn s => tb := concat [!tb, s],
                                        flush=fn() => ()
                                      } ;
        ()
      )
  end

end
"," *** 2019-11-16 08:31 --- John Reppy --- Switching the the ""new-style"" visible compiler ($smlnj/compiler.cm) and Control.Print.out is a work around for the problem. *** 2019-11-12 10:40 --- John Reppy --- This is probably some issue in the MLRISC CM files (which are a bit of a mess)."
233,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-11-14 04:39","2019-11-16 08:50","2019-11-16 08:50","eXene build fails for 64bit install","When trying to install SML/NJ, the eXene build fails.

[compiling $/(eXene.cm):lib/(sources.cm):(base.cm):protocol/xreply.sml]
eXene/lib/protocol/xreply.sml:54.28-54.59 Error: operator and operand do not agree [tycon mismatch]
  operator domain: Word64.word
  operand:         Word32.word
  in expression:
    Word.fromLargeWord (get32 (s,i))
FAILURE: stabilization of libraries failed



Submitted via web form by James Bostock <james.bostock@gmail.com>
",0,0,0,"x86","Linux","Installer","Fixed","Minor","Ubuntu 19.10","110.95","eXene","","[compiling $/(eXene.cm):lib/(sources.cm):(base.cm):protocol/xreply.sml]
eXene/lib/protocol/xreply.sml:54.28-54.59 Error: operator and operand do not agree [tycon mismatch]
  operator domain: Word64.word
  operand:         Word32.word
  in expression:
    Word.fromLargeWord (get32 (s,i))
FAILURE: stabilization of libraries failed",""," *** 2019-11-16 08:50 --- John Reppy --- Fixed for 110.96.  With the LargeWord module changing from Word32 ~ to Word64, there were a few places were things broke. ~ "
234,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-11-16 07:52","2019-12-12 09:27","2019-12-12 09:27","Converting NaN to a string causes an infinite loop on 64-bit machines","Attempting to print a NaN in the top-level loop or
calling Real.toString on a NaN causes an infinite loop.
Additional comments:
This example works on 32-bit executables.

Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"x86","Generic Unix","Basis Library","Fixed","Major","","110.95","reals","","<jhr@aeneas> sml
Standard ML of New Jersey (64-bit) v110.95 [built: Sat Nov 09 20:01:23 2019]
- Real.toString(0.0 / 0.0);
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
^Z[1] + Stopped                  sml
","Real.toString(0.0 / 0.0);"," *** 2019-12-12 09:27 --- John Reppy --- The problem was that floating-point comparisons where not handling NaNs correctly (this was an MLRisc bug).  Fixed for 110.96."
235,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-11-22 22:37","2019-11-23 10:28","2019-11-23 10:28","Mac OS Catalina Compilation Failure","Fails to install SMLNJ based on instructions (using config/install.sh -64)
Fix:
On line 254 of config/install.sh, replace $DEFAULT_SIZE with $SIZE_OPT.

Submitted via web form by Aditi Gupta and Harrison Grodin <<aditig@andrew.cmu.edu> and <hgrodin@andrew.cmu.edu>>
",0,0,0,"x86","MacOS X","Installer","Fixed","Critical","Catalina","110.94","","","/usr/local/share/smlnj/config/unpack: Fetching bootfiles from http://smlnj.cs.uchicago.edu/dist/working/110.94/. Please stand by...
/usr/local/share/smlnj/config/unpack: Trying boot.amd64-unix.tgz ...
2019-11-22 23:33:29 URL:http://smlnj.cs.uchicago.edu/dist/working/110.94//boot.amd64-unix.tgz [6037153/6037153] -> ""/usr/local/share/smlnj/boot.amd64-unix.tgz"" [1]
/usr/local/share/smlnj/config/unpack: Fetching boot.amd64-unix.tgz was a success.
/usr/local/share/smlnj/config/unpack: Un-GZIP-ing and un-TAR-ing bootfiles archive.
config/install.sh: CM metadata directory name is "".cm""
: unable to determine architecture/operating system
config/install.sh !!! Boot code failed, no heap image (sml.amd64-darwin).
bash-3.2$",""," *** 2019-11-23 10:28 --- John Reppy --- This bug was already fixed on November 12 (r6009)."
236,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-11-29 08:59","2019-11-30 07:17","2019-11-30 07:17","Unable to package smlnj for 64-bit x86, for Arch Linux","When using `config/install.sh` for 32-bit x86, everything worked fine, for version 110.94.

For version `110.95` I wanted to package the 64-bit x86 version, so I tried this in the PKGBUILD:

config/install.sh -64
config/install.sh -default 64

At the first command (config/install.sh -64), I get the following error (after quite a bit of compilation):

[...]
make[2]: Entering directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/c-libs/posix-sysdb'
rm -f v-* *.o libposix-sysdb.a
make[2]: Leaving directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/c-libs/posix-sysdb'
cleaning posix-tty
make[2]: Entering directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/c-libs/posix-tty'
rm -f v-* *.o libposix-tty.a
make[2]: Leaving directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/c-libs/posix-tty'
cleaning smlnj-ccalls
make[2]: Entering directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/c-libs/smlnj-ccalls'
rm -f v-* *.o *.s libsmlnj-ccalls.a
make[2]: Leaving directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/c-libs/smlnj-ccalls'
cleaning dl
make[2]: Entering directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/c-libs/dl'
rm -f v-* *.o libunix-dynload.a
make[2]: Leaving directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/c-libs/dl'
rm -f v-* *.o
make[1]: Leaving directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/c-libs'
(cd ../gc; make MAKE=""make"" clean)
make[1]: Entering directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/gc'
rm -f v-* *.o libgc.a libmp-gc.a
make[1]: Leaving directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/gc'
(cd ../mp; make MAKE=""make"" clean)
make[1]: Entering directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/mp'
rm -f v-* *.o libmp.a
make[1]: Leaving directory '/home/afr/archpackages/community/smlnj/trunk/src/base/runtime/mp'
/home/afr/archpackages/community/smlnj/trunk/src/config/unpack: The bootfiles tree already exists.
config/install.sh: CM metadata directory name is "".cm""
: cannot find runtime system /home/afr/archpackages/community/smlnj/trunk/src/install/bin/.run/run.x86-linux
config/install.sh !!! Boot code failed, no heap image (sml.amd64-linux).

I tried looking at the script, but found no obvious way to fix the issue.
Additional comments:
I can package the 32-bit x86 version, for now.

Submitted via web form by Alexander F. Rødseth <xyproto@archlinux.org>
",0,0,0,"x86","Linux","Installer","Fixed","Major","Rolling (2019-11-29)","110.95","install.sh","","Full output: http://ix.io/237l","This PKGBUILD (http://ix.io/237k) which downloads these files:

http://smlnj.cs.uchicago.edu/dist/working/110.95/boot.amd64-unix.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/boot.x86-unix.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/config.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/cm.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/compiler.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/runtime.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/system.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/MLRISC.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/smlnj-lib.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/ckit.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/nlffi.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/cml.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/ml-lpt.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/ml-lex.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/ml-yacc.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/ml-burg.tgz
http://smlnj.cs.uchicago.edu/dist/working/110.95/trace-debug-profile.tgz"," *** 2019-11-30 07:17 --- John Reppy --- I believe that this bug has the same cause as #235, which is fixed for 110.96"
237,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-11-30 11:37","2019-12-01 08:40","2019-12-01 08:40","heap2exec script fails on 110.95","heap2exec fails with error:
./heap2exec: line 38: <PATH>/bin/.arch-n-opsys -32: No such file or directory
Additional comments:
Looks like script tries to run the command ""<PATH>/bin/.arch-n-opsys -32"" (filename with a space)
and not a ""<PATH>/bin/.arch-n-opsys"" -32 (filename with passed options).
To make it works I removed "" quotes; also it works fine with `""<PATH>/bin/.arch-n-opsys"" ""$SIZE_OPT""`, etc.

Fix:
Remove "" quotes on the line 38 in config/_arch_n_opsys: ARCH_N_OPSYS=`""$BIN_DIR/.arch-n-opsys $SIZE_OPT""`


Submitted via web form by Kirill Boltaev <aske@fmap.me>
",0,0,0,"x86","Linux","Other","Fixed","Minor","","110.95","heap2exec","","1. Install smlnj
2. run heap2exec",""," *** 2019-12-01 08:40 --- John Reppy --- Fixed for 110.96"
238,2,"Closed",3,103,"John Reppy",103,"John Reppy","2019-12-13 12:06","2020-07-10 10:56","2020-07-10 10:56","Cross compilation from amd64 to x86 does not work","Attempting to cross compile from a 64-bit (amd64) compiler to the x86 fails.  The problem is that the x86 uses the `math-built-in-x86.sml` implementation of the `Math` structure, but that requires instructions that the AMD64 does not support (e.g., fsin).  The `math-built-in-x86.sml` file is being compiled because the `ARCH_X86` compiler flag has been set by the `cmb-cross` script.",0,0,0,"x86","All","Compiler","Fixed","Minor","","110.95","cross compiler","","<jhr@Freia> cmb-cross -64 x86-win32
cmb-cross: build x86-win32-cross bin/boot files
Standard ML of New Jersey (64-bit) v110.95 [built: Thu Dec 12 17:34:08 2019]
- [autoloading]
[library $smlnj/cmb/current.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $smlnj/cmb/amd64-unix.cm is stable]
[autoloading done]
val it = () : unit
val it = () : unit
val it = () : unit
val it = () : unit
val it = () : unit
val it = () : unit
[reading init spec from $smlnj/init/init.cmi]
[compiling $smlnj/init/(init.cmi):order.sml]
[creating directory x86-win32-cross.bin.amd64-unix/smlnj/init/.cm/amd64-unix]
[code: 84, data: 20, env: 189 bytes]
[compiling $smlnj/init/(init.cmi):assembly.sig]
[code: 73, data: 1, env: 1656 bytes]
[compiling $smlnj/init/(init.cmi):dummy.sml]
[code: 1177, data: 41, env: 436 bytes]
[compiling $smlnj/init/(init.cmi):target64-core-intinf.sml]
*** WARNING: no access to Div exception
*** WARNING: no access to Div exception
*** WARNING: no access to Div exception
*** WARNING: no access to Div exception
*** WARNING: no access to Div exception
*** WARNING: no access to Div exception
*** WARNING: no access to Div exception
[code: 21194, data: 666, env: 1165 bytes]
[compiling $smlnj/init/(init.cmi):target64-core.sml]
[code: 14293, data: 317, env: 2124 bytes]
[compiling $smlnj/init/(init.cmi):xcore.sml]
[code: 57, data: 1, env: 144 bytes]
[compiling $smlnj/init/(init.cmi):target64-inline.sml]
smlnj/init/target64-inline.sml:47.5-47.47 Warning: rebinding =
smlnj/init/target64-inline.sml:129.9-129.57 Warning: rebinding =
smlnj/init/target64-inline.sml:175.9-175.65 Warning: rebinding =
smlnj/init/target64-inline.sml:203.9-203.65 Warning: rebinding =
smlnj/init/target64-inline.sml:48.39-48.48 Warning: calling polyEqual
smlnj/init/target64-inline.sml:47.39-47.47 Warning: calling polyEqual
[code: 42873, data: 1761, env: 13684 bytes]
[compiling $smlnj/init/(init.cmi):math-built-in-x86.sml]
***** MLRiscGen.genCPSFunction: exception (Fail: TODO)
***********************************************
v53(v90[PV],v89[PV],v88[C],v87[PV],v86[PV],v85[PV],v84[R64]) =
   fsinf64(v84) -> v12[R64]
   v88(v88,v87,v86,v85,v12)
***********************************************

uncaught exception Fail [Fail: TODO]
  raised at: ../compiler/CodeGen/amd64/amd64MLTreeExtComp.sml:38.72-38.83
             ../compiler/CodeGen/main/mlrisc-gen-fn.sml:964.12-964.14
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../cm/util/safeio.sml:41.55
             ../cm/compile/compile.sml:383.18
             ../cm/compile/compile.sml:595.43
             ../cm/util/safeio.sml:41.55
             ../cm/bootstrap/btcompile.sml:419.47
-
","cd base/system
cmb-cross -64 x86-win32"," *** 2020-07-10 10:56 --- John Reppy --- Fixed for 110.98.  The fix required some tweaks to the system/smlnj/init/init.cmi file. *** 2020-01-09 14:15 --- John Reppy --- Note that this bug is probably the same as #241"
239,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-12-16 17:17","2019-12-21 12:58","2019-12-21 12:58","Date.toTime is incorrect (by a factor of 10E9)","The values returned by the Date.toTime function are too large
by a factor of 10E9.

This is caused by a typo in the definition of function nsToTime
in Basis/Implementation/date.sml (introduced in revision 5400 [1]
and hence in release 110.90).

Obviously, Time.fromSeconds should be replaced by
Time.fromNanoseconds in nsToTime.

[1] <http://smlnj-gforge.cs.uchicago.edu/scm/viewvc.php/sml/trunk/system/Basis/Implementation/date.sml?root=smlnj&r1=5366&r2=5400>

Additional comments:
After applying the patch below and recompiling the system,
the result of executing the above source is as follows:

val t = TIME {usec=1576534078704822} : Time.time
val s = 1576534078 : IntInf.int
val d =
  DATE
    {day=16,hour=23,isDst=SOME false,minute=7,month=Dec,
     offset=SOME (TIME {usec=~3600000000}),second=58,wday=Mon,yday=349,
     year=2019} : Date.date
val t' = TIME {usec=1576530478000000} : Time.time
val s' = 1576530478 : IntInf.int
val d' =
  DATE
    {day=16,hour=22,isDst=SOME false,minute=7,month=Dec,
     offset=SOME (TIME {usec=~3600000000}),second=58,wday=Mon,yday=349,
     year=2019} : Date.date
val factor = 0 : IntInf.int
val difference = 3600 : IntInf.int


Fix:
--- base/system/Basis/Implementation/date.sml.orig	2019-06-12 21:16:48 UTC
+++ base/system/Basis/Implementation/date.sml
@@ -70,7 +70,7 @@ structure Date : DATE =
 	  = wrap (CInterface.c_function ""SMLNJ-Date"" ""strfTime"")

   (* conversions between integer numbers of seconds (used by runtime) and Time.time values *)
-    fun nsToTime s = Time.fromSeconds (Word64.toLargeInt s)
+    fun nsToTime s = Time.fromNanoseconds (Word64.toLargeInt s)
     fun timeToNs t = Word64.fromLargeInt (Time.toNanoseconds t)

     val localTime = localTime' o timeToNs


Submitted via web form by Johannes 5 Joemann <joemann@beefree.free.de>
",0,0,0,"None","Generic Unix","Basis Library","Fixed","Major","","110.96","","","val t = TIME {usec=1576534090258702} : Time.time
val s = 1576534090 : IntInf.int
val d =
  DATE
    {day=16,hour=23,isDst=SOME false,minute=8,month=Dec,
     offset=SOME (TIME {usec=~3600000000}),second=10,wday=Mon,yday=349,
     year=2019} : Date.date
val t' = TIME {usec=1576534089999996400000000} : Time.time
val s' = 1576534089999996400 : IntInf.int
val d' =
  DATE
    {day=11,hour=1,isDst=SOME false,minute=58,month=Feb,
     offset=SOME (TIME {usec=~3600000000}),second=9,wday=Tue,yday=41,
     year=2127} : Date.date
val factor = 999999999 : IntInf.int
val difference = ~1576534088423462310 : IntInf.int
","val t = Time.now ();
val s = Time.toSeconds t;
val d = Date.fromTimeLocal t;
val t' = Date.toTime d;
val s' = Time.toSeconds t';
val d' = Date.fromTimeLocal t';
val factor = IntInf.div (s', s);
val difference = IntInf.- (s, s');
"," *** 2019-12-21 12:58 --- John Reppy --- Fixed for 110.97."
240,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-12-20 19:37","2019-12-21 20:19","2019-12-21 20:20","Non-default 64-bit installation build failure","On Ubuntu 18.04, in a fresh directory I extracted config.tgz and
ran the following command and it fails to build:

% ./config/install.sh -64
.... lots of stuff ...
Building asdlgen.
/home/gitlab-runner/smlnj/asdl/src/gen/fragments/mkmk.sh back-end/sml
/home/gitlab-runner/smlnj/asdl/src/gen/fragments/mkfrags.sh back-end/sml
make: *** No rule to make target 'back-end/sml/fragments.sml', needed by '.depend'.  Stop.
FAILURE: Building asdlgen failed.
./config/install.sh: !!! Installation of libraries and programs failed.

I was able to build with the `-default 32/64` argument in a fresh directory.
If I build with -32 first, and then -default 64 it's fine, but -64 first
(so that I can use -default 32) does not work.
Fix:
John Reppy said ""The ""fragments.sml"" file is a file
generated by SML, and I suspect that it is trying to
use a 32-bit version to generate the file, but that
step fails because it does not exist.""

Submitted via web form by Kavon Farvardin <kavon@farvard.in>
",0,0,0,"x86","Generic Unix","Installer","Fixed","Minor","Ubuntu 18.04","110.96","build, 64-bit","","",""," *** 2019-12-21 20:19 --- John Reppy --- Fixed for 110.97"
241,1,"Open",3,142,"Bug Submitter",105,"Matthias Blume","2019-12-21 12:39","","2019-12-21 12:59","problem with CM + use of Compiler structure in 110.96","When I use CM in conjunction with a reference to Compiler structure (Compiler.version), I get
""Error: Compiler bug: UnpickMod: stub lookup failed for environment in $SMLNJ-MLRISC/AMD64.cm@500608(../amd64/c-calls/amd64-svid.sml): m = (6, functor AMD64SVID_CCalls), i = <moduleId>"".
This code worked in 110.93.
Submitted via web form by Alley Stoughton <alley.stoughton@icloud.com>
",0,0,0,"x86","MacOS X","CM","Accepted As Bug","Major","10.14.6","110.96","CM, Compiler structure","","$ sml
Standard ML of New Jersey (64-bit) v110.96 [built: Fri Dec 13 14:59:34 2019]
- CM.make ""foo.cm"";
[autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
[scanning foo.cm]
[library $smlnj/compiler/compiler.cm is stable]
[parsing (foo.cm):foo.sml]
[library $smlnj/compiler/current.cm is stable]
[library $smlnj/compiler/amd64.cm is stable]
[library $smlnj/viscomp/basics.cm is stable]
[library $smlnj/viscomp/amd64.cm is stable]
[library $smlnj/viscomp/core.cm is stable]
[library $smlnj/MLRISC/MLRISC.cm is stable]
[library $SMLNJ-MLRISC/MLRISC.cm is stable]
[library $smlnj-lib.cm(=$SMLNJ-LIB/Util)/smlnj-lib.cm is stable]
[library $Graphs.cm(=$SMLNJ-MLRISC)/Graphs.cm is stable]
[library $compiler/(core.cm):MiscUtil/const-arith/sources.cm is stable]
[library $smlnj/smlnj-lib/controls-lib.cm is stable]
[library $SMLNJ-LIB/Controls/controls-lib.cm is stable]
[library $smlnj/MLRISC/Lib.cm is stable]
[library $SMLNJ-MLRISC/Lib.cm is stable]
[library $smlnj/viscomp/debugprof.cm is stable]
[library $smlnj/viscomp/elabdata.cm is stable]
[library $smlnj/smlnj-lib/pp-lib.cm is stable]
[library $SMLNJ-LIB/PP/pp-lib.cm is stable]
[library $html-lib.cm(=$SMLNJ-LIB/HTML)/html-lib.cm is stable]
[library $smlnj/viscomp/execute.cm is stable]
[library $smlnj/viscomp/parser.cm is stable]
[library $smlnj/viscomp/elaborate.cm is stable]
[library $smlnj/MLRISC/AMD64.cm is stable]
[library $SMLNJ-MLRISC/AMD64.cm is stable]
Error: Compiler bug: UnpickMod: stub lookup failed for environment in $SMLNJ-MLRISC/AMD64.cm@500608(../amd64/c-calls/amd64-svid.sml): m = (6, functor AMD64SVID_CCalls), i = <moduleId>","--- foo.sml ---

structure Foo =
struct
  val foo = Compiler.version
end;

--- foo.cm ---

Library

  source(-)

is

  $/basis.cm
  $smlnj/cm.cm
  $smlnj/compiler.cm
  $smlnj/compiler/compiler.cm

  foo.sml
"," *** 2019-12-21 12:59 --- John Reppy --- This is the same as bug #232."
242,3,"Deleted",3,142,"Bug Submitter",100,"Nobody","2019-12-21 20:07","2019-12-21 20:14","2019-12-21 20:14","Compiler bug: PPObj: ppFields in ppval.sml","Submitted via web form by Alfred Delio <montana909@charter.net>
",0,0,0,"None","None","None","Invalid","None","","","","","",""," *** 2019-12-21 20:14 --- John Reppy --- Incomplete; see 244. *** 2019-12-21 20:13 --- John Reppy --- Incomplete; see 244."
243,3,"Deleted",3,142,"Bug Submitter",100,"Nobody","2019-12-21 20:07","2019-12-21 20:13","2019-12-21 20:13","Compiler bug: PPObj: ppFields in ppval.sml","Submitted via web form by Alfred Delio <montana909@charter.net>
",0,0,0,"x86","MacOS X","Basis Library","Invalid","Cosmetic","10.14.6","Standard ML of New Jersey (64-bit) v110.96 [built:","polymorphic fun definition","","- val pp = pairself 4.0;
Error: Compiler bug: PPObj: ppFields in ppval.sml","fun pairself x = (x,x)

pairself 4.0"," *** 2019-12-21 20:13 --- John Reppy --- Incomplete; see 244."
244,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2019-12-21 20:08","2019-12-23 16:08","2019-12-23 16:08","Compiler bug: PPObj: ppFields in ppval.sml","Submitted via web form by Alfred Delio <montana909@charter.net>
",0,0,0,"x86","MacOS X","Compiler","Fixed","Minor","10.14.6","110.96 [64]","polymorphic fun definition","","- val pp = pairself 4.0;
Error: Compiler bug: PPObj: ppFields in ppval.sml","fun pairself x = (x,x)

pairself 4.0"," *** 2019-12-23 16:08 --- John Reppy --- Fixed for 110.97.  The code generator was using the wrong length tag for raw64 records on 64-bit machines (twice the length). *** 2019-12-21 20:12 --- John Reppy --- This bug was reported three times (242, 243, and 244).  I removed the other two reports, because they were incomplete."
245,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-01-09 13:05","2020-01-14 09:36","2020-02-27 13:41","Lazy data types result in Compiler Bug error","Use of lazy datatypes in SMLNJ 110.96 results in a Compiler Bug error.  This
happens with both the 32-bit and 64-bit versions.  This doesn't appear to be a
problem with 110.85.

Submitted via web form by Norman Danner <ndanner@wesleyan.edu>
",0,0,0,"x86","Linux","Compiler","Fixed","Minor","Debian 10","110.96","","","$ /opt/smlnj-110.96/bin/sml -32
Standard ML of New Jersey (32-bit) v110.96 [built: Wed Jan 08 13:23:06 2020]
- Control.lazysml := true ;
[autoloading]
...
[autoloading done]
val it = () : unit
- open Lazy ;
[autoloading]
[autoloading done]
opening Lazy

  datatype 'a susp = $ of 'a
- datatype lazy 'a stream = Cons of 'a * 'a stream ;
datatype 'a stream! = Cons of 'a * 'a stream! susp
type 'a stream = 'a stream! susp
- val rec lazy ones = Cons(1, ones) ;
Error: Compiler bug: CoreAccess: getVar
-


$ /opt/smlnj-110.96/bin/sml -64
Standard ML of New Jersey (64-bit) v110.96 [built: Wed Jan 08 13:23:55 2020]
- Control.lazysml := true ;
[autoloading]
...
[autoloading done]
val it = () : unit
- open Lazy ;
[autoloading]
[autoloading done]
opening Lazy

  datatype 'a susp = $ of 'a
- datatype lazy 'a stream = Cons of 'a * 'a stream ;
datatype 'a stream! = Cons of 'a * 'a stream! susp
type 'a stream = 'a stream! susp
- val rec lazy ones = Cons(1, ones) ;
Error: Compiler bug: CoreAccess: getVar


$ /opt/smlnj-110.85/bin/sml
Standard ML of New Jersey v110.85 [built: Mon Feb 25 15:10:48 2019]
- Control.lazysml := true ;
[autoloading]
...
[autoloading done]
val it = () : unit
- open Lazy ;
[autoloading]
[autoloading done]
opening Lazy

  datatype 'a susp = $ of 'a
- datatype lazy 'a stream = Cons of 'a * 'a stream ;
datatype 'a stream! = Cons of 'a * 'a stream! susp
type 'a stream = 'a stream! susp
- val rec lazy ones = Cons(1, ones) ;
val ones = $$ : int stream! susp
-

","Control.lazysml := true ;
open Lazy ;
datatype lazy 'a stream = Cons of 'a * 'a stream ;
val rec lazy ones = Cons(1, ones) ;
"," *** 2020-02-27 13:41 --- John Reppy --- Also reported as bug #249 *** 2020-01-14 09:36 --- John Reppy --- The problem was that some symbols were dropped from the _Core structure, which broke the translation of the lazy features (and also profiling)."
246,1,"Open",3,142,"Bug Submitter",106,"David MacQueen","2020-01-31 11:37","","2020-04-24 19:55","Confusing error message about ""partially applied functor""","When there is a type error in a functor definition,
where the functor is then applied to produce a structure,
there is a confusing error message about the functor
application:

  Error: structure A defined by partially applied functor

Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Compiler","None","Cosmetic","","110.96","modules","","- local
=   functor F() : sig val x : int end = struct val x = ""abs"" end
= in
=   structure A = F()
= end;
stdIn:2.11-2.63 Error: value type in structure does not match signature spec
    name: x
  spec:   int
  actual: string
stdIn:4.17-4.20 Error: structure A defined by partially applied functor
","local
  functor F() : sig val x : int end = struct val x = ""abs"" end
in
  structure A = F()
end;"," *** 2020-04-24 19:55 --- David MacQueen --- The problem is that the check for a partially applied functor in a structure declaration (around line 1254 in elabmod.sml) is inaccurate when the functor declaration produces an error.  A proper fix will require a somewhat delicate propagation of ERROR values (ERRORstr and ERRORfct) during module elaboration.  The propagation needs to be more thorough, but not so aggressive that type checking is left out in other parts of the structures with bogus components."
247,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-02-07 17:01","2020-04-02 14:14","2020-04-02 14:14","@SMLVersion should report 64/32 bit","I'd like to have autoconf check for the version of SML/NJ
to ensure that when I run `sml`, it defaults to say 64-bit.
Currently, `sml @SMLVersion` does not report what the default
version is, it seems that's only available when you start the REPL?
Submitted via web form by Kavon Farvardin <kavon@farvard.in>
",0,0,0,"None","Generic Unix","Compiler","Fixed","Cosmetic","","110.96","64-bit, ergonomics","","",""," *** 2020-04-02 14:14 --- John Reppy --- Instead of modifying the behavior of the @SMLversion flag, I have added a new flag (@SMLwordsize) that prints either ""32"" or ""64"", depending on the current word size."
248,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-02-21 06:56","2020-02-21 08:07","2020-02-21 08:07","Compiler bug: PPObj: ppFields in ppval.sml","Error: Compiler bug: PPObj: ppFields in ppval.sml
Submitted via web form by Albert <albertqaeda@yahoo.com>
",0,0,0,"x86","Linux","Compiler","Fixed","Major","Linux Mint 19.3","110.96","","","Standard ML of New Jersey (64-bit) v110.96 [built: Thu Feb 20 08:33:01 2020]
- fun neg (x, y) : (real * real) = (~x, ~y);
val neg = fn : real * real -> real * real
- neg (1.2, 3.4);
Error: Compiler bug: PPObj: ppFields in ppval.sml
- ","fun neg (x, y) : (real * real) = (~x, ~y);"," *** 2020-02-21 08:07 --- John Reppy --- This bug is a duplicate of #244"
249,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-02-27 13:33","2020-02-27 13:42","2020-02-27 13:42","Lazy Recursive Value to generate a infinite data stream","Unable to construct a lazy recursive value for an infinite data stream.

Put same program into an online SML Compiler (110.78) and it executed correctly.
Additional comments:
N/A

Fix:
I wish I knew!

Submitted via web form by Ryan Steele <rsteele2@andrew.cmu.edu>
",0,0,0,"x86","Linux","Compiler","Fixed","Major","Arch Linux 5.5.5","110.95","lazy evaluation","","rmsteele@Arch:~$ sml < streams.sml
Standard ML of New Jersey (64-bit) v110.95 [built: Mon Dec 02 11:08:50 2019]
- [autoloading]
[library $smlnj/compiler/current.cm is stable]
[library $smlnj/compiler/amd64.cm is stable]
[library $smlnj/viscomp/core.cm is stable]
[library $smlnj/viscomp/basics.cm is stable]
[library $smlnj/viscomp/elabdata.cm is stable]
[library $smlnj/viscomp/elaborate.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[library $compiler/(core.cm):MiscUtil/const-arith/sources.cm is stable]
[library $smlnj/MLRISC/Lib.cm is stable]
[library $SMLNJ-MLRISC/Lib.cm is stable]
[library $smlnj/MLRISC/Control.cm is stable]
[library $SMLNJ-MLRISC/Control.cm is stable]
[library $controls-lib.cm(=$SMLNJ-LIB/Controls)/controls-lib.cm is stable]
[library $smlnj-lib.cm(=$SMLNJ-LIB/Util)/smlnj-lib.cm is stable]
[library $smlnj/smlnj-lib/controls-lib.cm is stable]
[autoloading done]
val it = () : unit
val it = () : unit
val it = () : unit
[autoloading]
[autoloading done]
opening Lazy

  datatype 'a susp = $ of 'a
datatype 'a stream! = Cons of 'a * 'a stream! susp
type 'a stream = 'a stream! susp
Error: Compiler bug: CoreAccess: getVar
- ","Control.lazysml := true;
open Lazy;
datatype lazy 'a stream = Cons of 'a * 'a stream;
val rec lazy ones = Cons (1, ones);

(* additional code... *)"," *** 2020-02-27 13:42 --- John Reppy --- This is the same as bug #245, which has been fixed for 110.97."
250,1,"Open",3,142,"Bug Submitter",105,"Matthias Blume","2020-03-07 17:39","","2020-03-26 12:46","Runtime error when CM compiles a program that calls CM.sources","Here is a GitHub project with code and instructions for reproducing the bug: https://github.com/alexcoplan/smlnj-bug

It is fairly simple to reproduce. Simply compiling an SML program using CM where the program calls CM.sources
is sufficient to reproduce the bug.
Submitted via web form by Alex Coplan <alex@coplan.io>
",0,0,0,"None","Generic Unix","CM","None","Major","","110.96","""cm""","","","",""
251,1,"Open",3,142,"Bug Submitter",103,"John Reppy","2020-03-18 11:29","","2020-03-26 12:45","Windows installer package is not marked as all users","Despite installing to a system-wide location (%ProgramFiles%), the MSI package does not have the ALLUSERS property set. This makes it impossible to uninstall SML from the system if you are running as a different user than the one who installed the software.
A workaround is to add the property manually on the command line (msiexec /i ….msi ALLUSERS=1)
Submitted via web form by Bruno Robert Pitrus <brunopitrus@hotmail.com>
",0,0,0,"x86","Windows Vista","Installer","None","Major","","110.96","","","","",""
252,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-03-18 18:09","2020-03-19 15:34","2020-03-19 15:34","Boyer Benchmark Compile Failure","Unable to compile the Boyer benchmark with 110.96 x86-64.
It works with 110.96 32-bit.

Some changes were made to the original Boyer benchmark to
be compatible with Manticore, but otherwise this same code
works fine with MLton.

It appears to be a problem with literals based on the error
message?

Submitted via web form by Kavon Farvardin <kavon@farvard.in>
",0,0,0,"x86","Generic Unix","Compiler","Fixed","Minor","Ubuntu 18.04","110.96","literals","","I get two different error messages based on how I try to invoke
the compiler:

➤ ~/bin/smlnj64/bin/sml boyer_bug.sml
# omitted text
/home/kavon/bin/smlnj64/bin/sml: Fatal error -- bogus overflow fault: pc = 0x7f07d6fbd869, sig = 11

➤ echo ""SMLofNJ.exportFn(\""smlnj\"", Main.main);"" | ~/bin/smlnj64/bin/sml bug.cm
# omitted text
/home/kavon/bin/smlnj64/bin/sml: Fatal error -- BuildLiterals: bogus literal opcode #14 @ 5584
","
structure Ref = struct

  type 'a ref = 'a ref

  fun new x = ref x
  fun get x = !x
  fun set (x, y) = (x := y)
  fun pointerEq (x : 'a ref, y : 'a ref) = (x = y)

end
(* From the SML/NJ benchmark suite. *)
(* terms.sml:
 *
 * Manipulations over terms
 *)

(* signature TERMS =
  sig
    type head;
    datatype term =
      Var of int
    | Prop of head * term list;
    datatype binding = Bind of int * term;
    val get: string -> head
    and headname: head -> string
    and add_lemma: term -> unit
    and apply_subst: binding list -> term -> term
    and rewrite: term -> term
  end; *)

structure Terms (* :TERMS *) =
  struct

    datatype term
      = Var of int
      | Prop of ((* name *) string * (* props *) (term * term) list Ref.ref ) * term list

    type head = ((* name *) string * (* props *) (term * term) list Ref.ref )

    val lemmas = Ref.new ([] : head list)

    (* manual implementation of polymorphic equality operation over terms *)
    fun termEq x = (case x
      of (Var a, Var b) => (a = b)
       | (Prop(head1, rest1), Prop(head2, rest2)) =>
            headEq (head1, head2) andalso ListPair.allEq termEq (rest1, rest2)
       | _ => false
       (* end case *))

    and headEq ((n1, refL1) : head, (n2, refL2) : head) =
      (* NOTE: polymorphic equality of refs is via _pointer comparison_ *)
      n1 = n2 andalso Ref.pointerEq (refL1, refL2)

(* replacement for property lists *)

    fun headname (name, _) = name;

fun get name =
  let fun get_rec (hd1::hdl) =
        let val (n, _) = hd1 in
          if n = name
            then hd1
            else get_rec hdl
        end
        | get_rec nil =
      let val entry = (name, Ref.new []) in
        Ref.set (lemmas, entry :: (Ref.get lemmas));
        entry
      end
  in
    get_rec (Ref.get lemmas)
  end
;

fun add_lemma term = (case term
  of Prop(_, left :: right :: nil) => (case left
    of Prop((_, r),_) =>
      Ref.set (r, (left, right) :: Ref.get r)
  (* end cases *)))
;

(* substitutions *)

(* Manticore's case-expansion pass currently doesn't support any sort of pattern
   matching in a 'handle' expression beyond the wildcard pattern!
   However, for correctness we need to know _which_ exception was raised, so
   we have hacked it in with a global ref like C's errno *)

val NoExn = 0
val UnifyExn = 1
val FailureExn = 2
val errno : int Ref.ref = Ref.new NoExn

exception Something;

fun raiseExn num = (Ref.set (errno, num); raise Something)
fun tryCatch exnNum (f, alt) = f() handle _ =>
                                      if (Ref.get errno) = exnNum
                                        then (Ref.set (errno, NoExn) ; alt())
                                        else (raise Something)



datatype binding = Bind of int * term

fun get_binding (v : int) =
  let fun get_rec nil = raiseExn FailureExn
        | get_rec (Bind(w,t)::rest) =
            if v = w then t else get_rec rest
  in
    get_rec
  end
;

fun apply_subst alist =
  let
    fun as_rec term = (case term
      of Var v => tryCatch FailureExn (fn () => get_binding v alist, fn () => term)
       | Prop (head,argl) => Prop (head, map as_rec argl)
      (* end case *))

  in
    as_rec
  end
;

fun unify (term1, term2) = unify1 (term1, term2, [])
and unify1 (term1, term2, unify_subst) =
 (case term2 of
    Var v =>
      tryCatch FailureExn (
          fn () => if termEq (get_binding v unify_subst,  term1)
                    then unify_subst
                    else raiseExn UnifyExn,
          fn () => Bind(v,term1)::unify_subst
      )
  | Prop (head2,argl2) =>
      case term1 of
         Var _ => raiseExn UnifyExn
       | Prop (head1,argl1) =>
           if headEq (head1, head2) then unify1_lst (argl1, argl2, unify_subst)
                          else raiseExn UnifyExn)
and unify1_lst ([], [], unify_subst) = unify_subst
  | unify1_lst (h1::r1, h2::r2, unify_subst) =
      unify1_lst(r1, r2, unify1(h1, h2, unify_subst))
  | unify1_lst _ = raiseExn UnifyExn
;

fun rewrite term = (case term
  of Var _ => term
   | Prop (head, argl) =>
      let val (_, p) = head in
        rewrite_with_lemmas (Prop (head, map rewrite argl),  Ref.get p)
      end
  (* end case *))

and rewrite_with_lemmas (term, []) = term
  | rewrite_with_lemmas (term, (t1,t2)::rest) =
      tryCatch UnifyExn (
          fn () => rewrite (apply_subst (unify (term, t1)) t2),
          fn () => rewrite_with_lemmas (term, rest)
       )

;
end;
(* rules.sml:
 *)

structure Rules =
  struct

  structure T = Terms
  val get = T.get
  val add_lemma = T.add_lemma

    datatype cterm = CVar of int | CProp of string * cterm list;

    fun cterm_to_term (CVar v) = T.Var v
      | cterm_to_term (CProp(p, l)) = T.Prop(get p, map cterm_to_term l)

    fun add t = add_lemma (cterm_to_term t)

    val _ = (
add (CProp
(""equal"",
 [CProp (""compile"",[CVar 5]),
  CProp
  (""reverse"",
   [CProp (""codegen"",[CProp (""optimize"",[CVar 5]), CProp (""nil"",[])])])]));
add (CProp
(""equal"",
 [CProp (""eqp"",[CVar 23, CVar 24]),
  CProp (""equal"",[CProp (""fix"",[CVar 23]), CProp (""fix"",[CVar 24])])]));
add (CProp
(""equal"",
 [CProp (""gt"",[CVar 23, CVar 24]), CProp (""lt"",[CVar 24, CVar 23])]));
add (CProp
(""equal"",
 [CProp (""le"",[CVar 23, CVar 24]), CProp (""ge"",[CVar 24, CVar 23])]));
add (CProp
(""equal"",
 [CProp (""ge"",[CVar 23, CVar 24]), CProp (""le"",[CVar 24, CVar 23])]));
add (CProp
(""equal"",
 [CProp (""boolean"",[CVar 23]),
  CProp
  (""or"",
   [CProp (""equal"",[CVar 23, CProp (""true"",[])]),
    CProp (""equal"",[CVar 23, CProp (""false"",[])])])]));
add (CProp
(""equal"",
 [CProp (""iff"",[CVar 23, CVar 24]),
  CProp
  (""and"",
   [CProp (""implies"",[CVar 23, CVar 24]),
    CProp (""implies"",[CVar 24, CVar 23])])]));
add (CProp
(""equal"",
 [CProp (""even1"",[CVar 23]),
  CProp
  (""if"",
   [CProp (""zerop"",[CVar 23]), CProp (""true"",[]),
    CProp (""odd"",[CProp (""sub1"",[CVar 23])])])]));
add (CProp
(""equal"",
 [CProp (""countps_"",[CVar 11, CVar 15]),
  CProp (""countps_loop"",[CVar 11, CVar 15, CProp (""zero"",[])])]));
add (CProp
(""equal"",
 [CProp (""fact_"",[CVar 8]),
  CProp (""fact_loop"",[CVar 8, CProp (""one"",[])])]));
add (CProp
(""equal"",
 [CProp (""reverse_"",[CVar 23]),
  CProp (""reverse_loop"",[CVar 23, CProp (""nil"",[])])]));
add (CProp
(""equal"",
 [CProp (""divides"",[CVar 23, CVar 24]),
  CProp (""zerop"",[CProp (""remainder"",[CVar 24, CVar 23])])]));
add (CProp
(""equal"",
 [CProp (""assume_true"",[CVar 21, CVar 0]),
  CProp (""cons"",[CProp (""cons"",[CVar 21, CProp (""true"",[])]), CVar 0])]));
add (CProp
(""equal"",
 [CProp (""assume_false"",[CVar 21, CVar 0]),
  CProp (""cons"",[CProp (""cons"",[CVar 21, CProp (""false"",[])]), CVar 0])]));
add (CProp
(""equal"",
 [CProp (""tautology_checker"",[CVar 23]),
  CProp (""tautologyp"",[CProp (""normalize"",[CVar 23]), CProp (""nil"",[])])]));
add (CProp
(""equal"",
 [CProp (""falsify"",[CVar 23]),
  CProp (""falsify1"",[CProp (""normalize"",[CVar 23]), CProp (""nil"",[])])]));
add (CProp
(""equal"",
 [CProp (""prime"",[CVar 23]),
  CProp
  (""and"",
   [CProp (""not"",[CProp (""zerop"",[CVar 23])]),
    CProp
    (""not"",
     [CProp (""equal"",[CVar 23, CProp (""add1"",[CProp (""zero"",[])])])]),
    CProp (""prime1"",[CVar 23, CProp (""sub1"",[CVar 23])])])]));
add (CProp
(""equal"",
 [CProp (""and"",[CVar 15, CVar 16]),
  CProp
  (""if"",
   [CVar 15,
    CProp (""if"",[CVar 16, CProp (""true"",[]), CProp (""false"",[])]),
    CProp (""false"",[])])]));
add (CProp
(""equal"",
 [CProp (""or"",[CVar 15, CVar 16]),
  CProp
  (""if"",
   [CVar 15, CProp (""true"",[]),
    CProp (""if"",[CVar 16, CProp (""true"",[]), CProp (""false"",[])]),
    CProp (""false"",[])])]));
add (CProp
(""equal"",
 [CProp (""not"",[CVar 15]),
  CProp (""if"",[CVar 15, CProp (""false"",[]), CProp (""true"",[])])]));
add (CProp
(""equal"",
 [CProp (""implies"",[CVar 15, CVar 16]),
  CProp
  (""if"",
   [CVar 15,
    CProp (""if"",[CVar 16, CProp (""true"",[]), CProp (""false"",[])]),
    CProp (""true"",[])])]));
add (CProp
(""equal"",
 [CProp (""fix"",[CVar 23]),
  CProp (""if"",[CProp (""numberp"",[CVar 23]), CVar 23, CProp (""zero"",[])])]));
add (CProp
(""equal"",
 [CProp (""if"",[CProp (""if"",[CVar 0, CVar 1, CVar 2]), CVar 3, CVar 4]),
  CProp
  (""if"",
   [CVar 0, CProp (""if"",[CVar 1, CVar 3, CVar 4]),
    CProp (""if"",[CVar 2, CVar 3, CVar 4])])]));
add (CProp
(""equal"",
 [CProp (""zerop"",[CVar 23]),
  CProp
  (""or"",
   [CProp (""equal"",[CVar 23, CProp (""zero"",[])]),
    CProp (""not"",[CProp (""numberp"",[CVar 23])])])]));
add (CProp
(""equal"",
 [CProp (""plus"",[CProp (""plus"",[CVar 23, CVar 24]), CVar 25]),
  CProp (""plus"",[CVar 23, CProp (""plus"",[CVar 24, CVar 25])])]));
add (CProp
(""equal"",
 [CProp (""equal"",[CProp (""plus"",[CVar 0, CVar 1]), CProp (""zero"",[])]),
  CProp (""and"",[CProp (""zerop"",[CVar 0]), CProp (""zerop"",[CVar 1])])]));
add (CProp
(""equal"",[CProp (""difference"",[CVar 23, CVar 23]), CProp (""zero"",[])]));
add (CProp
(""equal"",
 [CProp
  (""equal"",
   [CProp (""plus"",[CVar 0, CVar 1]), CProp (""plus"",[CVar 0, CVar 2])]),
  CProp (""equal"",[CProp (""fix"",[CVar 1]), CProp (""fix"",[CVar 2])])]));
add (CProp
(""equal"",
 [CProp
  (""equal"",[CProp (""zero"",[]), CProp (""difference"",[CVar 23, CVar 24])]),
  CProp (""not"",[CProp (""gt"",[CVar 24, CVar 23])])]));
add (CProp
(""equal"",
 [CProp (""equal"",[CVar 23, CProp (""difference"",[CVar 23, CVar 24])]),
  CProp
  (""and"",
   [CProp (""numberp"",[CVar 23]),
    CProp
    (""or"",
     [CProp (""equal"",[CVar 23, CProp (""zero"",[])]),
      CProp (""zerop"",[CVar 24])])])]));
add (CProp
(""equal"",
 [CProp
  (""meaning"",
   [CProp (""plus_tree"",[CProp (""append"",[CVar 23, CVar 24])]), CVar 0]),
  CProp
  (""plus"",
   [CProp (""meaning"",[CProp (""plus_tree"",[CVar 23]), CVar 0]),
    CProp (""meaning"",[CProp (""plus_tree"",[CVar 24]), CVar 0])])]));
add (CProp
(""equal"",
 [CProp
  (""meaning"",
   [CProp (""plus_tree"",[CProp (""plus_fringe"",[CVar 23])]), CVar 0]),
  CProp (""fix"",[CProp (""meaning"",[CVar 23, CVar 0])])]));
add (CProp
(""equal"",
 [CProp (""append"",[CProp (""append"",[CVar 23, CVar 24]), CVar 25]),
  CProp (""append"",[CVar 23, CProp (""append"",[CVar 24, CVar 25])])]));
add (CProp
(""equal"",
 [CProp (""reverse"",[CProp (""append"",[CVar 0, CVar 1])]),
  CProp
  (""append"",[CProp (""reverse"",[CVar 1]), CProp (""reverse"",[CVar 0])])]));
add (CProp
(""equal"",
 [CProp (""times"",[CVar 23, CProp (""plus"",[CVar 24, CVar 25])]),
  CProp
  (""plus"",
   [CProp (""times"",[CVar 23, CVar 24]),
    CProp (""times"",[CVar 23, CVar 25])])]));
add (CProp
(""equal"",
 [CProp (""times"",[CProp (""times"",[CVar 23, CVar 24]), CVar 25]),
  CProp (""times"",[CVar 23, CProp (""times"",[CVar 24, CVar 25])])]));
add (CProp
(""equal"",
 [CProp
  (""equal"",[CProp (""times"",[CVar 23, CVar 24]), CProp (""zero"",[])]),
  CProp (""or"",[CProp (""zerop"",[CVar 23]), CProp (""zerop"",[CVar 24])])]));
add (CProp
(""equal"",
 [CProp (""exec"",[CProp (""append"",[CVar 23, CVar 24]), CVar 15, CVar 4]),
  CProp
  (""exec"",[CVar 24, CProp (""exec"",[CVar 23, CVar 15, CVar 4]), CVar 4])]));
add (CProp
(""equal"",
 [CProp (""mc_flatten"",[CVar 23, CVar 24]),
  CProp (""append"",[CProp (""flatten"",[CVar 23]), CVar 24])]));
add (CProp
(""equal"",
 [CProp (""member"",[CVar 23, CProp (""append"",[CVar 0, CVar 1])]),
  CProp
  (""or"",
   [CProp (""member"",[CVar 23, CVar 0]),
    CProp (""member"",[CVar 23, CVar 1])])]));
add (CProp
(""equal"",
 [CProp (""member"",[CVar 23, CProp (""reverse"",[CVar 24])]),
  CProp (""member"",[CVar 23, CVar 24])]));
add (CProp
(""equal"",
 [CProp (""length"",[CProp (""reverse"",[CVar 23])]),
  CProp (""length"",[CVar 23])]));
add (CProp
(""equal"",
 [CProp (""member"",[CVar 0, CProp (""intersect"",[CVar 1, CVar 2])]),
  CProp
  (""and"",
   [CProp (""member"",[CVar 0, CVar 1]), CProp (""member"",[CVar 0, CVar 2])])]));
add (CProp
(""equal"",[CProp (""nth"",[CProp (""zero"",[]), CVar 8]), CProp (""zero"",[])]));
add (CProp
(""equal"",
 [CProp (""exp"",[CVar 8, CProp (""plus"",[CVar 9, CVar 10])]),
  CProp
  (""times"",
   [CProp (""exp"",[CVar 8, CVar 9]), CProp (""exp"",[CVar 8, CVar 10])])]));
add (CProp
(""equal"",
 [CProp (""exp"",[CVar 8, CProp (""times"",[CVar 9, CVar 10])]),
  CProp (""exp"",[CProp (""exp"",[CVar 8, CVar 9]), CVar 10])]));
add (CProp
(""equal"",
 [CProp (""reverse_loop"",[CVar 23, CVar 24]),
  CProp (""append"",[CProp (""reverse"",[CVar 23]), CVar 24])]));
add (CProp
(""equal"",
 [CProp (""reverse_loop"",[CVar 23, CProp (""nil"",[])]),
  CProp (""reverse"",[CVar 23])]));
add (CProp
(""equal"",
 [CProp (""count_list"",[CVar 25, CProp (""sort_lp"",[CVar 23, CVar 24])]),
  CProp
  (""plus"",
   [CProp (""count_list"",[CVar 25, CVar 23]),
    CProp (""count_list"",[CVar 25, CVar 24])])]));
add (CProp
(""equal"",
 [CProp
  (""equal"",
   [CProp (""append"",[CVar 0, CVar 1]), CProp (""append"",[CVar 0, CVar 2])]),
  CProp (""equal"",[CVar 1, CVar 2])]));
add (CProp
(""equal"",
 [CProp
  (""plus"",
   [CProp (""remainder"",[CVar 23, CVar 24]),
    CProp (""times"",[CVar 24, CProp (""quotient"",[CVar 23, CVar 24])])]),
  CProp (""fix"",[CVar 23])]));
add (CProp
(""equal"",
 [CProp
  (""power_eval"",[CProp (""big_plus"",[CVar 11, CVar 8, CVar 1]), CVar 1]),
  CProp (""plus"",[CProp (""power_eval"",[CVar 11, CVar 1]), CVar 8])]));
add (CProp
(""equal"",
 [CProp
  (""power_eval"",
   [CProp (""big_plus"",[CVar 23, CVar 24, CVar 8, CVar 1]), CVar 1]),
  CProp
  (""plus"",
   [CVar 8,
    CProp
    (""plus"",
     [CProp (""power_eval"",[CVar 23, CVar 1]),
      CProp (""power_eval"",[CVar 24, CVar 1])])])]));
add (CProp
(""equal"",
 [CProp (""remainder"",[CVar 24, CProp (""one"",[])]), CProp (""zero"",[])]));
add (CProp
(""equal"",
 [CProp (""lt"",[CProp (""remainder"",[CVar 23, CVar 24]), CVar 24]),
  CProp (""not"",[CProp (""zerop"",[CVar 24])])]));
add (CProp
(""equal"",[CProp (""remainder"",[CVar 23, CVar 23]), CProp (""zero"",[])]));
add (CProp
(""equal"",
 [CProp (""lt"",[CProp (""quotient"",[CVar 8, CVar 9]), CVar 8]),
  CProp
  (""and"",
   [CProp (""not"",[CProp (""zerop"",[CVar 8])]),
    CProp
    (""or"",
     [CProp (""zerop"",[CVar 9]),
      CProp (""not"",[CProp (""equal"",[CVar 9, CProp (""one"",[])])])])])]));
add (CProp
(""equal"",
 [CProp (""lt"",[CProp (""remainder"",[CVar 23, CVar 24]), CVar 23]),
  CProp
  (""and"",
   [CProp (""not"",[CProp (""zerop"",[CVar 24])]),
    CProp (""not"",[CProp (""zerop"",[CVar 23])]),
    CProp (""not"",[CProp (""lt"",[CVar 23, CVar 24])])])]));
add (CProp
(""equal"",
 [CProp (""power_eval"",[CProp (""power_rep"",[CVar 8, CVar 1]), CVar 1]),
  CProp (""fix"",[CVar 8])]));
add (CProp
(""equal"",
 [CProp
  (""power_eval"",
   [CProp
    (""big_plus"",
     [CProp (""power_rep"",[CVar 8, CVar 1]),
      CProp (""power_rep"",[CVar 9, CVar 1]), CProp (""zero"",[]),
      CVar 1]),
    CVar 1]),
  CProp (""plus"",[CVar 8, CVar 9])]));
add (CProp
(""equal"",
 [CProp (""gcd"",[CVar 23, CVar 24]), CProp (""gcd"",[CVar 24, CVar 23])]));
add (CProp
(""equal"",
 [CProp (""nth"",[CProp (""append"",[CVar 0, CVar 1]), CVar 8]),
  CProp
  (""append"",
   [CProp (""nth"",[CVar 0, CVar 8]),
    CProp
    (""nth"",
     [CVar 1, CProp (""difference"",[CVar 8, CProp (""length"",[CVar 0])])])])]));
add (CProp
(""equal"",
 [CProp (""difference"",[CProp (""plus"",[CVar 23, CVar 24]), CVar 23]),
  CProp (""fix"",[CVar 24])]));
add (CProp
(""equal"",
 [CProp (""difference"",[CProp (""plus"",[CVar 24, CVar 23]), CVar 23]),
  CProp (""fix"",[CVar 24])]));
add (CProp
(""equal"",
 [CProp
  (""difference"",
   [CProp (""plus"",[CVar 23, CVar 24]), CProp (""plus"",[CVar 23, CVar 25])]),
  CProp (""difference"",[CVar 24, CVar 25])]));
add (CProp
(""equal"",
 [CProp (""times"",[CVar 23, CProp (""difference"",[CVar 2, CVar 22])]),
  CProp
  (""difference"",
   [CProp (""times"",[CVar 2, CVar 23]),
    CProp (""times"",[CVar 22, CVar 23])])]));
add (CProp
(""equal"",
 [CProp (""remainder"",[CProp (""times"",[CVar 23, CVar 25]), CVar 25]),
  CProp (""zero"",[])]));
add (CProp
(""equal"",
 [CProp
  (""difference"",
   [CProp (""plus"",[CVar 1, CProp (""plus"",[CVar 0, CVar 2])]), CVar 0]),
  CProp (""plus"",[CVar 1, CVar 2])]));
add (CProp
(""equal"",
 [CProp
  (""difference"",
   [CProp (""add1"",[CProp (""plus"",[CVar 24, CVar 25])]), CVar 25]),
  CProp (""add1"",[CVar 24])]));
add (CProp
(""equal"",
 [CProp
  (""lt"",
   [CProp (""plus"",[CVar 23, CVar 24]), CProp (""plus"",[CVar 23, CVar 25])]),
  CProp (""lt"",[CVar 24, CVar 25])]));
add (CProp
(""equal"",
 [CProp
  (""lt"",
   [CProp (""times"",[CVar 23, CVar 25]),
    CProp (""times"",[CVar 24, CVar 25])]),
  CProp
  (""and"",
   [CProp (""not"",[CProp (""zerop"",[CVar 25])]),
    CProp (""lt"",[CVar 23, CVar 24])])]));
add (CProp
(""equal"",
 [CProp (""lt"",[CVar 24, CProp (""plus"",[CVar 23, CVar 24])]),
  CProp (""not"",[CProp (""zerop"",[CVar 23])])]));
add (CProp
(""equal"",
 [CProp
  (""gcd"",
   [CProp (""times"",[CVar 23, CVar 25]),
    CProp (""times"",[CVar 24, CVar 25])]),
  CProp (""times"",[CVar 25, CProp (""gcd"",[CVar 23, CVar 24])])]));
add (CProp
(""equal"",
 [CProp (""value"",[CProp (""normalize"",[CVar 23]), CVar 0]),
  CProp (""value"",[CVar 23, CVar 0])]));
add (CProp
(""equal"",
 [CProp
  (""equal"",
   [CProp (""flatten"",[CVar 23]),
    CProp (""cons"",[CVar 24, CProp (""nil"",[])])]),
  CProp
  (""and"",
   [CProp (""nlistp"",[CVar 23]), CProp (""equal"",[CVar 23, CVar 24])])]));
add (CProp
(""equal"",
 [CProp (""listp"",[CProp (""gother"",[CVar 23])]),
  CProp (""listp"",[CVar 23])]));
add (CProp
(""equal"",
 [CProp (""samefringe"",[CVar 23, CVar 24]),
  CProp
  (""equal"",[CProp (""flatten"",[CVar 23]), CProp (""flatten"",[CVar 24])])]));
add (CProp
(""equal"",
 [CProp
  (""equal"",
   [CProp (""greatest_factor"",[CVar 23, CVar 24]), CProp (""zero"",[])]),
  CProp
  (""and"",
   [CProp
    (""or"",
     [CProp (""zerop"",[CVar 24]),
      CProp (""equal"",[CVar 24, CProp (""one"",[])])]),
    CProp (""equal"",[CVar 23, CProp (""zero"",[])])])]));
add (CProp
(""equal"",
 [CProp
  (""equal"",
   [CProp (""greatest_factor"",[CVar 23, CVar 24]), CProp (""one"",[])]),
  CProp (""equal"",[CVar 23, CProp (""one"",[])])]));
add (CProp
(""equal"",
 [CProp (""numberp"",[CProp (""greatest_factor"",[CVar 23, CVar 24])]),
  CProp
  (""not"",
   [CProp
    (""and"",
     [CProp
      (""or"",
       [CProp (""zerop"",[CVar 24]),
        CProp (""equal"",[CVar 24, CProp (""one"",[])])]),
      CProp (""not"",[CProp (""numberp"",[CVar 23])])])])]));
add (CProp
(""equal"",
 [CProp (""times_list"",[CProp (""append"",[CVar 23, CVar 24])]),
  CProp
  (""times"",
   [CProp (""times_list"",[CVar 23]), CProp (""times_list"",[CVar 24])])]));
add (CProp
(""equal"",
 [CProp (""prime_list"",[CProp (""append"",[CVar 23, CVar 24])]),
  CProp
  (""and"",
   [CProp (""prime_list"",[CVar 23]), CProp (""prime_list"",[CVar 24])])]));
add (CProp
(""equal"",
 [CProp (""equal"",[CVar 25, CProp (""times"",[CVar 22, CVar 25])]),
  CProp
  (""and"",
   [CProp (""numberp"",[CVar 25]),
    CProp
    (""or"",
     [CProp (""equal"",[CVar 25, CProp (""zero"",[])]),
      CProp (""equal"",[CVar 22, CProp (""one"",[])])])])]));
add (CProp
(""equal"",
 [CProp (""ge"",[CVar 23, CVar 24]),
  CProp (""not"",[CProp (""lt"",[CVar 23, CVar 24])])]));
add (CProp
(""equal"",
 [CProp (""equal"",[CVar 23, CProp (""times"",[CVar 23, CVar 24])]),
  CProp
  (""or"",
   [CProp (""equal"",[CVar 23, CProp (""zero"",[])]),
    CProp
    (""and"",
     [CProp (""numberp"",[CVar 23]),
      CProp (""equal"",[CVar 24, CProp (""one"",[])])])])]));
add (CProp
(""equal"",
 [CProp (""remainder"",[CProp (""times"",[CVar 24, CVar 23]), CVar 24]),
  CProp (""zero"",[])]));
add (CProp
(""equal"",
 [CProp (""equal"",[CProp (""times"",[CVar 0, CVar 1]), CProp (""one"",[])]),
  CProp
  (""and"",
   [CProp (""not"",[CProp (""equal"",[CVar 0, CProp (""zero"",[])])]),
    CProp (""not"",[CProp (""equal"",[CVar 1, CProp (""zero"",[])])]),
    CProp (""numberp"",[CVar 0]), CProp (""numberp"",[CVar 1]),
    CProp (""equal"",[CProp (""sub1"",[CVar 0]), CProp (""zero"",[])]),
    CProp (""equal"",[CProp (""sub1"",[CVar 1]), CProp (""zero"",[])])])]));
add (CProp
(""equal"",
 [CProp
  (""lt"",
   [CProp (""length"",[CProp (""delete"",[CVar 23, CVar 11])]),
    CProp (""length"",[CVar 11])]),
  CProp (""member"",[CVar 23, CVar 11])]));
add (CProp
(""equal"",
 [CProp (""sort2"",[CProp (""delete"",[CVar 23, CVar 11])]),
  CProp (""delete"",[CVar 23, CProp (""sort2"",[CVar 11])])]));
add (CProp (""equal"",[CProp (""dsort"",[CVar 23]), CProp (""sort2"",[CVar 23])]));
add (CProp
(""equal"",
 [CProp
  (""length"",
   [CProp
    (""cons"",
     [CVar 0,
      CProp
      (""cons"",
       [CVar 1,
        CProp
        (""cons"",
         [CVar 2,
          CProp
          (""cons"",
           [CVar 3,
            CProp (""cons"",[CVar 4, CProp (""cons"",[CVar 5, CVar 6])])])])])])])
  , CProp (""plus"",[CProp (""six"",[]), CProp (""length"",[CVar 6])])]));
add (CProp
(""equal"",
 [CProp
  (""difference"",
   [CProp (""add1"",[CProp (""add1"",[CVar 23])]), CProp (""two"",[])]),
  CProp (""fix"",[CVar 23])]));
add (CProp
(""equal"",
 [CProp
  (""quotient"",
   [CProp (""plus"",[CVar 23, CProp (""plus"",[CVar 23, CVar 24])]),
    CProp (""two"",[])]),
  CProp
  (""plus"",[CVar 23, CProp (""quotient"",[CVar 24, CProp (""two"",[])])])]));
add (CProp
(""equal"",
 [CProp (""sigma"",[CProp (""zero"",[]), CVar 8]),
  CProp
  (""quotient"",
   [CProp (""times"",[CVar 8, CProp (""add1"",[CVar 8])]), CProp (""two"",[])])]));
add (CProp
(""equal"",
 [CProp (""plus"",[CVar 23, CProp (""add1"",[CVar 24])]),
  CProp
  (""if"",
   [CProp (""numberp"",[CVar 24]),
    CProp (""add1"",[CProp (""plus"",[CVar 23, CVar 24])]),
    CProp (""add1"",[CVar 23])])]));
add (CProp
(""equal"",
 [CProp
  (""equal"",
   [CProp (""difference"",[CVar 23, CVar 24]),
    CProp (""difference"",[CVar 25, CVar 24])]),
  CProp
  (""if"",
   [CProp (""lt"",[CVar 23, CVar 24]),
    CProp (""not"",[CProp (""lt"",[CVar 24, CVar 25])]),
    CProp
    (""if"",
     [CProp (""lt"",[CVar 25, CVar 24]),
      CProp (""not"",[CProp (""lt"",[CVar 24, CVar 23])]),
      CProp (""equal"",[CProp (""fix"",[CVar 23]), CProp (""fix"",[CVar 25])])])])])
);
add (CProp
(""equal"",
 [CProp
  (""meaning"",
   [CProp (""plus_tree"",[CProp (""delete"",[CVar 23, CVar 24])]), CVar 0]),
  CProp
  (""if"",
   [CProp (""member"",[CVar 23, CVar 24]),
    CProp
    (""difference"",
     [CProp (""meaning"",[CProp (""plus_tree"",[CVar 24]), CVar 0]),
      CProp (""meaning"",[CVar 23, CVar 0])]),
    CProp (""meaning"",[CProp (""plus_tree"",[CVar 24]), CVar 0])])]));
add (CProp
(""equal"",
 [CProp (""times"",[CVar 23, CProp (""add1"",[CVar 24])]),
  CProp
  (""if"",
   [CProp (""numberp"",[CVar 24]),
    CProp
    (""plus"",
     [CVar 23, CProp (""times"",[CVar 23, CVar 24]),
      CProp (""fix"",[CVar 23])])])]));
add (CProp
(""equal"",
 [CProp (""nth"",[CProp (""nil"",[]), CVar 8]),
  CProp
  (""if"",[CProp (""zerop"",[CVar 8]), CProp (""nil"",[]), CProp (""zero"",[])])]));
add (CProp
(""equal"",
 [CProp (""last"",[CProp (""append"",[CVar 0, CVar 1])]),
  CProp
  (""if"",
   [CProp (""listp"",[CVar 1]), CProp (""last"",[CVar 1]),
    CProp
    (""if"",
     [CProp (""listp"",[CVar 0]),
      CProp (""cons"",[CProp (""car"",[CProp (""last"",[CVar 0])]), CVar 1]),
      CVar 1])])]));
add (CProp
(""equal"",
 [CProp (""equal"",[CProp (""lt"",[CVar 23, CVar 24]), CVar 25]),
  CProp
  (""if"",
   [CProp (""lt"",[CVar 23, CVar 24]),
    CProp (""equal"",[CProp (""true"",[]), CVar 25]),
    CProp (""equal"",[CProp (""false"",[]), CVar 25])])]));
add (CProp
(""equal"",
 [CProp (""assignment"",[CVar 23, CProp (""append"",[CVar 0, CVar 1])]),
  CProp
  (""if"",
   [CProp (""assignedp"",[CVar 23, CVar 0]),
    CProp (""assignment"",[CVar 23, CVar 0]),
    CProp (""assignment"",[CVar 23, CVar 1])])]));
add (CProp
(""equal"",
 [CProp (""car"",[CProp (""gother"",[CVar 23])]),
  CProp
  (""if"",
   [CProp (""listp"",[CVar 23]),
    CProp (""car"",[CProp (""flatten"",[CVar 23])]), CProp (""zero"",[])])]));
add (CProp
(""equal"",
 [CProp (""flatten"",[CProp (""cdr"",[CProp (""gother"",[CVar 23])])]),
  CProp
  (""if"",
   [CProp (""listp"",[CVar 23]),
    CProp (""cdr"",[CProp (""flatten"",[CVar 23])]),
    CProp (""cons"",[CProp (""zero"",[]), CProp (""nil"",[])])])]));
add (CProp
(""equal"",
 [CProp (""quotient"",[CProp (""times"",[CVar 24, CVar 23]), CVar 24]),
  CProp
  (""if"",
   [CProp (""zerop"",[CVar 24]), CProp (""zero"",[]),
    CProp (""fix"",[CVar 23])])]));
add (CProp
(""equal"",
 [CProp (""get"",[CVar 9, CProp (""set"",[CVar 8, CVar 21, CVar 12])]),
  CProp
  (""if"",
   [CProp (""eqp"",[CVar 9, CVar 8]), CVar 21,
    CProp (""get"",[CVar 9, CVar 12])])])))

  end; (* Rules *)

(* boyer.sml:
 *
 * Tautology checker
 *)

(* signature BOYER =
  sig
    include TERMS
    val tautp: term -> bool
  end *)

structure Boyer (* : BOYER *) =
  struct

structure T = Terms
val headname = T.headname
val rewrite = T.rewrite
val termEq = T.termEq
type head = T.head


fun mem x nil = false
  | mem x (y::L) = termEq(x, y) orelse mem x L

fun truep (x, lst) =
  case x of
    T.Prop(head, _) =>
      headname head = ""true"" orelse mem x lst
  | _ =>
      mem x lst

and falsep (x, lst) =
  case x of
    T.Prop(head, _) =>
      headname head = ""false"" orelse mem x lst
  | _ =>
      mem x lst

fun tautologyp (x, true_lst, false_lst) =
 if truep (x, true_lst) then true else
 if falsep (x, false_lst) then false else
 (case x of
     T.Var _ => false
   | T.Prop (head,test :: yes :: no :: nil) =>
        if headname head = ""if"" then
          if truep (test, true_lst) then
            tautologyp (yes, true_lst, false_lst)
          else if falsep (test, false_lst) then
            tautologyp (no, true_lst, false_lst)
          else tautologyp (yes, test::true_lst, false_lst) andalso
               tautologyp (no, true_lst, test::false_lst)
        else
          false)

    fun tautp x = tautologyp(rewrite x, [], []);

  end; (* Boyer *)

(* signature BMARK =
  sig
    val doit : unit -> unit
    val testit : TextIO.outstream -> unit
  end; *)

(* the benchmark *)
structure Benchmark (* : BMARK *) =
  struct

    structure T = Terms
    structure B = Boyer

    val tautp = B.tautp

    val apply_subst = T.apply_subst
    val get = T.get
    fun Prop x = T.Prop x
    fun Var x = T.Var x
    fun Bind x = T.Bind x


val subst =
[Bind(23,
             Prop
              (get ""f"",
               [Prop
                (get ""plus"",
                 [Prop (get ""plus"",[Var 0, Var 1]),
                  Prop (get ""plus"",[Var 2, Prop (get ""zero"",[])])])])),
 Bind(24,
             Prop
              (get ""f"",
               [Prop
                (get ""times"",
                 [Prop (get ""times"",[Var 0, Var 1]),
                  Prop (get ""plus"",[Var 2, Var 3])])])),
 Bind(25,
             Prop
              (get ""f"",
               [Prop
                (get ""reverse"",
                 [Prop
                  (get ""append"",
                   [Prop (get ""append"",[Var 0, Var 1]),
                    Prop (get ""nil"",[])])])])),
 Bind(20,
             Prop
              (get ""equal"",
               [Prop (get ""plus"",[Var 0, Var 1]),
                Prop (get ""difference"",[Var 23, Var 24])])),
 Bind(22,
             Prop
              (get ""lt"",
               [Prop (get ""remainder"",[Var 0, Var 1]),
                Prop (get ""member"",[Var 0, Prop (get ""length"",[Var 1])])]))]

val term =
           Prop
            (get ""implies"",
             [Prop
              (get ""and"",
               [Prop (get ""implies"",[Var 23, Var 24]),
                Prop
                (get ""and"",
                 [Prop (get ""implies"",[Var 24, Var 25]),
                  Prop
                  (get ""and"",
                   [Prop (get ""implies"",[Var 25, Var 20]),
                    Prop (get ""implies"",[Var 20, Var 22])])])]),
              Prop (get ""implies"",[Var 23, Var 22])])

    fun testit outstrm = if tautp (apply_subst subst term)
          then TextIO.output (outstrm, ""Proved!\n"")
          else TextIO.output (outstrm, ""Cannot prove!\n"")

    fun ignor _ = ()
    fun doit () = (ignor (tautp (apply_subst subst term)); ())

  end; (* Main *)

structure Main =
  struct
    fun doit n () = let
        fun loop n =
           if n = 0
              then ()
           else (Benchmark.doit ();
                 loop(n-1))
     in
        loop n
     end

     val dfltN = 500
     fun main _ = doit dfltN ()

  end;


val _ = Main.main (CommandLine.name (), CommandLine.arguments ())
"," *** 2020-03-19 15:34 --- John Reppy --- This crash was caused by a typo in the CPS/main/build-literals.sml code that caused an incorrect opcode to be generated for SAVE/LOAD instructions when the offset was >= 256.  It has been fixed for 110.97."
253,1,"Open",3,142,"Bug Submitter",105,"Matthias Blume","2020-03-19 23:53","","2020-03-20 07:20","Incorrect CM behavior for diamond anchor pattern","When attempting to use CM anchors in a diamond-like pattern with
the anchor environment being different on each branch, CM loads
the shared file only once, with the anchor environment of the
first branch. For example:

       top-level.cm
        /       \
       /         \
     a/a.cm     b/b.cm
       \         /
        \       /
        shared.cm

Strangely, although the bug arises with:
  sml -m top-level.cm
it is not present with:
  sml a/a.cm b/b.cm
Additional comments:
I tested this in a variety of similar configurations but always get
analogous results. For example, switching the order of a/a.cm and
b/b.cm in top-level.cm ultimately has A.result = B.result = 2.

Submitted via web form by Harrison Grodin <hgrodin@andrew.cmu.edu>
",0,0,0,"x86","Linux","CM","Accepted As Bug","Major","Ubuntu 18.04","v110.81, v110.96","modules, CM, anchors","","$ sml -m top-level.cm
Standard ML of New Jersey v110.81 [built: Sat Jul 13 16:34:28 2019]
[scanning top-level.cm]
[scanning (top-level.cm):a/a.cm]
[scanning (top-level.cm):a/(a.cm):../shared/sources.cm]
[scanning (top-level.cm):b/b.cm]
[loading $config(=(top-level.cm):a/(a.cm):.)/Config.sml]
[loading (top-level.cm):a/(a.cm):../shared/(sources.cm):Shared.sml]
[loading (top-level.cm):b/(b.cm):B.sml]
[loading (top-level.cm):a/(a.cm):A.sml]
[New bindings added.]
- A.result;
val it = 1 : int
- B.result;
val it = 1 : int
","(* top-level.cm *)

Library
  library(a/a.cm)
  library(b/b.cm)
is
  a/a.cm
  b/b.cm


(* a/a.cm *)

Library
  structure A
is
  A.sml
  ../shared/sources.cm (bind:(anchor:config value:.))

(* a/A.sml *)

structure A = struct val result = Shared.foo () end

(* a/Config.sml *)

structure Config = struct val x = 1 end


(* b/b.cm *)

Library
  structure B
is
  B.sml
  ../shared/sources.cm (bind:(anchor:config value:.))

(* b/B.sml *)

structure B = struct val result = Shared.foo () end

(* b/Config.sml *)

structure Config = struct val x = 2 end


(* shared/sources.cm *)

Library
  structure Shared
is
  $config/Config.sml
  Shared.sml

(* shared/Shared.sml *)

structure Shared = struct val foo = fn () => Config.x end"," *** 2020-03-20 00:00 --- Matthias Blume --- I think the real problem is that CM does not detect this situation as an error.  Anchor environments are not meant to be ""parameters"".  Each library or group should only exist once in the overall assembly.  In a diamond pattern the anchor environments need to match."
254,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-04-14 14:28","2020-12-19 13:19","2020-12-19 13:19","Real.fromLargeInt produces negative results","Real.fromInt returns a negative result when the number is bigger than Int.maxInt
Additional comments:
A student had the same problem on Windows 10, where maxInt was 2^30-1, and the wrap-around occurred for 2^30..

Submitted via web form by Dan Licata <dlicata@wesleyan.edu>
",0,0,0,"x86","MacOS X","Basis Library","Fixed","Major","10.15.3","110.96","","","Standard ML of New Jersey (64-bit) v110.96 [built: Fri Dec 13 14:59:34 2019]
- valOf Int.maxInt;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val it = 4611686018427387903 : int
- Real.fromLargeInt 4611686018427387903;
val it = 4.61168601843E18 : real
- Real.fromLargeInt 4611686018427387904;
val it = ~4.61168601843E18 : real",""," *** 2020-12-19 13:19 --- John Reppy --- The problem is because the digit size for ``IntInf.int is only one bit smaller than the default int and the scaling factor `rbase` was being computed using the `InlineT.Real64.from_int` function (so `rbase` ends up being negative). Thus it would return incorrect results whenever the IntInf representation involved more than one digit. This is a bug on both 32-bit and 64-bit systems.  The fix is to switch to `InlineT.Real64.from_int{32,64}`. ~  ~ Fixed for 110.99"
255,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-04-15 17:04","2020-04-21 11:50","2020-04-21 11:50","Compiler bug at REPL 64-bit","This problem came up in CS 221 at UChicago for 110.96 64-bit only,
for 32-bit it works fine.

The problem is that a function returning a value of type HW1.point
in the REPL causes a compiler error message to be printed instead
of the value as a string.
Additional comments:
This problem doesn't appear for 110.96 32-bit.
A student reported that the problem exists in 64-bit 110.94 & 110.95.

Fix:
The workaround we've told students to use for now is to
match on the returned value like so:

- val (HW1.Point(x, y)) = HW1.midpoint(HW1.Point(0.0, 0.0), HW1.Point(2.0, 0.0));
val x = 1.0 : real
val y = 0.0 : real


Submitted via web form by Kavon Farvardin <kavon@farvard.in>
",0,0,0,"x86","Generic Unix","Compiler","Fixed","Minor","","110.96","repl","","Standard ML of New Jersey (64-bit) v110.96 [built: Sun Apr 05 00:57:32 2020]
- use ""bug.sml"";
...
- TestWorking.go();
midpoint = 1.0, 0.0
val it = () : unit
- TestBroken.go();
Error: Compiler bug: PPObj: ppFields in ppval.sml
- val x = HW1.midpoint(HW1.Point(0.0, 0.0), HW1.Point(2.0, 0.0));
Error: Compiler bug: PPObj: ppFields in ppval.sml
- HW1.midpoint(HW1.Point(0.0, 0.0), HW1.Point(2.0, 0.0));
Error: Compiler bug: PPObj: ppFields in ppval.sml


","The source is available at this URL:

https://gist.github.com/kavon/20b9b96438a9a7c278dd251c8e1d6b49"," *** 2020-04-21 11:50 --- John Reppy --- This bug looks like bugs 245 and 248, which have been fixed for 110.97"
256,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-04-23 23:07","2020-04-24 11:05","2020-04-24 11:05","Ref.exchange incorrect","Ref.exchange seems to have a minor typo in its implementation. It says:

fun exchange (r as ref x, y) = (r := x; y)

However, this doesn't seem to be the intended behavior, which would be:

fun exchange (r as ref x, y) = (r := y; x)
Fix:
fun exchange (r as ref x, y) = (r := y; x)

Submitted via web form by Harrison Grodin <hgrodin@andrew.cmu.edu>
",0,0,0,"None","Generic Unix","Basis Library","Fixed","Minor","","v110.81, v110.96","ref","","- val r = ref 1;
val r = ref 1 : int ref
- val (a,b) = (Ref.exchange (r,2), !r);
val a = 2 : int
val b = 1 : int","val r = ref 1
val (a,b) = (Ref.exchange (r,2), !r)"," *** 2020-04-24 11:05 --- John Reppy --- Fixed for 110.98.  The original source of the bug was the Basis Library sample code, which has also been fixed."
257,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-06-06 14:22","2020-06-06 14:55","2020-06-06 14:55","HASH_TABLE listItems error in reference manual","http://www.smlnj.org/doc/smlnj-lib/Manual/hash-table.html

val listItems : ('a,'b) hash_table -> ('a * 'b) list

should be

val listItems : ('a,'b) hash_table -> 'b list
Additional comments:
source code does not produce an error, it just shows how the listItems
function produces a string list instead of a (string*string) list,
which means the reference manual is incorrect.

Submitted via web form by Alon Schwarz <alon.schwarz1@gmail.com>
",0,0,0,"None","Other","SML/NJ Library","Fixed","Minor","Windows 10","110.96","""HashTable"", ""hash_table""","","","exception UndefinedIdentifier;

val initial_size = 127;

val inDomain = HashTable.inDomain;
val lookup = HashTable.lookup;
val insert = HashTable.insert;
fun new_map () = HashTable.mkTable (HashString.hashString, (op =))
   (initial_size, UndefinedIdentifier)
;

val tbl : (string, string) HashTable.hashtable = new_map();

HashTable.listItems tbl;"," *** 2020-06-06 14:55 --- John Reppy --- The next release (110.98) will include new documentation for the library."
258,1,"Open",3,142,"Bug Submitter",105,"Matthias Blume","2020-06-08 15:33","","2020-07-10 10:47","Setting an undefined CM anchor to NONE raises NotFound exception","Setting an anchor to NONE which is already NONE raises NotFound from redblack-map-fn.sml.
Submitted via web form by Harrison Grodin <hgrodin@andrew.cmu.edu>
",0,0,0,"None","Generic Unix","CM","Accepted As Bug","Minor","Ubuntu 18.04","v110.81, v110.97","CM","","λ> #set (CM.Anchor.anchor ""basis.cm"") NONE;
val it = () : unit
λ> #set (CM.Anchor.anchor ""basis.cm"") NONE;

uncaught exception NotFound
  raised at: ../../smlnj-lib/Util/redblack-map-fn.sml:212.27-212.43
λ> #set (CM.Anchor.anchor ""something-not-already-set"") NONE;

uncaught exception NotFound
  raised at: ../../smlnj-lib/Util/redblack-map-fn.sml:212.27-212.43
","#set (CM.Anchor.anchor ""anchor-which-is-set-to-NONE"") NONE"," *** 2020-07-10 10:47 --- John Reppy --- Not clear what the intended semantics is, but the binding ~  ~   val {set, get} = CM.Anchor.anchor  ""anchor-which-is-not-set"" ~  ~ does not raise an error.  Instead, it returns a get function that works (returns `NONE`) and a `set` function that will raise an exception. ~ "
259,1,"Open",3,103,"John Reppy",106,"David MacQueen","2020-06-17 09:20","","2020-06-17 09:20","Uninformative error message for type spec/defn mismatch","The error message provides no detail for what the mismatch is.  It does not even print the types, so it can be hard to guess what the error is when the types are complicated.
",0,0,0,"All","All","Compiler","Accepted As Bug","Cosmetic","","110.97","type error message","","Standard ML of New Jersey (64-bit) v110.97 [built: Tue Apr 21 17:39:48 2020]
- structure A : sig
=   type t = {a : int, b : string}
= end = struct
=   type t = {a : bool, b : string}
= end;
stdIn:1.2-5.4 Error: type t does not match definitional specification
","structure A : sig
  type t = {a : int, b : string}
end = struct
  type t = {a : bool, b : string}
end
",""
260,2,"Closed",3,233,"takayuki goto",103,"John Reppy","2020-07-01 10:56","2020-07-10 10:12","2020-07-20 08:33","Perform divide on Position.int crashes with FPE on Linux","T/O",0,0,0,"x86","Linux","Compiler","Fixed","Major","","110.97","floating point exception","","","```repro.sml
val _ = (Position.fromLarge ~0x8000000000000000) div (Position.fromLarge ~1)
```

```console
$ sml -64 repro.sml
Standard ML of New Jersey (64-bit) v110.97 [built: Tue May 12 00:16:59 2020]
[opening basis/test/repro.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
Floating point exception
```
"," *** 2020-07-20 08:33 --- takayuki goto --- On SML/NJ 100.98 (32bit), similar bug remains yet. :( ~  ~ ```sml ~ $ bin/sml -32 ~ Standard ML of New Jersey (32-bit) v110.98 [built: Mon Jul 20 11:07:54 2020] ~ - (Position.fromLarge ~0x8000000000000000) div (Position.fromLarge ~1); ~ [autoloading] ~ [library $SMLNJ-BASIS/basis.cm is stable] ~ [library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable] ~ [autoloading done] ~ val it = ~9223372036854775808 : ?.int64 ~ - ~ ``` *** 2020-07-01 14:45 --- John Reppy --- The fact that there is a FPE occurring is not a bug; dividing the most-negative number by ~1 will cause Overflow, which is detected as a SIGFPE. ~  ~ The actual bug is that on Linux, this FPE is not getting mapped to Overflow; it works correctly on macOS.  The problem is specific to Int64 values, so I suspect that we are seeing a different signal for division than for addition/multiplication.  (For tagged integers, the Overflow in this case is caused by the addition used to retag the result). ~  ~ "
261,2,"Closed",3,103,"John Reppy",106,"David MacQueen","2020-07-06 13:24","2020-07-06 20:12","2020-07-06 20:12","Weird ""calc_strictness"" message being printed","Weird message about ""calc_strictness"" printed",0,0,0,"All","All","Compiler","Accepted As Bug","Cosmetic","","110.97","type checker, type error messages","","Standard ML of New Jersey (64-bit) v110.97 [built: Tue Apr 21 17:39:48 2020]
-  type t = 'a;
stdIn:1.8-1.14 Error: unbound type variable in type declaration: 'a
#### calc_strictness ####
"," type t = 'a;
"," *** 2020-07-06 20:12 --- David MacQueen --- Fixed by rewriting the function ElabUtil.calc_strictness and moving it to TypesUtil. *** 2020-07-06 13:39 --- John Reppy --- This ""calc_strictness"" message comes from line 411 of Elaborator/elaborate/elabutil.sml"
262,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-07-07 15:20","2020-07-07 20:54","2020-07-07 20:54","JSON parser fails on empty object","Empty objects are not handled correctly in structure JSONParser.
For example, the right curly brace token (RCB) is not removed when parseField produces NONE (i.e., when there are no objects).

Fix:
Replacing line 79 in `parseObject`'s `loop`:

| NONE => (strm, flds)

with:

| NONE => (
  case lexer strm of
    (T.RCB,pos,strm) => (strm,flds)
  | (tok,pos,_) => error (pos, ""parsing object"", tok)
)

seems to help.

Submitted via web form by Harrison Grodin <hgrodin@andrew.cmu.edu>
",0,0,0,"None","Generic Unix","SML/NJ Library","Fixed","Minor","Ubuntu 18.04","v110.81, v110.97","json json-lib","","$ smlnj -m $/json-lib.cm
Standard ML of New Jersey v110.81 [built: Wed Jun 17 03:50:49 2020]
λ> JSONParser.parse (TextIO.openString ""[{}]"");

uncaught exception Fail [Fail: error [1.3-1.4]: parsing array, found '}']
  raised at: smlnj-lib/JSON/json-parser.sml:20.38-23.5","JSONParser.parse (TextIO.openString ""[{}]"");"," *** 2020-07-07 20:54 --- John Reppy --- Fixed for 110.98"
263,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-07-07 15:33","2020-07-08 11:27","2020-07-08 11:27","JSON parser ignores suffixes","JSON parser ignores extra suffixes after parsed value.
Additional comments:
It's possible that this is the desired behavior. However, if the user is supposed to be able to parse multiple objects from the same stream, it seems this is an issue, as well:

- val stream = TextIO.openString ""[1,2,3]4"";
val stream = - : TextIO.instream
- JSONParser.parse stream;
val it = ARRAY [INT 1,INT 2,INT 3] : JSON.value
- TextIO.endOfStream stream;
val it = true : bool


Submitted via web form by Harrison Grodin <hgrodin@andrew.cmu.edu>
",0,0,0,"None","Generic Unix","SML/NJ Library","Fixed","Minor","Ubuntu 18.04","v110.81, v110.97","json json-lib","","λ> JSONParser.parse (TextIO.openString ""314159suffix"");
val it = INT 314159 : JSON.value
λ> JSONParser.parse (TextIO.openString ""[1,2,3]4"");
val it = ARRAY [INT 1,INT 2,INT 3] : JSON.value
","JSONParser.parse (TextIO.openString ""314159suffix"")

JSONParser.parse (TextIO.openString ""[1,2,3]4"")"," *** 2020-07-08 11:27 --- John Reppy --- Fixed for 110.98.  See smlnj-lib/CHANGES for details. *** 2020-07-07 20:59 --- John Reppy --- The problem here is that the JSON lexer buffers the input, which means that the extra input is discarded when the JSONParser.parse function returns.  To fix this bug will require an API change."
264,2,"Closed",3,103,"John Reppy",103,"John Reppy","2020-07-08 11:26","2020-07-08 16:46","2020-07-08 16:46","ml-ulex generated lexer resets on end-of-file","An ML-ULex generated lexer resets to the beginning of the input stream once the end of file is reached.

To reproduce, go the the smlnj-lib/json-lib directory and then run the following code in the REPL:

CM.make ""json-lib.cm"";
val strm = JSONParser.openString ""[1,2,3]4"";
JSONParser.parse strm;
JSONParser.parse strm;
JSONParser.parse strm;
JSONParser.parse strm;
",0,0,0,"All","All","ML-Ulex","Fixed","Minor","","110.97","","","- val strm = JSONParser.openString ""[1,2,3]4"";
val strm = - : JSONParser.source
- JSONParser.parse strm;
val it = ARRAY [INT 1,INT 2,INT 3] : JSON.value
- JSONParser.parse strm;
val it = INT 4 : JSON.value
- JSONParser.parse strm;
val it = ARRAY [INT 1,INT 2,INT 3] : JSON.value
- JSONParser.parse strm;
val it = INT 4 : JSON.value
","CM.make ""json-lib.cm"";
val strm = JSONParser.openString ""[1,2,3]4"";
JSONParser.parse strm;
JSONParser.parse strm;
JSONParser.parse strm;
JSONParser.parse strm;
"," *** 2020-07-08 16:46 --- John Reppy --- This turned out to be a bug in the JSON library."
265,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-07-18 17:58","2020-07-18 21:30","2020-07-18 21:30","Typo in 110.98 Release Notes","In the Release Notes for 110.98, dated yesterday, under
Installation, you say ""as their hardware is no 64 bits"".
'no' should be 'now', I think.

URL: http://smlnj.org/dist/working/110.98/110.98-README.html

Apologies if this kind of correction should not be
reported on a bug form.


Submitted via web form by Robert Gislason <gztown2216@yahoo.com>
",0,0,0,"None","Generic Unix","Installer","Fixed","Cosmetic","","110.98","","","","",""
266,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2020-07-19 05:35","2020-08-25 08:12","2020-08-25 08:12","Pretty printing regression in SML/NJ 110.98","REPL output is not formatted correctly.
Additional comments:
$ sml
Standard ML of New Jersey (64-bit) v110.97 [built: Tue Apr 21 17:39:48 2020]
- use ""hw1-1.sml"";
[opening hw1-1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> bool
val test1 = true : bool
val test2 = true : bool
val test3 = true : bool
val test4 = true : bool
val it = () : unit
-

Submitted via web form by Craig H Maynard <chmaynard@gmail.com>
",0,0,0,"x86","MacOS X","Other","Fixed","Major","Mojave","v110.98","pretty printing","","$ sml
Standard ML of New Jersey (32-bit) v110.98 [built: Fri Jul 17 14:37:19 2020]
- use ""hw1-1.sml"";
[opening hw1-1.sml]
val is_older = fn : (int * int * int) * (int * int * int) -> boolval test1 =
                                                                   true : boolval test2 =
                                                                                true
                                                                                :
                                                                                     boolval test3 =
                                                                                           true
                                                                                           :
                                                                                                boolval test4 =
                                                                                                      true
                                                                                                      :
                                                                                                           bool
val it = () : unit
- ","fun is_older (date1 : int * int * int, date2 : int * int * int) =
    let val y_delta = #1 date2 - #1 date1 in
        if (y_delta < 0) then false else if (y_delta > 0) then true else
        let val m_delta = #2 date2 - #2 date1 in
            if (m_delta < 0) then false else if (m_delta > 0) then true else
            let val d_delta = #3 date2 - #3 date1 in
                if (d_delta < 0) then false else if (d_delta > 0) then true else false
            end
        end
    end

val test1 = is_older ((2,3,4),(1,2,3)) = false
val test2 = is_older ((1,2,3),(2,3,4)) = true
val test3 = is_older ((2,3,4),(2,3,4)) = false
val test4 = is_older ((2,3,4),(2,3,5)) = true"," *** 2020-08-25 08:12 --- John Reppy --- Fixed by reverting pretty-printing code to 110.97 *** 2020-07-20 09:34 --- John Reppy --- The pretty printer is not putting line breaks between the specifications."
267,2,"Closed",3,233,"takayuki goto",103,"John Reppy","2020-07-20 11:25","2020-12-19 09:41","2020-12-19 14:21","Returns an incorrect result for a calculation on Position.int for 32-bit mode.","Returns an incorrect result for the calculation on Position.int

sml(32bit) returns ~9223372036854775808 for the expression:

    > (Position.fromLarge ~0x8000000000000000) div (Position.fromLarge ~1);

But in fact, ~9223372036854775808 is equal to ~0x8000000000000000.
There doesn't seem to be any calculations being made.
",0,0,0,"x86","Linux","Compiler","Fixed","Minor","","110.98","arithmetic","","","$ sml -32
Standard ML of New Jersey (32-bit) v110.98 [built: Mon Jul 20 11:07:54 2020]
- (Position.fromLarge ~0x8000000000000000) div (Position.fromLarge ~1);
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val it = ~9223372036854775808 : ?.int64
-
"," *** 2020-12-19 09:41 --- John Reppy --- The correct result is raising the Overflow exception.  The problem was that on 32-bit machines, 64-bit division is implemented by the IntInf module with the result being converted to 64-bits.  The conversion used did not test for overflow. ~  ~ Fixed for 110.99"
268,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2020-07-20 19:57","2020-08-25 08:36","2020-08-25 08:36","Polymorphic Type Pretty Printing Regression","There is a missing space between the `type` keyword and type variables when pretty printing type declarations.
Submitted via web form by Harrison Grodin <hgrodin@andrew.cmu.edu>
",0,0,0,"None","Generic Unix","Compiler","Fixed","Cosmetic","","v110.98","polymorphic type printing regression","","- type 'a t = 'a list;
type'a t = 'a list

(* should be `type 'a t`; is `type'a t`, which is invalid syntax *)","type 'a t = 'a list"," *** 2020-08-25 08:36 --- John Reppy --- Fixed by reverting to 110.97 pretty printing code"
269,2,"Closed",3,233,"takayuki goto",103,"John Reppy","2020-08-02 12:43","2020-08-02 15:42","2020-08-02 15:42","Word64.fromString causes an Overflow for greater than 2^32-1","Word64.fromString causes an Overflow exception for strings,
which represents a value greater than 0xFFFFFFFF.

Word literals greater than 0xFFFFFFFF are accepted.
For example: `0wx1FFFFFFFF : Word64.word` is evaluated to the correct value.
",0,0,0,"x86","All","Basis Library","Fixed","Major","","110.98","arithmetic overflow","","$ sml -64
Standard ML of New Jersey (64-bit) v110.98 [built: Wed Jul 22 01:56:25 2020]
- Word64.fromString ""0xFFFFFFFF"";
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val it = SOME 0wxFFFFFFFF : Word64.word option
- Word64.fromString ""0x1FFFFFFFF"";

uncaught exception Overflow [overflow]
  raised at: Basis/Implementation/num-scan64.sml:38.50-38.58
",""," *** 2020-08-02 15:42 --- John Reppy --- This bug was the result of constants from the 32-bit version of the code not getting updated for the 64-bit version.   Scanning of both hexadecimal and octal representations of both integers and words were affected."
270,1,"Open",3,460,"Harrison Grodin",106,"David MacQueen","2020-08-08 16:35","","2020-08-08 16:37","Last branch of case expression omitted from PPAst","When printing a `CaseExp` using `PPAst`, the last branch is omitted from printing.

One potential fix would be to remove the `trim` function, using `rules` instead of `trim rules`. (I'm not sure what the reasoning behind `trim` is in the first place, though.)",0,0,0,"None","Linux","Compiler","Accepted As Bug","Minor","Ubuntu 18.04","v110.98","pretty-print","","- val pd : PrettyPrint.device = {consumer = print, linewidth = Fn.const 80, flush = fn () => TextIO.flushOut TextIO.stdOut};
val pd = {consumer=fn,flush=fn,linewidth=fn} : ?.PrettyPrint.PP.device
- val dec = SmlFile.parse (Source.newSource (""demo"", TextIO.openString ""case 0 of 0 => 0"", false, ErrorMsg.defaultConsumer ()));
val dec =
  SeqDec
    [MarkDec
       (ValDec ([Vb {exp=MarkExp #,lazyp=false,pat=VarPat #}],[]),(2,18))]
  : Ast.dec
- let val strm = PrettyPrint.openStream pd in PPAst.ppDec NONE strm (dec,6) before PrettyPrint.closeStream strm end;
val it =
      (case 0
      )val it = () : unit
","val pd : PrettyPrint.device = {consumer = print, linewidth = Fn.const 80, flush = fn () => TextIO.flushOut TextIO.stdOut};
val dec = SmlFile.parse (Source.newSource (""demo"", TextIO.openString ""case 0 of 0 => 0"", false, ErrorMsg.defaultConsumer ()));
let val strm = PrettyPrint.openStream pd in PPAst.ppDec NONE strm (dec,6) before PrettyPrint.closeStream strm end;",""
271,2,"Closed",3,233,"takayuki goto",106,"David MacQueen","2020-08-14 22:45","2020-08-25 08:39","2020-08-25 08:39","pretty printer regression for structure binding","[#266]

This script:

```
structure S = struct type s = int end and T = struct type t = unit end;
```

should be formatted like:

```
structure S : sig type s = int end
structure T : sig type t = unit end
```

110.97 formats as expected.",0,0,0,"x86","None","Compiler","Fixed","Minor","","110.98","pretty printer, regression","","$ sml
Standard ML of New Jersey (64-bit) v110.98 [built: Wed Jul 22 01:56:25 2020]
- structure S = struct type s = int end and T = struct type t = unit end;
structure S :
  sig
    type s = int
  endstructure T :
  sig
    type t = unit
  end
","structure S = struct type s = int end and T = struct type t = unit end;"," *** 2020-08-25 08:39 --- John Reppy --- Fixed by reverting to 110.97 PP code."
272,1,"Open",3,460,"Harrison Grodin",103,"John Reppy","2020-08-20 13:06","","2020-12-18 09:31","Many rtsargs unavailable on Windows","Many rtsargs (such as @SMLversion and @SMLsuffix) which appear in the help (sml -h) message do not work on Windows; instead, they simply cause a REPL to be opened.

(Some, however, do seem to work; for example, @SMLload.)",0,0,0,"None","Windows 8.x","Other","None","Minor","Windows 10","v110.87, v110.97, v110.98","windows flag cli","","$ sml '@SMLversion'
# opens REPL
$ sml '@SMLsuffix'
# opens REPL","sml '@SMLversion'
sml '@SMLsuffix'",""
273,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-09-10 11:13","2020-09-11 13:08","2020-09-11 13:08","Printing source file when running from CLI and REPL, Missing signatures","When compiling file, source gets dumped to standard output and the signatures are not being printed.
Additional comments:
N/A

Fix:
I wish I knew.

Submitted via web form by Ryan Steele <rsteele2@andrew.cmu.edu>
",0,0,0,"x86","Linux","Other","Fixed","Cosmetic","Arch Linux: 5.8.3-arch1-1","110.98","Missing signatures","","rmsteele@Arch:cps$ smlnj code/findn/findn.sml
Standard ML of New Jersey (64-bit) v110.98 [built: Wed Aug 05 11:48:10 2020]
[opening code/findn/findn.sml]
datatype'a shrub = Branch of 'a shrub * 'a shrub | Leaf of 'aval p1 = fn
                                                               : int -> boolval p2 =
                                                                              fn
                                                                              :
                                                                                   int
                                                                                 ->
                                                                                   boolval eq =
                                                                                         fn
                                                                                         : ''a
                                                                                            * ''a
                                                                                            ->
                                                                                              boolval sc =
                                                                                                    fn
                                                                                                    : 'a
                                                                                                       -> 'a

                                                                                                         optionval fc =
                                                                                                                 fn
                                                                                                                 : unit
                                                                                                                    -> 'a

                                                                                                                      optionval T0 =
                                                                                                                              Branch
                                                                                                                                (Branch
                                                                                                                                   (Leaf
                                                                                                                                      0,
                                                                                                                                    Leaf
                                                                                                                                      0),
                                                                                                                                 Branch
                                                                                                                                   (Leaf
                                                                                                                                      1,
                                                                                                                                    Leaf
                                                                                                                                      1))
                                                                                                                              :
                                                                                                                                     int

                                                                                                                                   shrubval T1 =
                                                                                                                                          Branch
                                                                                                                                            (Branch
                                                                                                                                               (Leaf
                                                                                                                                                  0,
                                                                                                                                                Leaf
                                                                                                                                                  0),
                                                                                                                                             Branch
                                                                                                                                               (Leaf
                                                                                                                                                  1,
                                                                                                                                                Leaf
                                                                                                                                                  2))
                                                                                                                                          :
                                                                                                                                                 int

                                                                                                                                               shrubval T2 =
                                                                                                                                                      Branch
                                                                                                                                                        (Branch
                                                                                                                                                           (Leaf
                                                                                                                                                              0,
                                                                                                                                                            Leaf
                                                                                                                                                              1),
                                                                                                                                                         Branch
                                                                                                                                                           (Leaf
                                                                                                                                                              2,
                                                                                                                                                            Leaf
                                                                                                                                                              3))
                                                                                                                                                      :
                                                                                                                                                             int

                                                                                                                                                           shrubval T3 =
                                                                                                                                                                  Branch
                                                                                                                                                                    (Branch
                                                                                                                                                                       (Leaf
                                                                                                                                                                          3,
                                                                                                                                                                        Leaf
                                                                                                                                                                          2),
                                                                                                                                                                     Branch
                                                                                                                                                                       (Leaf
                                                                                                                                                                          1,
                                                                                                                                                                        Leaf
                                                                                                                                                                          0))
                                                                                                                                                                  :
                                                                                                                                                                         int

                                                                                                                                                                       shrubval findOne =
                                                                                                                                                                              fn
                                                                                                                                                                              : ('a
                                                                                                                                                                                  ->
                                                                                                                                                                                    bool)
                                                                                                                                                                                 -> 'a

                                                                                                                                                                                   shrub
                                                                                                                                                                                 -> ('a
                                                                                                                                                                                  -> 'b)
                                                                                                                                                                                 -> (unit
                                                                                                                                                                                  -> 'b)
                                                                                                                                                                                 -> 'bval findTwo =
                                                                                                                                                                                        fn
                                                                                                                                                                                        : ('a
                                                                                                                                                                                            ->
                                                                                                                                                                                              bool)
                                                                                                                                                                                           -> ('a
                                                                                                                                                                                            * 'a
                                                                                                                                                                                            ->
                                                                                                                                                                                              bool)
                                                                                                                                                                                           -> 'a

                                                                                                                                                                                             shrub
                                                                                                                                                                                           -> ('a
                                                                                                                                                                                            * 'a
                                                                                                                                                                                            -> 'b)
                                                                                                                                                                                           -> (unit
                                                                                                                                                                                            -> 'b)
                                                                                                                                                                                           -> 'bval findN =
                                                                                                                                                                                                  fn
                                                                                                                                                                                                  : ('a
                                                                                                                                                                                                      ->
                                                                                                                                                                                                        bool)
                                                                                                                                                                                                     -> ('a
                                                                                                                                                                                                      * 'a
                                                                                                                                                                                                      ->
                                                                                                                                                                                                        bool)
                                                                                                                                                                                                     -> 'a

                                                                                                                                                                                                       shrub
                                                                                                                                                                                                     ->
                                                                                                                                                                                                       int
                                                                                                                                                                                                     -> ('a

                                                                                                                                                                                                        list
                                                                                                                                                                                                      -> 'b)
                                                                                                                                                                                                     -> (
                                                                                                                                                                                                        unit
                                                                                                                                                                                                      -> 'b)
                                                                                                                                                                                                     -> 'b
-
rmsteele@Arch:cps$

and ...

rmsteele@Arch:cps$ smlnj
Standard ML of New Jersey (64-bit) v110.98 [built: Wed Aug 05 11:48:10 2020]
- use ""code/findn/findn.sml"";
[opening code/findn/findn.sml]
datatype'a shrub = Branch of 'a shrub * 'a shrub | Leaf of 'aval p1 = fn
                                                               : int -> boolval p2 =
                                                                              fn
                                                                              :
                                                                                   int
                                                                                 ->
                                                                                   boolval eq =
                                                                                         fn
                                                                                         : ''a
                                                                                            * ''a
                                                                                            ->
                                                                                              boolval sc =
                                                                                                    fn
                                                                                                    : 'a
                                                                                                       -> 'a

                                                                                                         optionval fc =
                                                                                                                 fn
                                                                                                                 : unit
                                                                                                                    -> 'a

                                                                                                                      optionval T0 =
                                                                                                                              Branch
                                                                                                                                (Branch
                                                                                                                                   (Leaf
                                                                                                                                      0,
                                                                                                                                    Leaf
                                                                                                                                      0),
                                                                                                                                 Branch
                                                                                                                                   (Leaf
                                                                                                                                      1,
                                                                                                                                    Leaf
                                                                                                                                      1))
                                                                                                                              :
                                                                                                                                     int

                                                                                                                                   shrubval T1 =
                                                                                                                                          Branch
                                                                                                                                            (Branch
                                                                                                                                               (Leaf
                                                                                                                                                  0,
                                                                                                                                                Leaf
                                                                                                                                                  0),
                                                                                                                                             Branch
                                                                                                                                               (Leaf
                                                                                                                                                  1,
                                                                                                                                                Leaf
                                                                                                                                                  2))
                                                                                                                                          :
                                                                                                                                                 int

                                                                                                                                               shrubval T2 =
                                                                                                                                                      Branch
                                                                                                                                                        (Branch
                                                                                                                                                           (Leaf
                                                                                                                                                              0,
                                                                                                                                                            Leaf
                                                                                                                                                              1),
                                                                                                                                                         Branch
                                                                                                                                                           (Leaf
                                                                                                                                                              2,
                                                                                                                                                            Leaf
                                                                                                                                                              3))
                                                                                                                                                      :
                                                                                                                                                             int

                                                                                                                                                           shrubval T3 =
                                                                                                                                                                  Branch
                                                                                                                                                                    (Branch
                                                                                                                                                                       (Leaf
                                                                                                                                                                          3,
                                                                                                                                                                        Leaf
                                                                                                                                                                          2),
                                                                                                                                                                     Branch
                                                                                                                                                                       (Leaf
                                                                                                                                                                          1,
                                                                                                                                                                        Leaf
                                                                                                                                                                          0))
                                                                                                                                                                  :
                                                                                                                                                                         int

                                                                                                                                                                       shrubval findOne =
                                                                                                                                                                              fn
                                                                                                                                                                              : ('a
                                                                                                                                                                                  ->
                                                                                                                                                                                    bool)
                                                                                                                                                                                 -> 'a

                                                                                                                                                                                   shrub
                                                                                                                                                                                 -> ('a
                                                                                                                                                                                  -> 'b)
                                                                                                                                                                                 -> (unit
                                                                                                                                                                                  -> 'b)
                                                                                                                                                                                 -> 'bval findTwo =
                                                                                                                                                                                        fn
                                                                                                                                                                                        : ('a
                                                                                                                                                                                            ->
                                                                                                                                                                                              bool)
                                                                                                                                                                                           -> ('a
                                                                                                                                                                                            * 'a
                                                                                                                                                                                            ->
                                                                                                                                                                                              bool)
                                                                                                                                                                                           -> 'a

                                                                                                                                                                                             shrub
                                                                                                                                                                                           -> ('a
                                                                                                                                                                                            * 'a
                                                                                                                                                                                            -> 'b)
                                                                                                                                                                                           -> (unit
                                                                                                                                                                                            -> 'b)
                                                                                                                                                                                           -> 'bval findN =
                                                                                                                                                                                                  fn
                                                                                                                                                                                                  : ('a
                                                                                                                                                                                                      ->
                                                                                                                                                                                                        bool)
                                                                                                                                                                                                     -> ('a
                                                                                                                                                                                                      * 'a
                                                                                                                                                                                                      ->
                                                                                                                                                                                                        bool)
                                                                                                                                                                                                     -> 'a

                                                                                                                                                                                                       shrub
                                                                                                                                                                                                     ->
                                                                                                                                                                                                       int
                                                                                                                                                                                                     -> ('a

                                                                                                                                                                                                        list
                                                                                                                                                                                                      -> 'b)
                                                                                                                                                                                                     -> (
                                                                                                                                                                                                        unit
                                                                                                                                                                                                      -> 'b)
                                                                                                                                                                                                     -> 'b
val it = () : unit
-
rmsteele@Arch:cps$
","datatype 'a shrub = Leaf of 'a
                  | Branch of 'a shrub * 'a shrub

val p1 = fn x => x > 0
val p2 = fn x => x = 1
val eq = op=
val sc = SOME
val fc = fn () => NONE

val T0 = Branch (Branch (Leaf 0, Leaf 0), Branch (Leaf 1, Leaf 1))
val T1 = Branch (Branch (Leaf 0, Leaf 0), Branch (Leaf 1, Leaf 2))
val T2 = Branch (Branch (Leaf 0, Leaf 1), Branch (Leaf 2, Leaf 3))
val T3 = Branch (Branch (Leaf 3, Leaf 2), Branch (Leaf 1, Leaf 0))

(* findOne : ('a -> bool) -> 'a shrub -> ('a -> 'b) -> (unit -> 'b) -> 'b
 * REQUIRES: p is total
 * ENSURES:  findOne p T sc fc ==> s x if x is in T and p(x) ==> true.
 *           If no such x exists, this evalutes to fc () instead.
 *           If more than one such x exists,
 *           findOne p T sc fc evaluates the leftmost such x.
 *)
fun findOne p (Leaf x) sc fc = if p x then sc x else fc ()
  | findOne p (Branch (L,R)) sc fc =
      findOne p L sc (fn () =>
      findOne p R sc fc)

(* findOne test cases *)
val NONE = findOne p1 (Leaf 0) sc fc
val SOME 1 = findOne p1 (Branch (Leaf 1, Leaf 2)) sc fc
val SOME 2 = findOne p1 (Branch (Leaf 0, Leaf 2)) sc fc

(* findTwo : ('a -> bool) -> ('a * 'a -> bool) -> 'a shrub ->
 *           ('a * 'a -> 'b) -> (unit -> 'b) -> 'b
 * REQUIRES: p is total, eq is total, eq represents an equivalence relation
 * ENSURES:  findTwo p eq T sc fc ==> sc(x,y) if x and y are values in T s.t.
 *           p(x) ==> true and p(y) ==> true and eq(x,y) ==> false.
 *           If no such pair (x,y) exists, findTwo p T sc fc ==> fc ()
 *)
fun findTwo p eq (Leaf x) sc fc = fc ()
  | findTwo p eq (Branch (L,R)) sc fc =
    let
      fun q v = fn x => (p x) andalso not (eq (x,v))
    in
      findOne p L (fn r1 =>
        findOne (q r1) L (fn r2 => sc (r1, r2)) (fn () =>
        findOne (q r1) R (fn r2 => sc (r1, r2)) fc)) (fn () =>
      findOne p R (fn r1 =>
        findOne (q r1) R (fn r2 => sc (r1,r2)) fc) fc)
    end

(* findTwo test cases *)
val NONE = findTwo p1 eq T0 sc fc
val SOME (1,2) = findTwo p1 eq T1 sc fc
val SOME (1,2) = findTwo p1 eq T2 sc fc
val SOME (3,2) = findTwo p1 eq T3 sc fc

(* findN : ('a -> bool) -> ('a * 'a -> bool) -> 'a shrub -> int ->
 *         ('a list -> 'b) -> (unit -> 'b) -> 'b
 * REQUIRES: n >= 0, p total, eq total, eq represents an equivalence relation
 * ENSURES: findN p eq T n sc fc ==> sc L if there exists a list L of length n
 *          s.t. the elements in L are pairwise distinct by eq, and for each
 *          element x in L, p x ==> true. Otherwise evaluates to fc ().
 *)
fun findN (p : 'a -> bool) (eq : 'a * 'a -> bool) (T : 'a shrub)
          (n : int) (sc : 'a list -> 'b) (fc : unit -> 'b) =
  case n of
    0 => sc []
  | _ =>
      let
        fun q v = fn x => (p x) andalso not (eq (x,v))
        fun success x = findN (q x) eq T (n-1) (fn r1 => sc (x::r1)) fc
      in
        findOne p T success fc
      end

(* findN test cases*)
val SOME [] = findN p1 eq T2 0 sc fc
val SOME [1] = findN p1 eq T2 1 sc fc
val SOME [1,2] = findN p1 eq T2 2 sc fc
val SOME [1,2,3] = findN p1 eq T2 3 sc fc
val SOME [3,2,1] = findN p1 eq T3 3 sc fc
val NONE = findN p1 eq T3 4 sc fc"," *** 2020-09-11 13:08 --- John Reppy --- The 110.98.1 patch release fixed most (all?) of these pretty printing errors."
274,2,"Closed",3,103,"John Reppy",106,"David MacQueen","2020-10-18 12:20","2020-12-22 16:03","2020-12-22 16:03","Minor pretty printing glitch when printing structure specs","There is an extra newline before the ""sig"" in the printing of ""CanonicalSets"" and an extra blank line between the ""end"" of ""CanonicalSets"" and the ""Ex0"" structure.",0,0,0,"All","All","Compiler","Fixed","Cosmetic","","110.98.1","Pretty printing","","% sml lr0-items.sml
Standard ML of New Jersey (64-bit) v110.98.1 [built: Tue Aug 25 16:59:36 2020]
[opening lr0-items.sml]
[autoloading]
...
structure CanonicalSets :
  sig
  type t = (int * ?.ItemSet.Set.set) list
  val items : GrammarRep.t -> t
  val dump : GrammarRep.t -> t -> unit
end

structure Ex0 : sig
  val g : GrammarRep.t
  val cset : CanonicalSets.t
end
structure Ex1 : sig
  val g : GrammarRep.t
  val cset : CanonicalSets.t
end

-
","(* lr0-items.sml
 *
 * COPYRIGHT (c) 2020 John Reppy (http://cs.uchicago.edu/~jhr)
 * All rights reserved.
 *
 * Compute the LR(0) items for a grammar.
 *)

structure Token : sig
    eqtype t
    val token : string -> t
    val toString : t -> string
    val compare : t * t -> order
    structure Set : ORD_SET where type Key.ord_key = t
  end = struct

    datatype t = T of string

    val token = T
    fun toString (T t) = concat[""\"""", t, ""\""""]
    fun compare (T t1, T t2) = String.compare (t1, t2)

    structure Set = RedBlackSetFn (
      struct
        type ord_key = t
        val compare = compare
      end)

  end

structure Nonterm : sig
    eqtype t
    val nterm : string -> t
    val toString : t -> string
    val compare : t * t -> order
    structure Set : ORD_SET where type Key.ord_key = t
    structure Map : ORD_MAP where type Key.ord_key = t
  end = struct

    datatype t = NT of string

    val nterm = NT
    fun toString (NT t) = t
    fun compare (NT t1, NT t2) = String.compare (t1, t2)

    structure Set = RedBlackSetFn (
      struct
        type ord_key = t
        val compare = compare
      end)
    structure Map = RedBlackMapFn (
      struct
        type ord_key = t
        val compare = compare
      end)

  end

structure GrammarRep : sig

    type token = Token.t
    type nterm = Nonterm.t

    datatype sym = TOK of token
                  | NT of nterm

    type prod = nterm * sym list

    eqtype prod_id
    val compareId : prod_id * prod_id -> order

    type t

    val symToString : sym -> string
    val sameSym : sym * sym -> bool

    val make : prod list -> t

    val symbolsOf : t -> sym list

    val startOf : t -> nterm

    val prodOf : t -> prod_id -> prod

    val prodsOfNT : t -> nterm -> prod_id list

  end = struct

    structure TSet = Token.Set
    structure NSet = Nonterm.Set
    structure NMap = Nonterm.Map

    type token = Token.t
    type nterm = Nonterm.t

    datatype sym = TOK of token | NT of nterm
    type prod = nterm * sym list
    type prod_id = int

    val compareId = Int.compare

    datatype t = G of {
        nterms : nterm list,
        terms : token list,
        start : nterm,
        prods : prod vector,
        prodMap : nterm -> int list
      }

    fun sameSym (TOK t1, TOK t2) = (t1 = t2)
      | sameSym (NT nt1, NT nt2) = (nt1 = nt2)
      | sameSym _ = false

    fun symToString (TOK t) = Token.toString t
      | symToString (NT nt) = Nonterm.toString nt

    fun make (prods as (S', [NT S]) :: _) = let
        (* collect non terminals and terminals *)
          val (nts, toks, pMap) = let
                fun gather (pId, (lhs, rhs), (nts, toks, pMap)) = let
                      val pMap = (case NMap.find(pMap, lhs)
                             of SOME prods => NMap.insert(pMap, lhs, pId::prods)
                              | NONE => NMap.insert(pMap, lhs, [pId])
                            (* end case *))
                      fun doSym (TOK tok, (nts, toks)) = (nts, TSet.add(toks, tok))
                        | doSym (NT nt, (nts, toks)) = (NSet.add(nts, nt), toks)
                      val (nts, toks) = List.foldl doSym (NSet.add(nts, lhs), toks) rhs
                      in
                        (nts, toks, pMap)
                      end
                in
                  List.foldri gather (NSet.empty, TSet.empty, NMap.empty) prods
                end
          in
            G{
                nterms = Nonterm.Set.toList nts,
                terms = Token.Set.toList toks,
                start = S',
                prods = Vector.fromList prods,
                prodMap = fn nt => NMap.lookup(pMap, nt)
              }
          end
      | make _ = raise Match

    fun symbolsOf (G{nterms, terms, ...}) =
          List.foldr (fn (tok, syms) => TOK tok :: syms) (List.map NT nterms) terms

    fun startOf (G{start, ...}) = start

    fun prodOf (G{prods, ...}) id = Vector.sub(prods, id)

    fun prodsOfNT (G{prodMap, ...}) = prodMap

  end

structure Item : sig

    datatype t = ITEM of {pId : GrammarRep.prod_id, i : int}

    val compare : t * t -> order
    val toString : GrammarRep.t -> t -> string

    val initial : t

  end = struct

    local
      structure G = GrammarRep
    in

    datatype t = ITEM of {pId : G.prod_id, i : int}

    fun compare (ITEM itm1, ITEM itm2) = (case G.compareId(#pId itm1, #pId itm2)
           of EQUAL => Int.compare(#i itm1, #i itm2)
            | order => order
          (* end case *))

    fun toString grm (ITEM{pId, i}) = let
          val (lhs, rhs) = G.prodOf grm pId
          val (prefix, suffix) = List.splitAt (rhs, i)
          in
            concat[
                ""["", Nonterm.toString lhs, "" : "",
                String.concatWithMap "" "" G.symToString prefix,
                case (prefix, suffix)
                 of ([], []) => "".""
                  | ([], _) => "". ""
                  | (_, []) => "" .""
                  | _ => "" . ""
                (* end case *),
                String.concatWithMap "" "" G.symToString suffix, ""]""
              ]
          end

    val initial = ITEM{pId=0, i=0}

    end (* local *)
  end

structure ItemSet =
  struct

    local
      structure G = GrammarRep

      structure Set = RedBlackSetFn (
        struct
          type ord_key = Item.t
          val compare = Item.compare
        end)

      datatype item = datatype Item.t
    in

    open Set

    type t = Set.set

    fun closure gram items = let
          val prodOf = G.prodOf gram
          val prodsOf = G.prodsOfNT gram
          fun clos (ITEM{pId, i}, items) = let
                val (_, rhs) = prodOf pId
                in
                  case List.drop(rhs, i)
                   of G.NT nt :: _ =>
                        List.foldl
                          (fn (pId, items) => add(items, ITEM{pId=pId, i=0}))
                            items (prodsOf nt)
                    | _ => items
                  (* end case *)
                end
          fun iterate items = let
                val n = numItems items
                val items = Set.foldl clos items items
                in
                  if numItems items > n then iterate items else items
                end
          in
            iterate items
          end

    fun initial gram = closure gram (singleton Item.initial)

    fun goto gram (items, sym) = let
          val closure = closure gram
          val prodOf = G.prodOf gram
          fun gather (ITEM{pId, i}, items) = let
                val (_, rhs) = prodOf pId
                in
                  case List.drop(rhs, i)
                   of sym' :: rest => if G.sameSym(sym, sym')
                        then add(items, ITEM{pId=pId, i=i+1})
                        else items
                    | _ => items
                  (* end case *)
                end
          in
            closure (Set.foldl gather Set.empty items)
          end

    fun toString grm items = String.concat [
            ""{"", String.concatWithMap "","" (Item.toString grm) (toList items), ""}""
          ]

    end (* local *)

  end

structure CanonicalSets : sig

    type t = (int * ItemSet.set) list

    val items : GrammarRep.t -> t

    val dump : GrammarRep.t -> t -> unit

  end = struct

  (* maps keyed by item sets *)
    structure Map = RedBlackMapFn (
      struct
        type ord_key = ItemSet.set
        val compare = ItemSet.compare
      end)

    type t = (int * ItemSet.set) list

    fun items gram = let
          val syms = GrammarRep.symbolsOf gram
          val nextId = ref 0
          fun new (cset, items) = let val id = !nextId
                in
                  nextId := id + 1;
                  Map.insert (cset, items, id)
                end
          fun add (items, _, cset) = let
                fun goto (sym, cset) = let
                      val items' = ItemSet.goto gram (items, sym)
                      in
                        if ItemSet.isEmpty items'
                          then cset
                        else if Map.inDomain(cset, items')
                          then cset
                          else new (cset, items')
                      end
                in
                  List.foldl goto cset syms
                end
          fun iterate cset = let
                val n = Map.numItems cset
                val cset = Map.foldli add cset cset
                in
                  if Map.numItems cset > n then iterate cset else cset
                end
          val cset = iterate (new (Map.empty, ItemSet.initial gram))
          val itemSets : t = Map.foldli
                (fn (items, id, sets) => (id, items)::sets)
                  [] cset
          in
            ListMergeSort.sort (fn ((id1, _), (id2, _)) => Int.>(id1, id2)) itemSets
          end

    fun dump gram cset = let
          val items2s = ItemSet.toString gram
          fun pr (id, items) = print(concat[
                  StringCvt.padLeft #"" "" 2 (Int.toString id), "": "",
                  items2s items, ""\n""
                ])
          in
            List.app pr cset
          end

  end;

structure Ex0 : sig
    val g : GrammarRep.t
    val cset : CanonicalSets.t
  end = struct

    local
      datatype sym = datatype GrammarRep.sym
      fun nt s = NT(Nonterm.nterm s)
      fun tok s = TOK(Token.token s)
      fun prod (lhs, rhs) = (Nonterm.nterm lhs, rhs)
    in
    val g = GrammarRep.make (List.map prod [
            (""S'"", [nt ""E""]),
            (""E"", [nt ""E"", tok ""+"", nt ""T""]),
            (""E"", [nt ""T""]),
            (""T"", [tok ""num""])
          ])
    val cset = CanonicalSets.items g
    end (* local *)

  end

structure Ex1 =
  struct

    local
      datatype sym = datatype GrammarRep.sym
      fun nt s = NT(Nonterm.nterm s)
      fun tok s = TOK(Token.token s)
      fun prod (lhs, rhs) = (Nonterm.nterm lhs, rhs)
    in
    val g = GrammarRep.make (List.map prod [
            (""S'"", [nt ""E""]),
            (""E"", [nt ""E"", tok ""+"", nt ""T""]),
            (""E"", [nt ""T""]),
            (""T"", [tok ""num""]),
            (""T"", [tok ""("", nt ""E"", tok "")""])
          ])
    val cset = CanonicalSets.items g
    end (* local *)

  end
"," *** 2020-12-22 16:03 --- John Reppy --- Fixed for 110.99"
275,1,"Open",3,103,"John Reppy",103,"John Reppy","2020-10-19 00:03","","2020-12-18 09:30","ml-ulex produces a confusing error message","The actual syntax error is the extra "");"" between the two rules.   Removing the %arg directive results in a useful error message.",0,0,0,"All","All","ML-Ulex","Accepted As Bug","Minor","","110.98.1","","","<jhr@aeneas> ml-ulex bug.lex
[ml-ulex: parsing]
** uncaught exception Fail [Fail: Cannot have both %structure and %header]
  raised at ml-lpt/lib/err-handler.sml:261.63
  raised at FrontEnds/common/lex-spec.sml:57.16-57.62
","%name LangFLex;

%arg (lexErr);

<INITIAL>.              => (lexErr(
                              (yypos, yypos),
                              [""bad character `"", String.toString yytext, ""'""]);
                            continue());
                            );
<INITIAL> <<EOF>>       => (T.EOF);
"," *** 2020-12-18 09:30 --- John Reppy --- It appears that several things are going on here.  First, the error message uses the term ""%structure"", but that only applies in ml-lex compatibility mode.  It should be ""%name"" when in ml-ulex mode.  The source of the error is probably an error repair that introduces a ""%structure"" directive, but because the error message is actually being generated by raising the ""Fail"" exception, the syntax errors are not reported. ~  ~ The correct fix is to build a proper parse-tree representation of the specification and then error check it, instead of trying to check for some kinds of errors during parsing."
276,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-11-22 09:32","2020-12-22 15:25","2020-12-22 15:25","missing option to control extra newlines in REPL","The REPL now prints an extra newline after the result of an
expression evaluation is printed. This will cause problems
for the automated production of transcripts for inclusion in
documents. Could you please at least make this controllable
via a settable option?
Submitted via web form by Alley Stoughton <alley.stoughton@icloud.com>
",0,0,0,"x86","MacOS X","Compiler","Fixed","Cosmetic","Big Sur","110.98.1","","","",""," *** 2020-12-22 15:25 --- John Reppy --- The extra newline was a mistake.  We have reverted the behavior back to what 110.97 and earlier versions did."
277,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2020-11-25 08:56","2020-12-22 15:23","2020-12-22 15:23","Excess white space when pretty printing a module signature","When opening a structure that contains datatypes in the REPL,
extra blank lines (one per constructor) are printed after the
datatype spec.
Submitted via web form by John Reppy <jhr@cs.uchicago.edu>
",0,0,0,"None","Generic Unix","Compiler","Fixed","Cosmetic","","110.98.1","pretty printing ","","<jhr@aeneas> sml
Standard ML of New Jersey (64-bit) v110.98.1 [built: Tue Aug 25 16:59:36 2020]
- CM.autoload ""$/unix-lib.cm"";
[autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
[library $/unix-lib.cm is stable]
val it = true : bool

- open UnixPath;
[autoloading]
[autoloading done]
opening UnixPath
    type path_list = string list
    val getPath : unit -> path_list
    datatype access_mode = datatype access_mode = A_EXEC | A_READ | A_WRITE



    datatype file_type
      = F_BLK | F_CHR | F_DIR | F_REGULAR | F_SOCK | F_SYMLINK






    val findFile : path_list * access_mode list -> string -> string option
    val findFiles : path_list * access_mode list -> string -> string list
    val findFileOfType :
        path_list * file_type * access_mode list -> string -> string option
    val findFilesOfType :
        path_list * file_type * access_mode list -> string -> string list

-
","CM.autoload ""$/unix-lib.cm"";
open UnixPath;
"," *** 2020-12-22 15:23 --- John Reppy --- Fixed for 110.99"
278,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-01-10 14:26","2021-03-09 09:28","2021-03-09 09:28","ListMergeSort is documented as stable, but is not (esp. since 110.78 rewrite!)","When I upgraded from 110.74 to 110.9x to allow me to run SML on
more recent 64-bit only OSs, some 2006 code of mine broke in a very
subtle way.  I eventually tracked the problem down to a change to
ListMergeSort made in 110.78 (released December 24, 2014).

According to the documentation, available at

    https://www.smlnj.org/doc/smlnj-lib/Util/str-ListMergeSort.html

ListMergeSort.sort is documented as a stable sort (which aligns
with typical implementations of this algorithm).  This property has
in fact never been true when it is used as documented, but prior to
110.78 if it was misused, passing in a >= comparison function rather
than a > one, it would stably sort equal elements.  Since 110.78
neither comparison results in a stable sort. The change broke my
code, which admittedly was relying on the previous buggy behavior.
Additional comments:
Sorry it took me over six years to notice this.  It's not clear
what I should have reported as the version number, since the bug
exists in current versions, entered its most severe mutation in
110.78, but existed prior to that.

Submitted via web form by Melissa O'Neill <oneill@cs.hmc.edu>
",0,0,0,"All","All","SML/NJ Library","Fixed","Major","","110.99","lists, sorting","","unix% sml-v110.77
Standard ML of New Jersey v110.77 [built: Sat Aug 23 11:18:31 2014]
- [...]

- merge_sort (fn (x,y) => x mod 3 > y mod 3) [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14];
val it = [0,3,6,9,12,1,4,7,10,13,2,5,8,11,14] : int list

- ListMergeSort.sort (fn (x,y) => x mod 3 > y mod 3) [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14];
val it = [12,9,6,3,0,13,10,7,4,1,14,11,8,5,2] : int list

- ListMergeSort.sort (fn (x,y) => x mod 3 >= y mod 3) [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14];
val it = [0,3,6,9,12,1,4,7,10,13,2,5,8,11,14] : int list

unix% sml-v110.99
Standard ML of New Jersey (64-bit) v110.99 [built: Thu Dec 24 11:47:23 2020]
- CM.make ""$/smlnj-lib.cm"";
[autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
[library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
[New bindings added.]
val it = true : bool
- ListMergeSort.sort (fn (x,y) => x mod 3 > y mod 3) [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14];
val it = [12,9,0,6,3,13,10,1,7,4,14,11,2,8,5] : int list
- ListMergeSort.sort (fn (x,y) => x mod 3 >= y mod 3) [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14];
val it = [3,6,0,9,12,4,7,1,10,13,5,8,2,11,14] : int list
","(* Load this code old-style with use. *)

(* Load SML/NJ ListMergeSort *)

CM.make ""$/smlnj-lib.cm"";

(* Alternative (classic/simple) implementation. *)

local
    fun merge gt ([], ys) = ys
      | merge gt (xs, []) = xs
      | merge gt (xs as x::xs', ys as y::ys') =
          if gt(x, y) then y :: merge gt (xs, ys')
                      else x :: merge gt (xs', ys)
in
    fun merge_sort gt []  = []
      | merge_sort gt [x] = [x]
      | merge_sort gt xs  = let val ys = List.take (xs, length xs div 2)
                                val zs = List.drop (xs, length xs div 2)
                            in  merge gt (merge_sort gt ys, merge_sort gt zs)
                            end
end;

fun gt_mod3 (x,y)  = x mod 3 >  y mod 3;
fun gte_mod3 (x,y) = x mod 3 >= y mod 3;

val inorder = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14];

val correct = merge_sort gt_mod3 inorder;
val incorrect = ListMergeSort.sort gt_mod3 inorder;"," *** 2021-03-09 09:28 --- John Reppy --- Fixed for 2021.1"
279,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-01-22 08:08","2021-09-01 15:30","2021-09-01 15:30","Real.toLargeInt returns zero for anything in range [-512,512]","When the result of Real.toLargeInt would fall within the range [-512,512],
it returns 0 instead.

The rounding mode selected makes no difference, except so far as to
determine whether a number falls within that range or not. For example,
Real.toLargeInt called with the real 1.0 will always return 0, but
when called with the value 512.1 it will return 0 in TO_ZERO mode or
513 in TO_POSINF mode.

Verified in 64-bit versions of 110.99 running on Arch Linux (from the
distribution package) and Mac (from official smlnj.org .pkg download).

Submitted via web form by Chris Cannam <cannam@all-day-breakfast.com>
",0,0,0,"None","Generic Unix","Basis Library","Fixed","Major","Linux and Mac, 64 bit","110.99","","","Standard ML of New Jersey (64-bit) v110.99 [built: Thu Dec 31 00:05:14 2020]
- Real.toLargeInt IEEEReal.TO_NEAREST 1.0;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val it = 0 : IntInf.int
-
","val n = Real.toLargeInt IEEEReal.TO_NEAREST 1.0
(* n should be 1, but is 0 *)
"," *** 2021-09-01 15:30 --- John Reppy --- Fixed for 2021.1 (and 110.99.2) by reimplementing the Real.toLargeInt code. *** 2021-02-21 12:46 --- John Reppy --- I think that this bug has something to do with 32 vs. 64-bit code.  The IntInf.int digits on 32-bit machines are 30-bits, which is smaller than the mantissa of a double, but on 64-bit machines, the digits are 62 bits.  We probably need to factor out the conversion into a target-size module (the way that we already did for IntInf.int to real conversions)."
280,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-01-26 09:38","2021-02-12 11:35","2021-02-12 11:35","110.99 config/install.sh -64 fails on macOS 10.15.7","Description: https://github.com/sml-nj/smlnj/issues/1

Kartik suggested building in a fresh location: This was a fresh location.

Kartik also said: I am on macOS 11.1 and I seem to be able to build from the source fairly easily.

That means either:
 - It works on MacOS 11.1, but not on MacOS 10.15.7. (Like Kartik, I don't think this is the case.)
 - config/install.sh makes an implicit assumption about the build environment.

Perhaps the output of `config/install.sh -64` that is attached can reveal what that might be.

I already have a large, ill-defined chunk of GNU-like tools in my environment, but apparently this is not enough.
Additional comments:
Perhaps disable the issue tracker at https://github.com/sml-nj/smlnj/issues if it is not intended for use.

On the other hand, if you had already done that, my response would have been to switch to another compiler because the entry barrier is too high.

Perhaps close the issue tracker and provide a README.md at the root saying where to report bugs.

This bug was reported as a consequence of this StackOverflow Q&A; note that I haven't tried to compile SML/NJ for a long time.

https://stackoverflow.com/questions/65897950/hot-to-install-sml-nj-from-source

Submitted via web form by Simon Shine <shreddedglory@gmail.com>
",0,0,0,"x86","MacOS X","Installer","Fixed","Cosmetic","10.15.7","11.99","","","config/install.sh: Using shell /bin/sh.
config/install.sh: SML root is /Users/simonshine/tmp/smlnj-src.
config/install.sh: Installation directory is /Users/simonshine/tmp/smlnj-src.
config/install.sh: Installing version 110.99.
config/install.sh: URL of source archive is http://smlnj.cs.uchicago.edu/dist/working/110.99/.
config/install.sh: installing /Users/simonshine/tmp/smlnj-src/bin/.arch-n-opsys
config/install.sh: Script /Users/simonshine/tmp/smlnj-src/bin/.arch-n-opsys reports ARCH=amd64; OPSYS=darwin; HEAP_SUFFIX=amd64-darwin.
config/install.sh: installing /Users/simonshine/tmp/smlnj-src/bin/.run-sml
config/install.sh: installing /Users/simonshine/tmp/smlnj-src/bin/.link-sml
config/install.sh: installing /Users/simonshine/tmp/smlnj-src/bin/ml-makedepend
config/install.sh: installing /Users/simonshine/tmp/smlnj-src/bin/heap2exec
/Users/simonshine/tmp/smlnj-src/config/unpack: Fetching run-time from http://smlnj.cs.uchicago.edu/dist/working/110.99/. Please stand by...
/Users/simonshine/tmp/smlnj-src/config/unpack: Trying runtime.tgz ...
2021-01-26 11:11:19 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99//runtime.tgz [334965/334965] -> ""/Users/simonshine/tmp/smlnj-src/runtime.tgz"" [1]
/Users/simonshine/tmp/smlnj-src/config/unpack: Fetching runtime.tgz was a success.
/Users/simonshine/tmp/smlnj-src/config/unpack: Un-GZIP-ing and un-TAR-ing run-time archive.
config/install.sh: Compiling the run-time system.
(make RUNTIME=""run.amd64-darwin"" VERSION=""v-amd64-darwin"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" CPP=""cc -x assembler-with-cpp -E -P -std=c99"" AS=""/usr/bin/as -arch x86_64"" TARGET=AMD64 DEFS=""  -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" XOBJS="""" XLIBS=""../c-libs/dl/libunix-dynload.a"" LD_LIBS="""" run.amd64-darwin)
(make MAKE=""make"" clean)
rm -f v-* run.* interactive-run \
		gen-sizes gen-offsets gen-bc-instr-def \
		gen-unix-signals gen-unix-sigtbl \
		ml-sizes.h mlstate-offsets.h bc-instr-def.h \
		system-signals.h unix-sigtbl.c \
		*.o prim.s primops.s
rm -r -f *.dSYM
(cd ../memory; make MAKE=""make"" clean)
rm -f v-* *.o libmem.a
(cd ../c-libs; make MAKE=""make"" clean)
for dir in posix-os smlnj-runtime smlnj-signals smlnj-sockets smlnj-prof smlnj-time smlnj-date smlnj-math smlnj-mp posix-error posix-filesys posix-io posix-procenv posix-process posix-signal posix-sysdb posix-tty smlnj-ccalls dl; do \
	  (cd $dir; echo ""cleaning $dir""; make MAKE=""make"" clean) ; \
	done
cleaning posix-os
rm -f v-* *.o libposix-os.a
cleaning smlnj-runtime
rm -f v-* *.o libsmlnj-runt.a
cleaning smlnj-signals
rm -f v-* *.o libsmlnj-sig.a
cleaning smlnj-sockets
rm -f v-* *.o libsmlnj-sock.a
cleaning smlnj-prof
rm -f v-* *.o libsmlnj-prof.a
cleaning smlnj-time
rm -f v-* *.o libsmlnj-time.a
cleaning smlnj-date
rm -f v-* *.o libsmlnj-date.a
cleaning smlnj-math
rm -f v-* *.o libsmlnj-math.a
cleaning smlnj-mp
rm -f v-* *.o libsmlnj-mp.a
cleaning posix-error
rm -f v-* *.o libposix-error.a
cleaning posix-filesys
rm -f v-* *.o ml_pathconf.h libposix-filesys.a
cleaning posix-io
rm -f v-* *.o libposix-io.a
cleaning posix-procenv
rm -f v-* *.o ml_sysconf.h libposix-procenv.a
cleaning posix-process
rm -f v-* *.o libposix-process.a
cleaning posix-signal
rm -f v-* *.o libposix-signal.a
cleaning posix-sysdb
rm -f v-* *.o libposix-sysdb.a
cleaning posix-tty
rm -f v-* *.o libposix-tty.a
cleaning smlnj-ccalls
rm -f v-* *.o *.s libsmlnj-ccalls.a
cleaning dl
rm -f v-* *.o libunix-dynload.a
rm -f v-* *.o
(cd ../gc; make MAKE=""make"" clean)
rm -f v-* *.o libgc.a libmp-gc.a
(cd ../mp; make MAKE=""make"" clean)
rm -f v-* *.o libmp.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -I../config -I../objs -I../include ../config/gen-common.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../config -I../objs -I../include -o gen-sizes ../config/gen-sizes.c gen-common.o
./gen-sizes
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/main.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../c-libs ../c-libs/c-libraries.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -I../config -I../objs -I../include -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC ../config/unix-signals.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -I../config -I../objs -I../include -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -o gen-unix-signals ../config/gen-unix-signals.c unix-signals.o gen-common.o
./gen-unix-signals
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../c-libs/unix-raise-syserr.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/ml-options.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/boot.c
../kernel/boot.c:480:1: warning: non-void function does not return a value in all control paths [-Wreturn-type]
} /* end of LookupPerID */
^
1 warning generated.
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/load-ml.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/run-ml.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/globals.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/ml-state.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/error.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/timers.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/unix-timers.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/qualify-name.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/swap-bytes.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../mach-dep/unix-fault.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../mach-dep/signal-util.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -I../config -I../objs -I../include -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -o gen-unix-sigtbl ../config/gen-unix-sigtbl.c unix-signals.o gen-common.o
./gen-unix-sigtbl
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../mach-dep/unix-signal.c
../mach-dep/unix-signal.c:123:1: warning: non-void function does not return a value in all control paths [-Wreturn-type]
} /* end of GetSignalState. */
^
1 warning generated.
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../mach-dep/unix-prof.c
../mach-dep/unix-prof.c:45:5: warning: incompatible function pointer types assigning to 'void (*)(int, struct __siginfo *, void *)' from 'void (*)(int)' [-Wincompatible-function-pointer-types]
    SIG_SetHandler (SIGVTALRM, SIG_DFL);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../mach-dep/signal-sysdep.h:95:26: note: expanded from macro 'SIG_SetHandler'
            __svec.sa_sigaction = (h);                          \
                                ^ ~~~
1 warning generated.
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../config -I../objs -I../include -o gen-offsets ../config/gen-offsets.c gen-common.o
./gen-offsets
cc -x assembler-with-cpp -E -P -std=c99 -D_ASM_ -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../mach-dep/AMD64.prim.asm > prim.s
/usr/bin/as -arch x86_64 -o prim.o prim.s
(cd ../c-libs/posix-os; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-os.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libposix-os.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-os-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c poll.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tmpname.c
rm -rf libposix-os.a
ar rcv libposix-os.a posix-os-lib.o poll.o tmpname.o
a - posix-os-lib.o
a - poll.o
a - tmpname.o
ranlib libposix-os.a
(cd ../c-libs/smlnj-runtime; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-runt.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libsmlnj-runt.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c smlnj-runt-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c alloc-code.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c argv.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c raw-argv.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c shift-argv.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c cmd-name.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c blast-in.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c blast-out.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c debug.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c dummy.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c export-heap.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c export-fun.c
export-fun.c:49:1: warning: non-void function does not return a value in all control paths [-Wreturn-type]
} /* end of _ml_RunT_export_fun */
^
1 warning generated.
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c gc-ctl.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c itick.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c mkexec.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c mkliterals.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c record1.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c record-concat.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c sysinfo.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c setitimer.c
rm -rf libsmlnj-runt.a
ar rcv libsmlnj-runt.a smlnj-runt-lib.o alloc-code.o argv.o raw-argv.o shift-argv.o cmd-name.o blast-in.o blast-out.o debug.o dummy.o export-heap.o export-fun.o gc-ctl.o itick.o mkexec.o mkliterals.o record1.o record-concat.o sysinfo.o setitimer.o
a - smlnj-runt-lib.o
a - alloc-code.o
a - argv.o
a - raw-argv.o
a - shift-argv.o
a - cmd-name.o
a - blast-in.o
a - blast-out.o
a - debug.o
a - dummy.o
a - export-heap.o
a - export-fun.o
a - gc-ctl.o
a - itick.o
a - mkexec.o
a - mkliterals.o
a - record1.o
a - record-concat.o
a - sysinfo.o
a - setitimer.o
ranlib libsmlnj-runt.a
(cd ../c-libs/smlnj-signals; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-sig.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libsmlnj-sig.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c smlnj-sig-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getsigmask.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getsigstate.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c listsignals.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c pause.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setsigmask.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setsigstate.c
rm -rf libsmlnj-sig.a
ar rcv libsmlnj-sig.a smlnj-sig-lib.o getsigmask.o getsigstate.o listsignals.o pause.o setsigmask.o setsigstate.o
a - smlnj-sig-lib.o
a - getsigmask.o
a - getsigstate.o
a - listsignals.o
a - pause.o
a - setsigmask.o
a - setsigstate.o
ranlib libsmlnj-sig.a
(cd ../c-libs/smlnj-prof; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-prof.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libsmlnj-prof.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c smlnj-prof-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c getpquantum.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c setpref.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c setptimer.c
rm -rf libsmlnj-prof.a
ar rcv libsmlnj-prof.a smlnj-prof-lib.o getpquantum.o setpref.o setptimer.o
a - smlnj-prof-lib.o
a - getpquantum.o
a - setpref.o
a - setptimer.o
ranlib libsmlnj-prof.a
(cd ../c-libs/smlnj-sockets; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-sock.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libsmlnj-sock.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c smlnj-sock-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c gethostname.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getnetbyname.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getnetbyaddr.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c gethostbyname.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c gethostbyaddr.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getprotbyname.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getprotbynum.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getservbyname.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getservbyport.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlBROADCAST.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlDEBUG.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlDONTROUTE.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlKEEPALIVE.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlLINGER.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlNODELAY.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlOOBINLINE.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlRCVBUF.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlREUSEADDR.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlSNDBUF.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getERROR.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getTYPE.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setNBIO.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getNREAD.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getATMARK.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getpeername.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getsockname.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c accept.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c bind.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c close.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c connect.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c listen.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c socket.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c shutdown.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c list-addr-families.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c list-sock-types.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getaddrfamily.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c inetany.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c from-inetaddr.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c to-inetaddr.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c recv.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c recvbuf.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c recvfrom.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c recvbuffrom.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sendbuf.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sendbufto.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c from-unixaddr.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c to-unixaddr.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c socketpair.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c util-mkhostent.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c util-mknetent.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c util-mkservent.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c util-sockopt.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tbl-addr-family.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tbl-sock-type.c
rm -rf libsmlnj-sock.a
ar rcv libsmlnj-sock.a smlnj-sock-lib.o gethostname.o getnetbyname.o getnetbyaddr.o gethostbyname.o gethostbyaddr.o getprotbyname.o getprotbynum.o getservbyname.o getservbyport.o ctlBROADCAST.o ctlDEBUG.o ctlDONTROUTE.o ctlKEEPALIVE.o ctlLINGER.o ctlNODELAY.o ctlOOBINLINE.o ctlRCVBUF.o ctlREUSEADDR.o ctlSNDBUF.o getERROR.o getTYPE.o setNBIO.o getNREAD.o getATMARK.o getpeername.o getsockname.o accept.o bind.o close.o connect.o listen.o socket.o shutdown.o list-addr-families.o list-sock-types.o getaddrfamily.o inetany.o from-inetaddr.o to-inetaddr.o recv.o recvbuf.o recvfrom.o recvbuffrom.o sendbuf.o sendbufto.o from-unixaddr.o to-unixaddr.o socketpair.o util-mkhostent.o util-mknetent.o util-mkservent.o util-sockopt.o tbl-addr-family.o tbl-sock-type.o
a - smlnj-sock-lib.o
a - gethostname.o
a - getnetbyname.o
a - getnetbyaddr.o
a - gethostbyname.o
a - gethostbyaddr.o
a - getprotbyname.o
a - getprotbynum.o
a - getservbyname.o
a - getservbyport.o
a - ctlBROADCAST.o
a - ctlDEBUG.o
a - ctlDONTROUTE.o
a - ctlKEEPALIVE.o
a - ctlLINGER.o
a - ctlNODELAY.o
a - ctlOOBINLINE.o
a - ctlRCVBUF.o
a - ctlREUSEADDR.o
a - ctlSNDBUF.o
a - getERROR.o
a - getTYPE.o
a - setNBIO.o
a - getNREAD.o
a - getATMARK.o
a - getpeername.o
a - getsockname.o
a - accept.o
a - bind.o
a - close.o
a - connect.o
a - listen.o
a - socket.o
a - shutdown.o
a - list-addr-families.o
a - list-sock-types.o
a - getaddrfamily.o
a - inetany.o
a - from-inetaddr.o
a - to-inetaddr.o
a - recv.o
a - recvbuf.o
a - recvfrom.o
a - recvbuffrom.o
a - sendbuf.o
a - sendbufto.o
a - from-unixaddr.o
a - to-unixaddr.o
a - socketpair.o
a - util-mkhostent.o
a - util-mknetent.o
a - util-mkservent.o
a - util-sockopt.o
a - tbl-addr-family.o
a - tbl-sock-type.o
ranlib libsmlnj-sock.a
(cd ../c-libs/smlnj-time; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-time.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libsmlnj-time.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c smlnj-time-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c gettime.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c timeofday.c
rm -rf libsmlnj-time.a
ar rcv libsmlnj-time.a smlnj-time-lib.o gettime.o timeofday.o
a - smlnj-time-lib.o
a - gettime.o
a - timeofday.o
ranlib libsmlnj-time.a
(cd ../c-libs/smlnj-date; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-date.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libsmlnj-date.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c smlnj-date-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c gmtime.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c localoffset.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c localtime.c
localtime.c:34:1: warning: non-void function does not return a value in all control paths [-Wreturn-type]
} /* end of _ml_Date_localtime */
^
1 warning generated.
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c mktime.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c strftime.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c unix-date.c
rm -rf libsmlnj-date.a
ar rcv libsmlnj-date.a smlnj-date-lib.o gmtime.o localoffset.o localtime.o mktime.o strftime.o unix-date.o
a - smlnj-date-lib.o
a - gmtime.o
a - localoffset.o
a - localtime.o
a - mktime.o
a - strftime.o
a - unix-date.o
ranlib libsmlnj-date.a
(cd ../c-libs/smlnj-math; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-math.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libsmlnj-math.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c smlnj-math-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlrndmode.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c atan64.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c cos64.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c exp64.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c log64.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sin64.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sqrt64.c
rm -rf libsmlnj-math.a
ar rcv libsmlnj-math.a smlnj-math-lib.o ctlrndmode.o atan64.o cos64.o exp64.o log64.o sin64.o sqrt64.o
a - smlnj-math-lib.o
a - ctlrndmode.o
a - atan64.o
a - cos64.o
a - exp64.o
a - log64.o
a - sin64.o
a - sqrt64.o
ranlib libsmlnj-math.a
(cd ../c-libs/posix-process; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-process.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libposix-process.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-process-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c osval.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fork.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c exec.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c execp.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c exece.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c waitpid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c exit.c
exit.c:23:1: warning: non-void function does not return a value [-Wreturn-type]
} /* end of _ml_P_Process_exit */
^
1 warning generated.
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c kill.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c alarm.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c pause.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sleep.c
rm -rf libposix-process.a
ar rcv libposix-process.a posix-process-lib.o osval.o fork.o exec.o execp.o exece.o waitpid.o exit.o kill.o alarm.o pause.o sleep.o
a - posix-process-lib.o
a - osval.o
a - fork.o
a - exec.o
a - execp.o
a - exece.o
a - waitpid.o
a - exit.o
a - kill.o
a - alarm.o
a - pause.o
a - sleep.o
ranlib libposix-process.a
(cd ../c-libs/posix-procenv; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-procenv.a)
(make MAKE=""make"" clean)
rm -f v-* *.o ml_sysconf.h libposix-procenv.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-procenv-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getpid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getppid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getuid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c geteuid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getgid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getegid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setuid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setgid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getgroups.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getlogin.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getpgrp.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setsid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setpgid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c uname.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c time.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c times.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getenv.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c environ.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctermid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ttyname.c
VERSION=v-amd64-darwin CPP=""cc -x assembler-with-cpp -E -P -std=c99"" ../../config/gen-posix-names.sh _SC_ ml_sysconf.h
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sysconf.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c isatty.c
rm -rf libposix-procenv.a
ar rcv libposix-procenv.a posix-procenv-lib.o getpid.o getppid.o getuid.o geteuid.o getgid.o getegid.o setuid.o setgid.o getgroups.o getlogin.o getpgrp.o setsid.o setpgid.o uname.o time.o times.o getenv.o environ.o ctermid.o ttyname.o sysconf.o isatty.o
a - posix-procenv-lib.o
a - getpid.o
a - getppid.o
a - getuid.o
a - geteuid.o
a - getgid.o
a - getegid.o
a - setuid.o
a - setgid.o
a - getgroups.o
a - getlogin.o
a - getpgrp.o
a - setsid.o
a - setpgid.o
a - uname.o
a - time.o
a - times.o
a - getenv.o
a - environ.o
a - ctermid.o
a - ttyname.o
a - sysconf.o
a - isatty.o
ranlib libposix-procenv.a
(cd ../c-libs/posix-filesys; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-filesys.a)
(make MAKE=""make"" clean)
rm -f v-* *.o ml_pathconf.h libposix-filesys.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-filesys-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c osval.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c chdir.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getcwd.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c openf.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c umask.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c link.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c rename.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c symlink.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c mkdir.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c mkfifo.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c unlink.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c rmdir.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c readlink.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c stat.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c access.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c chmod.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fchmod.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c chown.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fchown.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ftruncate.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c utime.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c opendir.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c readdir.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c rewinddir.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c closedir.c
VERSION=v-amd64-darwin CPP=""cc -x assembler-with-cpp -E -P -std=c99"" ../../config/gen-posix-names.sh _PC_ ml_pathconf.h
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c pathconf.c
rm -rf libposix-filesys.a
ar rcv libposix-filesys.a posix-filesys-lib.o osval.o chdir.o getcwd.o openf.o umask.o link.o rename.o symlink.o mkdir.o mkfifo.o unlink.o rmdir.o readlink.o stat.o access.o chmod.o fchmod.o chown.o fchown.o ftruncate.o utime.o opendir.o readdir.o rewinddir.o closedir.o pathconf.o
a - posix-filesys-lib.o
a - osval.o
a - chdir.o
a - getcwd.o
a - openf.o
a - umask.o
a - link.o
a - rename.o
a - symlink.o
a - mkdir.o
a - mkfifo.o
a - unlink.o
a - rmdir.o
a - readlink.o
a - stat.o
a - access.o
a - chmod.o
a - fchmod.o
a - chown.o
a - fchown.o
a - ftruncate.o
a - utime.o
a - opendir.o
a - readdir.o
a - rewinddir.o
a - closedir.o
a - pathconf.o
ranlib libposix-filesys.a
(cd ../c-libs/posix-io; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-io.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libposix-io.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-io-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c osval.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c pipe.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dup.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dup2.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c close.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c read.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c readbuf.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c write.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c writebuf.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_d.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_gfd.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_sfd.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_gfl.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_sfl.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_l.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c lseek.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fsync.c
rm -rf libposix-io.a
ar rcv libposix-io.a posix-io-lib.o osval.o pipe.o dup.o dup2.o close.o read.o readbuf.o write.o writebuf.o fcntl_d.o fcntl_gfd.o fcntl_sfd.o fcntl_gfl.o fcntl_sfl.o fcntl_l.o lseek.o fsync.o
a - posix-io-lib.o
a - osval.o
a - pipe.o
a - dup.o
a - dup2.o
a - close.o
a - read.o
a - readbuf.o
a - write.o
a - writebuf.o
a - fcntl_d.o
a - fcntl_gfd.o
a - fcntl_sfd.o
a - fcntl_gfl.o
a - fcntl_sfl.o
a - fcntl_l.o
a - lseek.o
a - fsync.o
ranlib libposix-io.a
(cd ../c-libs/posix-sysdb; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-sysdb.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libposix-sysdb.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-sysdb-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getgrgid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getgrnam.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getpwuid.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getpwnam.c
rm -rf libposix-sysdb.a
ar rcv libposix-sysdb.a posix-sysdb-lib.o getgrgid.o getgrnam.o getpwuid.o getpwnam.o
a - posix-sysdb-lib.o
a - getgrgid.o
a - getgrnam.o
a - getpwuid.o
a - getpwnam.o
ranlib libposix-sysdb.a
(cd ../c-libs/posix-signal; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-signal.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libposix-signal.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-signal-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c osval.c
rm -rf libposix-signal.a
ar rcv libposix-signal.a posix-signal-lib.o osval.o
a - posix-signal-lib.o
a - osval.o
ranlib libposix-signal.a
(cd ../c-libs/posix-tty; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-tty.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libposix-tty.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-tty-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c osval.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcdrain.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcflow.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcflush.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcgetattr.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcgetpgrp.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcsendbreak.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcsetattr.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcsetpgrp.c
rm -rf libposix-tty.a
ar rcv libposix-tty.a posix-tty-lib.o osval.o tcdrain.o tcflow.o tcflush.o tcgetattr.o tcgetpgrp.o tcsendbreak.o tcsetattr.o tcsetpgrp.o
a - posix-tty-lib.o
a - osval.o
a - tcdrain.o
a - tcflow.o
a - tcflush.o
a - tcgetattr.o
a - tcgetpgrp.o
a - tcsendbreak.o
a - tcsetattr.o
a - tcsetpgrp.o
ranlib libposix-tty.a
(cd ../c-libs/posix-error; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-error.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libposix-error.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-error-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-name-val.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c errmsg.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c geterror.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c listerrors.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tbl-errno.c
rm -rf libposix-error.a
ar rcv libposix-error.a posix-error-lib.o posix-name-val.o errmsg.o geterror.o listerrors.o tbl-errno.o
a - posix-error-lib.o
a - posix-name-val.o
a - errmsg.o
a - geterror.o
a - listerrors.o
a - tbl-errno.o
ranlib libposix-error.a
(cd ../gc; make CHECK_HEAP="""" VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../objs -I../include -I../gc -I../bytecode"" libgc.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libgc.a libmp-gc.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode init-gc.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode call-gc.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode minor-gc.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode major-gc.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode flip.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode gc-util.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode big-objects.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode ml-objects.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode obj-info.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode build-literals.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode old-literals.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode record-ops.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode import-heap.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode export-heap.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode blast-in.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode blast-out.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode blast-gc.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode heap-in-util.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode heap-out-util.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode writer.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode mem-writer.c
mem-writer.c:105:1: warning: non-void function does not return a value [-Wreturn-type]
} /* end of Tell */
^
1 warning generated.
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode addr-hash.c
cc -m64 -std=c99 -c -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode c-globals-tbl.c
rm -rf libgc.a
ar rcv libgc.a init-gc.o call-gc.o minor-gc.o major-gc.o flip.o gc-util.o big-objects.o ml-objects.o obj-info.o build-literals.o old-literals.o record-ops.o  import-heap.o export-heap.o blast-in.o blast-out.o blast-gc.o heap-in-util.o heap-out-util.o writer.o mem-writer.o addr-hash.o c-globals-tbl.o
a - init-gc.o
a - call-gc.o
a - minor-gc.o
a - major-gc.o
a - flip.o
a - gc-util.o
a - big-objects.o
a - ml-objects.o
a - obj-info.o
a - build-literals.o
a - old-literals.o
a - record-ops.o
a - import-heap.o
a - export-heap.o
a - blast-in.o
a - blast-out.o
a - blast-gc.o
a - heap-in-util.o
a - heap-out-util.o
a - writer.o
a - mem-writer.o
a - addr-hash.o
a - c-globals-tbl.o
ranlib libgc.a
(cd ../memory; make 'OBJS=$(MMAP_OBJS)' VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../objs -I../include -I../gc -I../bytecode"" libmem.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libmem.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -I../bytecode -c mem-mmap.c
ar rcv libmem.a mem-mmap.o
a - mem-mmap.o
ranlib libmem.a
(cd ../c-libs/dl; make VERSION=""v-amd64-darwin"" MAKE=""make"" CC=""cc -m64 -std=c99"" CFLAGS=""-g -O2 -D_DARWIN_C_SOURCE"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libunix-dynload.a)
(make MAKE=""make"" clean)
rm -f v-* *.o libunix-dynload.a
echo ""v-amd64-darwin"" > v-amd64-darwin
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c unix-dynload-lib.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dlopen.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dlclose.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dlsym.c
cc -m64 -std=c99 -g -O2 -D_DARWIN_C_SOURCE -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dlerror.c
rm -rf libunix-dynload.a
ar rcv libunix-dynload.a unix-dynload-lib.o dlopen.o dlclose.o dlsym.o dlerror.o
a - unix-dynload-lib.o
a - dlopen.o
a - dlclose.o
a - dlsym.o
a - dlerror.o
ranlib libunix-dynload.a
cc -m64 -std=c99 -o run.amd64-darwin -g -O2 -D_DARWIN_C_SOURCE  main.o c-libraries.o unix-raise-syserr.o ml-options.o boot.o load-ml.o run-ml.o globals.o ml-state.o error.o timers.o unix-timers.o qualify-name.o swap-bytes.o unix-fault.o signal-util.o unix-signal.o unix-prof.o prim.o   ../c-libs/posix-os/libposix-os.a ../c-libs/smlnj-runtime/libsmlnj-runt.a ../c-libs/smlnj-signals/libsmlnj-sig.a ../c-libs/smlnj-prof/libsmlnj-prof.a ../c-libs/smlnj-sockets/libsmlnj-sock.a ../c-libs/smlnj-time/libsmlnj-time.a ../c-libs/smlnj-date/libsmlnj-date.a ../c-libs/smlnj-math/libsmlnj-math.a ../c-libs/posix-process/libposix-process.a ../c-libs/posix-procenv/libposix-procenv.a ../c-libs/posix-filesys/libposix-filesys.a ../c-libs/posix-io/libposix-io.a ../c-libs/posix-sysdb/libposix-sysdb.a ../c-libs/posix-signal/libposix-signal.a ../c-libs/posix-tty/libposix-tty.a ../c-libs/posix-error/libposix-error.a ../gc/libgc.a ../memory/libmem.a ../c-libs/dl/libunix-dynload.a
ld: warning: ignoring file ../c-libs/posix-os/libposix-os.a, building for macOS-x86_64 but attempting to link with file built for macOS-x86_64
ld: warning: ld: warning: ignoring file ../c-libs/smlnj-runtime/libsmlnj-runt.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ignoring file ../c-libs/smlnj-prof/libsmlnj-prof.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ld: warning: ignoring file ../c-libs/smlnj-time/libsmlnj-time.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ld: warning: ignoring file ../c-libs/smlnj-signals/libsmlnj-sig.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ld: warning: ignoring file ../c-libs/posix-sysdb/libposix-sysdb.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ld: warning: ignoring file ../c-libs/smlnj-date/libsmlnj-date.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ld: warning: ignoring file ../c-libs/posix-signal/libposix-signal.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ld: warning: ignoring file ../c-libs/smlnj-math/libsmlnj-math.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ld: warning: ld: warning: ignoring file ../c-libs/posix-io/libposix-io.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ld: warning: ignoring file ../c-libs/posix-process/libposix-process.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ld: warning: ignoring file ../c-libs/posix-error/libposix-error.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ld: warning: ignoring file ../c-libs/dl/libunix-dynload.a, building for macOS-x86_64 but attempting to link with file built for macOS-x86_64
ld: warning: ignoring file ../memory/libmem.a, building for macOS-x86_64 but attempting to link with file built for macOS-x86_64
ld: warning: ignoring file ../c-libs/posix-filesys/libposix-filesys.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ignoring file ../c-libs/posix-tty/libposix-tty.a, building for macOS-x86_64 but attempting to link with file built for macOS-x86_64
ld: warning: ignoring file ../gc/libgc.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
ld: warning: ignoring file ../c-libs/posix-procenv/libposix-procenv.a, building for macOS-x86_64 but attempting to link with file built for macOS-x86_64
ld: warning: ignoring file ../c-libs/smlnj-sockets/libsmlnj-sock.a, building for macOS-x86_64 but attempting to link with file built for unknown-unsupported file format ( 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x2F 0x20 0x20 0x20 0x20 0x20 0x20 0x20 )
Undefined symbols for architecture x86_64:
  ""_BO_AddrToCodeObjTag"", referenced from:
      _RunML in run-ml.o
  ""_BuildLiterals"", referenced from:
      _BootML in boot.o
  ""_ImportHeapImage"", referenced from:
      _LoadML in load-ml.o
  ""_InitHeap"", referenced from:
      _AllocMLState in ml-state.o
  ""_InvokeGC"", referenced from:
      _RunML in run-ml.o
  ""_InvokeGCWithRoots"", referenced from:
      _BootML in boot.o
  ""_ML_AllocArray"", referenced from:
      _RunML in run-ml.o
  ""_ML_AllocBytearray"", referenced from:
      _RunML in run-ml.o
  ""_ML_AllocCode"", referenced from:
      _BootML in boot.o
  ""_ML_AllocRealdarray"", referenced from:
      _RunML in run-ml.o
  ""_ML_AllocString"", referenced from:
      _BootML in boot.o
      _RunML in run-ml.o
  ""_ML_AllocVector"", referenced from:
      _RunML in run-ml.o
  ""_ML_CString"", referenced from:
      _RaiseSysError in unix-raise-syserr.o
      _BootML in boot.o
      _RunML in run-ml.o
      _GetSignalMask in unix-signal.o
  ""_ML_SysConstList"", referenced from:
      _ListSignals in unix-signal.o
  ""_NeedGC"", referenced from:
      _BootML in boot.o
      _RunML in run-ml.o
  ""_POSIX_Error_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_POSIX_FileSys_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_POSIX_IO_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_POSIX_OS_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_POSIX_ProcEnv_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_POSIX_Process_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_POSIX_Signal_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_POSIX_SysDB_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_POSIX_TTY_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_ParseHeapParams"", referenced from:
      _main in main.o
  ""_RecordCSymbol"", referenced from:
      _InitCFunList in c-libraries.o
      _RecordGlobals in globals.o
  ""_SMLNJ_Date_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_SMLNJ_Math_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_SMLNJ_Prof_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_SMLNJ_RunT_Library"", referenced from:
      _InitCFunList in c-libraries.o
      _CLibs in c-libraries.o
  ""_SMLNJ_Sig_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_SMLNJ_Sock_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_SMLNJ_Time_Library"", referenced from:
      _CLibs in c-libraries.o
  ""_UNIX_Dynload_Library"", referenced from:
      _CLibs in c-libraries.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[1]: *** [run.amd64-darwin] Error 1
make: *** [all] Error 2
config/install.sh: !!! Run-time system build failed for some reason.
",""," *** 2021-02-12 11:35 --- John Reppy --- We were unable to reproduce this problem. After some investigation, it appears that the problem was inconsistent  build tools being picked up from the user's path.  To protect against  this issue, I've made the paths to the ""ar"" and ""ranlib"" tools absolute. ~ "
281,2,"Closed",3,103,"John Reppy",106,"David MacQueen","2021-02-16 10:55","2021-11-09 21:03","2021-11-09 21:03","Redundant error messages for when a constructor name is misspelled","If a qualified constructor name is misspelled, we get two or three error messages, instead of just one.  In particular, the ""variable found where constructor is required"" is bogus, since qualified variables can never appear in a pattern.",0,0,0,"All","All","Compiler","Accepted As Bug","Cosmetic","2021.0","110.99","error messages","","<jhr@Froh> sml
Standard ML of New Jersey (64-bit) v110.99 [built: Thu Dec 24 11:47:23 2020]
- structure A = struct datatype t = Foo | Bar end;
structure A : sig
  datatype t = Bar | Foo
end
- fun f x = (case x of A.Baz => 1 | _ => 2);
stdIn:2.22-2.27 Error: unbound variable or constructor: Baz in path A.Baz
stdIn:2.22-2.27 Error: variable found where constructor is required: A.Baz
- fun g x = (case x of A.Baz _ => 1 | _ => 2);
stdIn:1.23-1.28 Error: unbound variable or constructor: Baz in path A.Baz
stdIn:1.23-1.28 Error: variable found where constructor is required: A.Baz
stdIn:1.23-1.30 Error: constant constructor applied to argument in pattern:bogus
","structure A = struct datatype t = Foo | Bar end;
fun f x = (case x of A.Baz => 1 | _ => 2);
fun g x = (case x of A.Baz _ => 1 | _ => 2);"," *** 2021-11-09 21:03 --- David MacQueen --- Bug closed on 2021.11.9. ~ Fix required rewriting substantial portions of elabPat (albacore.sml) to deal more correctly with constructors vs variables in patterns.  This required revision of the Absyn.value type (adding an ERRORid constructor) and modifying and adding several functions in ElabData/staticenv/lookup.sml.  The function ElabUtil.makeAPPpat was eliminated, and ElabUtil.pat_id was cleaned up.  Portions of elabPat in ElabCore dealing with variables, constant data constructors and constructor applications were revised to improve error handling and reporting. ~ "
282,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-02-28 01:11","2022-06-01 18:08","2022-06-01 18:08","Error in register allocation","The following code causes an issue in, I believe, register allocation, manifesting as a uncaught exception and the message ""Error: MLRisc bug: RegisterAllocator.chooseVictim"".
Additional comments:
I wasn't able to find severity guidelines, so sorry if this is mislabeled.

Submitted via web form by Cooper Pierce <cppierce@andrew.cmu.edu>
",0,0,0,"x86","Linux","Compiler","Won't Fix","Major","5.10.11-arch1-1","v110.99","","","Standard ML of New Jersey (64-bit) v110.99 [built: Thu Dec 31 00:05:14 2020]
fun foo ([], []) = foo ([], []) ^ ""A""
  | foo (_, _) = foo ([], []) ^ ""A"";
=========== K=12 ===========
1[1] <-->
2[2] <-->
3[3] <-->
5[5] <-->
6[6] <-->
8[8] <-->
9[9] <-->
10[10] <-->
512r <--> 10[10] 9[9] 8[8] 6[6] 5[5] 3[3] 2[2] 1[1]
513a => 514r
514r <--> 10[10] 9[9] 8[8] 6[6] 5[5] 3[3] 2[2] 1[1]
515r <--> 10[10] 6[6] 5[5] 516r 517r 518r 519r 520r 521r 3[3] 2[2] 1[1]
516r <--> 10[10] 5[5] 517r 518r 519r 520r 521r 523r 531 530 515r 3[3] 2[2] 1[1]
517r <--> 10[10] 518r 519r 520r 521r 523r 531 530 524 5[5] 516r 515r 2[2] 1[1]
518r <--> 10[10] 519r 520r 521r 523r 531 530 524 525 517r 5[5] 516r 515r 2[2]
519r <--> 10[10] 520r 521r 523r 531 530 524 525 526 518r 517r 5[5] 516r 515r
520r <--> 10[10] 521r 523r 531 530 524 525 526 527 519r 518r 517r 516r 515r
521r <--> 523r 531 530 524 525 526 527 528 520r 519r 518r 517r 516r 515r
523r <--> 531 521r 520r 519r 518r 517r 516r
524 <--> 557r 525 526 527 528 529a 530 531 521r 9[9] 8[8] 520r 519r 518r 6[6] 517r 5[5] 3[3] 2[2]
525 <--> 540r 539r 536r 535r 544r 546r 545r 549r 551r 550r 554r 556r 555r 526 527 528 529a 530 531 533r 524 521r 9[9] 8[8] 520r 519r 518r 6[6] 5[5] 3[3] 2[2]
526 <--> 540r 539r 536r 558a 1[1] 544r 546r 545r 549r 551r 550r 554r 556r 555r 527 528 529a 530 531 533r 534r 525 524 521r 9[9] 8[8] 520r 519r 6[6] 5[5] 3[3]
527 <--> 540r 539r 558a 1[1] 2[2] 544r 546r 545r 549r 551r 550r 554r 556r 555r 528 529a 530 531 533r 534r 535r 526 525 524 521r 9[9] 8[8] 520r 6[6] 5[5]
528 <--> 558a 1[1] 2[2] 3[3] 544r 546r 545r 549r 551r 550r 554r 556r 555r 529a 530 531 533r 534r 535r 536r 527 526 525 524 521r 9[9] 8[8] 6[6]
529a => 6[6]
530 <--> 540r 558a 1[1] 2[2] 3[3] 5[5] 6[6] 544r 546r 545r 549r 551r 550r 554r 556r 555r 531 533r 534r 535r 536r 537r 538r 529a 528 527 526 525 524 521r 9[9] 520r 519r 518r 517r 516r
531 <--> 558a 1[1] 2[2] 3[3] 5[5] 6[6] 8[8] 544r 546r 545r 549r 551r 550r 554r 556r 555r 533r 534r 535r 536r 537r 538r 539r 530 529a 528 527 526 525 524 523r 521r 520r 519r 518r 517r 516r
533r <--> 6[6] 534r 535r 536r 537r 538r 539r 540r 531 530 529a 528 527 526 525
534r <--> 535r 536r 537r 538r 539r 540r 533r 531 530 529a 528 527 526
535r <--> 6[6] 552r 547r 536r 537r 538r 539r 540r 542r 525 534r 533r 531 530 529a 528 527
536r <--> 6[6] 552r 547r 537r 538r 539r 540r 542r 525 526 535r 534r 533r 531 530 529a 528
537r <--> 538r 539r 540r 536r 535r 534r 533r 531 530 529a
538r <--> 539r 540r 537r 536r 535r 534r 533r 531 530
539r <--> 552r 547r 540r 542r 525 526 527 538r 537r 536r 535r 534r 533r 531
540r <--> 552r 547r 542r 525 526 527 530 539r 538r 537r 536r 535r 534r 533r
542r <--> 540r 539r 536r 535r
544r <--> 546r 545r 531 530 529a 528 527 526 525
545r <--> 544r 531 530 529a 528 527 526 525
546r <--> 544r 531 530 529a 528 527 526 525
547r <--> 540r 539r 536r 535r
549r <--> 551r 550r 531 530 529a 528 527 526 525
550r <--> 549r 531 530 529a 528 527 526 525
551r <--> 549r 531 530 529a 528 527 526 525
552r <--> 540r 539r 536r 535r
554r <--> 556r 555r 531 530 529a 528 527 526 525
555r <--> 554r 531 530 529a 528 527 526 525
556r <--> 554r 531 530 529a 528 527 526 525
557r <--> 524 9[9] 8[8] 6[6] 5[5] 3[3] 2[2]
558a => 1[1]
560r <--> 9[9] 8[8] 6[6] 5[5] 3[3] 2[2] 1[1]
561r <--> 563r 562a 9[9] 8[8] 6[6] 5[5] 3[3] 2[2] 1[1]
562a => 563r
563r <--> 561r 9[9] 8[8] 6[6] 5[5] 3[3] 2[2] 1[1]
Spill candidates:
515r 516r 517r 518r 519r 520r 531 524 525 526 527 528 530
Error: MLRisc bug: RegisterAllocator.chooseVictim

unexpected exception (bug?) in SML/NJ: Error [Error]
  raised at: ../../MLRISC/control/mlriscErrormsg.sml:21.14-21.19
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/Basics/stats/stats.sml:198.40
             ../compiler/TopLevel/interact/evalloop.sml:45.54
- ","fun foo ([], []) = foo ([], []) ^ ""A""
  | foo (_, _) = foo ([], []) ^ ""A"""," *** 2022-06-01 18:08 --- John Reppy --- Given that the MLRisc code generator will be going away, it is not worth the effort to diagnose and fix this problem.  The example does compile under 2021.1."
283,1,"Open",3,142,"Bug Submitter",100,"Nobody","2021-04-13 14:25","","2021-04-22 15:40","smlnj installation:  error in first cm file memory.cm from nlffi","
Submitted via web form by Alek <jplut@harakirimail.com>
",0,0,0,"x86","Linux","Installer","None","Critical","in 01.install.sh file","110.99","architecture_not_supported","","#####in 01.install.sh####

2021-04-13 21:03:49 +0300

config/install.sh
-default
64

config/install.sh: Using shell /bin/sh.
config/install.sh: SML root is /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME.
config/install.sh: Installation directory is /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME.
config/install.sh: Installing version 110.99.
config/install.sh: URL of source archive is http://smlnj.cs.uchicago.edu/dist/working/110.99/.
config/install.sh: installing /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME/bin/.arch-n-opsys
config/install.sh: Script /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME/bin/.arch-n-opsys reports ARCH=amd64; OPSYS=linux; HEAP_SUFFIX=amd64-linux.
config/install.sh: installing /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME/bin/.run-sml
config/install.sh: installing /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME/bin/.link-sml
config/install.sh: installing /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME/bin/ml-makedepend
config/install.sh: installing /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME/bin/heap2exec
/home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME/config/unpack: The run-time tree already exists.
config/install.sh: Compiling the run-time system.
(make CHECK_HEAP= RUNTIME=""run.amd64-linux"" VERSION=""v-amd64-linux"" AS=""as --64"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" CPP=""gcc -x assembler-with-cpp -E -P"" TARGET=AMD64 DEFS=""  -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" XOBJS="""" XLIBS=""../c-libs/dl/libunix-dynload.a"" LD_LIBS=""-lm -ldl"" run.amd64-linux)
...
...

...
...
Here all was Ok!
...

[compiling $/(ckit-lib.cm):ast/(group.cm):parse-to-ast.sml]
[code: 2565, data: 21, env: 1084 bytes]
[stabilizing $/ckit-lib.cm]
[creating directory /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME/ckit/src/.cm/amd64-unix]
[code: 874749, data: 31637, inlinable: 0, env: 51839 bytes]
[scanning $c/memory/memory.cm]
[parsing $c/memory/(memory.cm):memaccess.sig]

...
And here error apears!
...

[creating directory /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME/nlffi/lib/memory/.cm/SKEL]
[parsing $c/memory/(memory.cm):memalloc.sig]
[parsing $c/memory/(memory.cm):memory.sig]
[parsing $c/memory/(memory.cm):linkage.sig]
[parsing $c/memory/(memory.cm):bitop-fn.sml]
[parsing $c/memory/(memory.cm):memaccess-64-little.sml]
/home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99/SMLNJ_HOME/nlffi/lib/memory/memory.cm:39.1-39.39 Error: architecture not supported yet
[parsing $c/memory/(memory.cm):main-lib-unix.sml]
[parsing $c/memory/(memory.cm):memalloc-a4-unix.sml]
[parsing $c/memory/(memory.cm):memory.sml]
[parsing $c/memory/(memory.cm):linkage-dlopen.sml]
[parsing $c/memory/(memory.cm):mlrep-i32f64.sml]
FAILURE: stabilization of libraries failed
config/install.sh: !!! Installation of libraries and programs failed.

HOMEBREW_VERSION: 3.1.1-22-g586d25a
ORIGIN: https://github.com/Homebrew/brew
HEAD: 586d25a5227ce565cd7e35fc5db935b245944601
Last commit: 5 hours ago
Core tap ORIGIN: https://github.com/Homebrew/linuxbrew-core
Core tap HEAD: 45ae5f7b53f0659af9f228648d9d1d8e4916d642
Core tap last commit: 17 minutes ago
Core tap branch: master
HOMEBREW_PREFIX: /home/linuxbrew/.linuxbrew
HOMEBREW_CASK_OPTS: []
HOMEBREW_DISPLAY: :0
HOMEBREW_EDITOR: /home/linuxbrew/.linuxbrew/bin/nvim
Homebrew Ruby: 2.6.3 => /home/linuxbrew/.linuxbrew/Homebrew/Library/Homebrew/vendor/portable-ruby/2.6.3_2/bin/ruby
CPU: quad-core 64-bit skylake
Clang: 11.1 build (parse error)
Git: 2.31.1 => /home/linuxbrew/.linuxbrew/bin/git
Curl: 7.76.0 => /home/linuxbrew/.linuxbrew/opt/curl/bin/curl
Kernel: Linux 5.4.0-70-generic x86_64 GNU/Linux
OS: elementary OS 5.1.7 Hera (hera)
Host glibc: 2.27
/usr/bin/gcc: 8.4.0
/usr/bin/ruby: 2.5.1
glibc: N/A
gcc@5: N/A
xorg: N/A

HOMEBREW_CC: gcc-10
HOMEBREW_CXX: g++-10
CMAKE_PREFIX_PATH: /home/linuxbrew/.linuxbrew
HOMEBREW_GIT: git
ACLOCAL_PATH: /home/linuxbrew/.linuxbrew/share/aclocal
PATH: /home/linuxbrew/.linuxbrew/Homebrew/Library/Homebrew/shims/linux/super:/home/linuxbrew/.linuxbrew/opt/binutils/bin:/usr/bin:/bin:/usr/sbin:/sbin:/home/linuxbrew/.linuxbrew/opt/gcc/bin","/dist/working/110.99"," *** 2021-04-22 15:40 --- Limon Lime --- FIX: the first paragraph should be: ~ I made inline replacement on the line 39 of memory.cm file: ~ but Idont know which is better(will not fail) : ~ 1st variant: memaccess-a4s2i4l4f4d8.sml      (lambdasplit:infinity) ~ 2nd variant: (*# error architecture not supported yet*) ~  ~ *And last paragraph should be Linux or Mac users *** 2021-04-22 15:33 --- Limon Lime --- I made inline replace on the line of memory.cm: ~ but dont know which is better LINE 39: ~ 1st variant :(* error bla ~ 2nd variant  ~  ~ Now it fails when my little-endian system run this line of memory.cm: ~ memaccess-64-little.sml         (lambdasplit:infinity) ~  ~ I can't go ahead here, please help with installation because it too complex for me: ~ [scanning $c/memory/memory.cm] ~ [parsing $c/memory/(memory.cm):memaccess.sig] ~ [creating directory /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99.1/SMLNJ_HOME/nlffi/lib/memory/.cm/SKEL] ~ [parsing $c/memory/(memory.cm):memalloc.sig] ~ [parsing $c/memory/(memory.cm):memory.sig] ~ [parsing $c/memory/(memory.cm):linkage.sig] ~ [parsing $c/memory/(memory.cm):bitop-fn.sml] ~ [parsing $c/memory/(memory.cm):memaccess-64-little.sml] ~ [parsing $c/memory/(memory.cm):memaccess-a4s2i4l4f4d8.sml] ~ [parsing $c/memory/(memory.cm):main-lib-unix.sml] ~ [parsing $c/memory/(memory.cm):memalloc-a4-unix.sml] ~ [parsing $c/memory/(memory.cm):memory.sml] ~ [parsing $c/memory/(memory.cm):linkage-dlopen.sml] ~ [parsing $c/memory/(memory.cm):mlrep-i32f64.sml] ~ [compiling $c/memory/(memory.cm):bitop-fn.sml] ~ [creating directory /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99.1/SMLNJ_HOME/nlffi/lib/memory/.cm/GUID] ~ [creating directory /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99.1/SMLNJ_HOME/nlffi/lib/memory/.cm/amd64-unix] ~ [code: 6057, data: 1, env: 669, inlinable: 1529 bytes] ~ [compiling $c/memory/(memory.cm):mlrep-i32f64.sml] ~ [code: 3173, data: 21, env: 3678, inlinable: 2138 bytes] ~ [compiling $c/memory/(memory.cm):memaccess.sig] ~ [code: 81, data: 1, env: 2820 bytes] ~ [compiling $c/memory/(memory.cm):memalloc.sig] ~ [code: 81, data: 1, env: 214 bytes] ~ [compiling $c/memory/(memory.cm):memory.sig] ~ [code: 81, data: 1, env: 2975 bytes] ~ [compiling $c/memory/(memory.cm):memaccess-64-little.sml] ~ nlffi/lib/memory/memaccess-64-little.sml:3.48-3.66 Error: unbound structure: RawMemInlineT in path RawMemInlineT.w32l ~ nlffi/lib/memory/memaccess-64-little.sml:3.20-3.38 Error: unbound structure: RawMemInlineT in path RawMemInlineT.w32l ~ nlffi/lib/memory/memaccess-64-little.sml:5.35-5.53 Error: unbound structure: RawMemInlineT in path RawMemInlineT.w32s ~ nlffi/lib/memory/memaccess-64-little.sml:5.3-5.21 Error: unbound structure: RawMemInlineT in path RawMemInlineT.w32s ~ FAILURE: stabilization of libraries failed ~  ~ Linux Mac user who uses Homebrew you will see this error if you run `brew install juplutonic/homebrew-tap/smlnj` *** 2021-04-21 16:33 --- Limon Lime --- FIX: on the first line not the MACOSX! ~ uname -r 5.4.0-72-generic! *** 2021-04-21 16:29 --- Limon Lime --- ====Linux uname -m x86_64 uname-r ====MACOSX=========== ~ New 110.99.1: ~ aSame error while compiling NLFFI nlffi/lib/memory: ~ [parsing $c/memory/(memory.cm):mlrep-i32f64.sml] ~ FAILURE: stabilization of libraries failed ~ [[[[[[parsing $c/memory/(memory.cm):memaccess-64-little.sml] ~ /home/linuxbrew/.linuxbrew/Cellar/smlnj/110.99.1/SMLNJ_HOME/nlffi/lib/memory/memory.cm:39.1-39.39 Error: architecture not supported yet ~ ]]]]]] ~  ~ Maybe you need full logs ( 00.options.out 01.install.sh.cc 01.install.sh) ~  ~ /gist.github.com/d8cd35fafea51560db1cab047682042f ~ /gist.github.com/097fe5bcf4236871b89275127aabef70 ~ /gist.github.com/ad845584109f5d51c6ecf6b1433ac1ec ~ ====MACOSX (opsys DARWIN uname -r 19 uname -p i386====== ~ I don't need that, but I repeated same steps on MacOSX10.15 and result is the same. ~  ~ I don't understand the bottom line of this error, all tested platforms must be supportable, ~  install.sh should run without SIZE in patrameters, inspected config/_arch-n-opsys and nlffi/lib/memory/memory.cm should work fine. *** 2021-04-14 15:41 --- Limon Lime --- Component:            Installer ~                       Compilation of NLFFI ~ I also can repeat all steps (in MacOSX 10.15, if you need)."
284,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-04-18 14:22","2022-06-01 10:58","2022-06-01 10:58","Compiler bug: Contract: UsageMap on 132","The following code snippet produces:
Compiler bug: Contract: UsageMap on 132.

Submitted via web form by Nikolaos S. Papaspyrou <nickie@softlab.ntua.gr>
",0,0,0,"x86","MacOS X","Compiler","Fixed","Major","10.15.7","110.99","","","$ cat > valia.sml << EOF
fun g (l, a, b, x, y, d0, d1 : real, d2 : real, d3 : real) = (
    x - Real.fromInt(Array.sub(l, a));
    y - Real.fromInt(Array.sub(l, b))
)
EOF

$ sml valia.sml
Standard ML of New Jersey (64-bit) v110.99 [built: Thu Dec 24 11:47:23 2020]
[opening valia.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
Error: Compiler bug: Contract: UsageMap on 132
****** pass1 ******
 v129(v130[PV]) =
    v129(""bogus"")
 v101(v131[PV]) =
    v129(""bogus"")
 v91.1 -> v93[PV]
 v12(v103[C],v96[PR1]) =
    v1(v104[C],v80[PV],v81[I],v82[I],v83[R64],v84[R64],v86[R64],v87[R64],v133[PR2]) =
       v132.0 -> v88[R64]
       v133.0 -> v132[PF1]
       v133.1 -> v85[PV]
       length(v80) -> v46[I]
       v118(v105[I]) =
          real63_64(v105) -> v43[R64]
          length(v80) -> v59[I]
          v107(v106[I]) =
             real63_64(v106) -> v56[R64]
             subf64(v84,v56) -> v55[R64]
             v104(v55)
          if u63<(v82,v59) [v108] then
             subscript(v80,v82) -> v60[I]
             v107(v60)
          else
             {v93,(I63t)0,(I63t)0} -> v98
             v98.0 -> v110[PV]
             v98.1 -> v111[PV]
             v98.2 -> v112[PV]
             {""valia.sml:3.22-3.31"",v112} -> v114
             {v110,v111,v114} -> v113
             gethdlr() -> v117[FN]
             v117(v101,v113)
       if u63<(v81,v46) [v119] then
          subscript(v80,v81) -> v47[I]
          v118(v47)
       else
          {v93,(I63t)0,(I63t)0} -> v97
          v97.0 -> v121[PV]
          v97.1 -> v122[PV]
          v97.2 -> v123[PV]
          {""valia.sml:2.22-2.31"",v123} -> v125
          {v121,v122,v125} -> v124
          gethdlr() -> v128[FN]
          v128(v101,v124)
    v103(v1)
 {v12} -> v89
 v102(v89)","fun g (l, a, b, x, y, d0, d1 : real, d2 : real, d3 : real) = (
    x - Real.fromInt(Array.sub(l, a));
    y - Real.fromInt(Array.sub(l, b))
)
"," *** 2022-06-01 10:58 --- John Reppy --- Fixed for 110.99.3 and 2022.1 *** 2022-05-31 12:04 --- John Reppy --- It looks like this bug is in the CPSTrans module (CPS/convert/cpstrans.sml), which is producing bogus CPS IR."
285,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-05-07 09:53","2021-09-01 14:37","2021-09-01 14:37","Word8.toLargeInt is broken","Word8.toLargeInt produces badly incorrect answers.
Submitted via web form by Karl Crary <crary@cs.cmu.edu>
",0,0,0,"x86","Other","Basis Library","Fixed","Major","Windows 10","110.96","IntInf","","- Word8.toLargeInt 0w0;
val it = 128321952 : IntInf.int
","Word8.toLargeInt 0w0;

"," *** 2021-09-01 14:37 --- John Reppy --- Fixed in more recent versions."
286,2,"Closed",3,460,"Harrison Grodin",103,"John Reppy","2021-05-10 18:43","2021-09-22 19:45","2021-09-22 19:45","Installation of SML/NJ v110.99.1 fails in fresh Ubuntu 20.04/macOS 10.15","Following the installation instructions exactly, SML/NJ v110.99.1 fails to install in a fresh environment, whereas v110.99 and prior install successfully. (Oddly, though, installing v110.99.1 on my local machine worked.)

The installation script can be found here (although it's just an adaptation of the install.html instructions for GitHub Actions): https://github.com/ProjectSavanna/setup-sml/blob/master/src/installer.ts

I'm not sure what's causing this, or why v110.99.1 would be different from prior versions in this regard. The debug log from the fresh runner is included under ""transcript"".",0,0,0,"x86","Linux","Installer","Fixed","Critical","Ubuntu 20.04","v110.99.1","","https://github.com/ProjectSavanna/setup-sml/pull/32/checks?check_run_id=2550559979","2021-05-10T23:25:20.6841263Z ##[group]Run ./
2021-05-10T23:25:20.6841684Z with:
2021-05-10T23:25:20.6842101Z   smlnj-version: 110.99.1
2021-05-10T23:25:20.6842554Z ##[endgroup]
2021-05-10T23:25:20.9675075Z [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42 -f /home/runner/work/_temp/003271ad-a1f1-4191-84d1-67bf599c0c10
2021-05-10T23:25:20.9919146Z [command]/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh
2021-05-10T23:25:20.9970721Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: Using shell /bin/sh.
2021-05-10T23:25:20.9986091Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: SML root is /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42.
2021-05-10T23:25:21.0053300Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: Installation directory is /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42.
2021-05-10T23:25:21.0055377Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: Installing version 110.99.1.
2021-05-10T23:25:21.0057311Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: URL of source archive is http://smlnj.cs.uchicago.edu/dist/working/110.99.1/.
2021-05-10T23:25:21.0296374Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: installing /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/.arch-n-opsys
2021-05-10T23:25:21.0298854Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: Script /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/.arch-n-opsys reports ARCH=amd64; OPSYS=linux; HEAP_SUFFIX=amd64-linux.
2021-05-10T23:25:21.0301395Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: installing /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/.run-sml
2021-05-10T23:25:21.0303517Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: installing /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/.link-sml
2021-05-10T23:25:21.0364395Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: installing /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/ml-makedepend
2021-05-10T23:25:21.0366621Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: installing /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/heap2exec
2021-05-10T23:25:21.2038255Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching run-time from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:21.2047783Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying runtime.tgz ...
2021-05-10T23:25:21.3673662Z 2021-05-10 23:25:21 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//runtime.tgz [335244/335244] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/runtime.tgz"" [1]
2021-05-10T23:25:21.3675570Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching runtime.tgz was a success.
2021-05-10T23:25:21.3677163Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing run-time archive.
2021-05-10T23:25:21.3841847Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: Compiling the run-time system.
2021-05-10T23:25:21.3866256Z (make CHECK_HEAP= RUNTIME=""run.amd64-linux"" VERSION=""v-amd64-linux"" AS=""as --64"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" CPP=""gcc -x assembler-with-cpp -E -P"" TARGET=AMD64 DEFS=""  -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" XOBJS="""" XLIBS=""../c-libs/dl/libunix-dynload.a"" LD_LIBS=""-lm -ldl"" run.amd64-linux)
2021-05-10T23:25:21.3888162Z make[1]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/objs'
2021-05-10T23:25:21.3890737Z (make MAKE=""make"" clean)
2021-05-10T23:25:21.3970573Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/objs'
2021-05-10T23:25:21.3974408Z rm -f v-* run.* interactive-run \
2021-05-10T23:25:21.3989916Z 	gen-sizes gen-offsets gen-bc-instr-def \
2021-05-10T23:25:21.3991369Z 	gen-unix-signals gen-unix-sigtbl \
2021-05-10T23:25:21.3993735Z 	ml-sizes.h mlstate-offsets.h bc-instr-def.h \
2021-05-10T23:25:21.3994561Z 	system-signals.h unix-sigtbl.c \
2021-05-10T23:25:21.3995054Z 	*.o prim.s primops.s
2021-05-10T23:25:21.3995520Z rm -r -f *.dSYM
2021-05-10T23:25:21.4003165Z (cd ../memory; make MAKE=""make"" clean)
2021-05-10T23:25:21.4023882Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/memory'
2021-05-10T23:25:21.4027137Z rm -f v-* *.o libmem.a
2021-05-10T23:25:21.4045475Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/memory'
2021-05-10T23:25:21.4046916Z (cd ../c-libs; make MAKE=""make"" clean)
2021-05-10T23:25:21.4067085Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs'
2021-05-10T23:25:21.4071438Z for dir in posix-os smlnj-runtime smlnj-signals smlnj-sockets smlnj-prof smlnj-time smlnj-date smlnj-math smlnj-mp posix-error posix-filesys posix-io posix-procenv posix-process posix-signal posix-sysdb posix-tty smlnj-ccalls dl; do \
2021-05-10T23:25:21.4073074Z   (cd $dir; echo ""cleaning $dir""; make MAKE=""make"" clean) ; \
2021-05-10T23:25:21.4073889Z done
2021-05-10T23:25:21.4082489Z cleaning posix-os
2021-05-10T23:25:21.4096345Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-os'
2021-05-10T23:25:21.4097943Z rm -f v-* *.o libposix-os.a
2021-05-10T23:25:21.4113239Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-os'
2021-05-10T23:25:21.4115126Z cleaning smlnj-runtime
2021-05-10T23:25:21.4129639Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-runtime'
2021-05-10T23:25:21.4130636Z rm -f v-* *.o libsmlnj-runt.a
2021-05-10T23:25:21.4147136Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-runtime'
2021-05-10T23:25:21.4148473Z cleaning smlnj-signals
2021-05-10T23:25:21.4162394Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-signals'
2021-05-10T23:25:21.4163679Z rm -f v-* *.o libsmlnj-sig.a
2021-05-10T23:25:21.4179650Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-signals'
2021-05-10T23:25:21.4208449Z cleaning smlnj-sockets
2021-05-10T23:25:21.4223716Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-sockets'
2021-05-10T23:25:21.4224778Z rm -f v-* *.o libsmlnj-sock.a
2021-05-10T23:25:21.4241121Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-sockets'
2021-05-10T23:25:21.4243126Z cleaning smlnj-prof
2021-05-10T23:25:21.4258266Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-prof'
2021-05-10T23:25:21.4259218Z rm -f v-* *.o libsmlnj-prof.a
2021-05-10T23:25:21.4270501Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-prof'
2021-05-10T23:25:21.4272839Z cleaning smlnj-time
2021-05-10T23:25:21.4286314Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-time'
2021-05-10T23:25:21.4287356Z rm -f v-* *.o libsmlnj-time.a
2021-05-10T23:25:21.4301415Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-time'
2021-05-10T23:25:21.4305370Z cleaning smlnj-date
2021-05-10T23:25:21.4320533Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-date'
2021-05-10T23:25:21.4321785Z rm -f v-* *.o libsmlnj-date.a
2021-05-10T23:25:21.4338639Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-date'
2021-05-10T23:25:21.4361786Z cleaning smlnj-math
2021-05-10T23:25:21.4375212Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-math'
2021-05-10T23:25:21.4376204Z rm -f v-* *.o libsmlnj-math.a
2021-05-10T23:25:21.4391971Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-math'
2021-05-10T23:25:21.4398023Z cleaning smlnj-mp
2021-05-10T23:25:21.4412409Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-mp'
2021-05-10T23:25:21.4413660Z rm -f v-* *.o libsmlnj-mp.a
2021-05-10T23:25:21.4429654Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-mp'
2021-05-10T23:25:21.4431329Z cleaning posix-error
2021-05-10T23:25:21.4445676Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-error'
2021-05-10T23:25:21.4446945Z rm -f v-* *.o libposix-error.a
2021-05-10T23:25:21.4462875Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-error'
2021-05-10T23:25:21.4467394Z cleaning posix-filesys
2021-05-10T23:25:21.4481794Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-filesys'
2021-05-10T23:25:21.4483379Z rm -f v-* *.o ml_pathconf.h libposix-filesys.a
2021-05-10T23:25:21.4500733Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-filesys'
2021-05-10T23:25:21.4505079Z cleaning posix-io
2021-05-10T23:25:21.4519088Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-io'
2021-05-10T23:25:21.4520314Z rm -f v-* *.o libposix-io.a
2021-05-10T23:25:21.4537598Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-io'
2021-05-10T23:25:21.4541751Z cleaning posix-procenv
2021-05-10T23:25:21.4555939Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-procenv'
2021-05-10T23:25:21.4557258Z rm -f v-* *.o ml_sysconf.h libposix-procenv.a
2021-05-10T23:25:21.4591885Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-procenv'
2021-05-10T23:25:21.4593219Z cleaning posix-process
2021-05-10T23:25:21.4607696Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-process'
2021-05-10T23:25:21.4608694Z rm -f v-* *.o libposix-process.a
2021-05-10T23:25:21.4630279Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-process'
2021-05-10T23:25:21.4633925Z cleaning posix-signal
2021-05-10T23:25:21.4647117Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-signal'
2021-05-10T23:25:21.4648327Z rm -f v-* *.o libposix-signal.a
2021-05-10T23:25:21.4660422Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-signal'
2021-05-10T23:25:21.4661620Z cleaning posix-sysdb
2021-05-10T23:25:21.4674550Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-sysdb'
2021-05-10T23:25:21.4682466Z rm -f v-* *.o libposix-sysdb.a
2021-05-10T23:25:21.4688931Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-sysdb'
2021-05-10T23:25:21.4690167Z cleaning posix-tty
2021-05-10T23:25:21.4702793Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-tty'
2021-05-10T23:25:21.4703942Z rm -f v-* *.o libposix-tty.a
2021-05-10T23:25:21.4715917Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-tty'
2021-05-10T23:25:21.4717125Z cleaning smlnj-ccalls
2021-05-10T23:25:21.4730524Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-ccalls'
2021-05-10T23:25:21.4731712Z rm -f v-* *.o *.s libsmlnj-ccalls.a
2021-05-10T23:25:21.4744079Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-ccalls'
2021-05-10T23:25:21.4745104Z cleaning dl
2021-05-10T23:25:21.4758235Z make[4]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/dl'
2021-05-10T23:25:21.4759380Z rm -f v-* *.o libunix-dynload.a
2021-05-10T23:25:21.4772267Z make[4]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/dl'
2021-05-10T23:25:21.4774166Z rm -f v-* *.o
2021-05-10T23:25:21.4788865Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs'
2021-05-10T23:25:21.4789771Z (cd ../gc; make MAKE=""make"" clean)
2021-05-10T23:25:21.4812016Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/gc'
2021-05-10T23:25:21.4812909Z rm -f v-* *.o libgc.a libmp-gc.a
2021-05-10T23:25:21.4829801Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/gc'
2021-05-10T23:25:21.4831850Z (cd ../mp; make MAKE=""make"" clean)
2021-05-10T23:25:21.4850854Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/mp'
2021-05-10T23:25:21.4852033Z rm -f v-* *.o libmp.a
2021-05-10T23:25:21.4867299Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/mp'
2021-05-10T23:25:21.4870459Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/objs'
2021-05-10T23:25:21.4872286Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:21.4881612Z gcc -std=gnu99 -Wall -c -O2 -m64 -I../config -I../objs -I../include ../config/gen-common.c
2021-05-10T23:25:21.5457763Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../config -I../objs -I../include -o gen-sizes ../config/gen-sizes.c gen-common.o
2021-05-10T23:25:21.6206292Z ./gen-sizes
2021-05-10T23:25:21.6212231Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/main.c
2021-05-10T23:25:21.6720352Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../c-libs ../c-libs/c-libraries.c
2021-05-10T23:25:21.7251718Z gcc -std=gnu99 -Wall -c -O2 -m64 -I../config -I../objs -I../include -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC ../config/unix-signals.c
2021-05-10T23:25:21.7758322Z gcc -std=gnu99 -Wall -O2 -m64 -I../config -I../objs -I../include -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -o gen-unix-signals ../config/gen-unix-signals.c unix-signals.o gen-common.o
2021-05-10T23:25:21.8292053Z ./gen-unix-signals
2021-05-10T23:25:21.8301346Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../c-libs/unix-raise-syserr.c
2021-05-10T23:25:21.8733729Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/ml-options.c
2021-05-10T23:25:21.9083596Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/boot.c
2021-05-10T23:25:21.9364758Z ../kernel/boot.c: In function ‘LookupPerID’:
2021-05-10T23:25:21.9368847Z ../kernel/boot.c:480:1: warning: control reaches end of non-void function [-Wreturn-type]
2021-05-10T23:25:21.9369604Z   480 | } /* end of LookupPerID */
2021-05-10T23:25:21.9370018Z       | ^
2021-05-10T23:25:21.9867427Z ../kernel/boot.c: In function ‘BootML’:
2021-05-10T23:25:21.9869091Z ../kernel/boot.c:66:17: warning: ‘max_boot_path_len’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:21.9870126Z    66 |     int         max_boot_path_len;
2021-05-10T23:25:21.9870692Z       |                 ^~~~~~~~~~~~~~~~~
2021-05-10T23:25:22.0404037Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/load-ml.c
2021-05-10T23:25:22.0686487Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/run-ml.c
2021-05-10T23:25:22.1309551Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/globals.c
2021-05-10T23:25:22.1700903Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/ml-state.c
2021-05-10T23:25:22.2182330Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/error.c
2021-05-10T23:25:22.2578188Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/timers.c
2021-05-10T23:25:22.2883535Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/unix-timers.c
2021-05-10T23:25:22.3548700Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/qualify-name.c
2021-05-10T23:25:22.3831530Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../kernel/swap-bytes.c
2021-05-10T23:25:22.4077731Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../mach-dep/unix-fault.c
2021-05-10T23:25:22.4918654Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../mach-dep/signal-util.c
2021-05-10T23:25:22.5091911Z ../mach-dep/signal-util.c: In function ‘ChooseSignal’:
2021-05-10T23:25:22.5093458Z ../mach-dep/signal-util.c:29:13: warning: variable ‘j’ set but not used [-Wunused-but-set-variable]
2021-05-10T23:25:22.5094408Z    29 |     int  i, j, delta;
2021-05-10T23:25:22.5095096Z       |             ^
2021-05-10T23:25:22.5331571Z gcc -std=gnu99 -Wall -O2 -m64 -I../config -I../objs -I../include -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -o gen-unix-sigtbl ../config/gen-unix-sigtbl.c unix-signals.o gen-common.o
2021-05-10T23:25:22.5879379Z ./gen-unix-sigtbl
2021-05-10T23:25:22.5884563Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../mach-dep/unix-signal.c
2021-05-10T23:25:22.6124414Z ../mach-dep/unix-signal.c: In function ‘GetSignalState’:
2021-05-10T23:25:22.6128255Z ../mach-dep/unix-signal.c:123:1: warning: control reaches end of non-void function [-Wreturn-type]
2021-05-10T23:25:22.6129053Z   123 | } /* end of GetSignalState. */
2021-05-10T23:25:22.6129468Z       | ^
2021-05-10T23:25:22.6522404Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../mach-dep/unix-prof.c
2021-05-10T23:25:22.6744995Z In file included from ../mach-dep/unix-prof.c:10:
2021-05-10T23:25:22.6746459Z ../mach-dep/unix-prof.c: In function ‘DisableProfSignals’:
2021-05-10T23:25:22.6748447Z ../mach-dep/signal-sysdep.h:95:26: warning: assignment to ‘void (*)(int,  siginfo_t *, void *)’ {aka ‘void (*)(int,  struct <anonymous> *, void *)’} from incompatible pointer type ‘void (*)(int)’ [-Wincompatible-pointer-types]
2021-05-10T23:25:22.6749887Z    95 |      __svec.sa_sigaction = (h);           \
2021-05-10T23:25:22.6750675Z       |                          ^
2021-05-10T23:25:22.6751994Z ../mach-dep/unix-prof.c:45:5: note: in expansion of macro ‘SIG_SetHandler’
2021-05-10T23:25:22.6752739Z    45 |     SIG_SetHandler (SIGVTALRM, SIG_DFL);
2021-05-10T23:25:22.6753213Z       |     ^~~~~~~~~~~~~~
2021-05-10T23:25:22.6931544Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../config -I../objs -I../include -o gen-offsets ../config/gen-offsets.c gen-common.o
2021-05-10T23:25:22.7446367Z ./gen-offsets
2021-05-10T23:25:22.7452943Z gcc -x assembler-with-cpp -E -P -D_ASM_ -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include ../mach-dep/AMD64.prim.asm > prim.s
2021-05-10T23:25:22.7545427Z as --64 -o prim.o prim.s
2021-05-10T23:25:22.7595117Z (cd ../c-libs/posix-os; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-os.a)
2021-05-10T23:25:22.7612379Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-os'
2021-05-10T23:25:22.7613510Z (make MAKE=""make"" clean)
2021-05-10T23:25:22.7632735Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-os'
2021-05-10T23:25:22.7634041Z rm -f v-* *.o libposix-os.a
2021-05-10T23:25:22.7649564Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-os'
2021-05-10T23:25:22.7650575Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:22.7658037Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-os-lib.c
2021-05-10T23:25:22.7835820Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c poll.c
2021-05-10T23:25:22.8545082Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tmpname.c
2021-05-10T23:25:22.8914374Z rm -rf libposix-os.a
2021-05-10T23:25:22.8921425Z ar rcv libposix-os.a posix-os-lib.o poll.o tmpname.o
2021-05-10T23:25:22.9082906Z a - posix-os-lib.o
2021-05-10T23:25:22.9083885Z a - poll.o
2021-05-10T23:25:22.9084667Z a - tmpname.o
2021-05-10T23:25:22.9086256Z ranlib libposix-os.a
2021-05-10T23:25:22.9383087Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-os'
2021-05-10T23:25:22.9386989Z (cd ../c-libs/smlnj-runtime; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-runt.a)
2021-05-10T23:25:22.9406906Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-runtime'
2021-05-10T23:25:22.9408213Z (make MAKE=""make"" clean)
2021-05-10T23:25:22.9428920Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-runtime'
2021-05-10T23:25:22.9429958Z rm -f v-* *.o libsmlnj-runt.a
2021-05-10T23:25:22.9445760Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-runtime'
2021-05-10T23:25:22.9447969Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:22.9454468Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c smlnj-runt-lib.c
2021-05-10T23:25:22.9657562Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c alloc-code.c
2021-05-10T23:25:22.9927909Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c argv.c
2021-05-10T23:25:23.0181703Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c raw-argv.c
2021-05-10T23:25:23.0422756Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c shift-argv.c
2021-05-10T23:25:23.0671008Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c cmd-name.c
2021-05-10T23:25:23.0914331Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c blast-in.c
2021-05-10T23:25:23.1297736Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c blast-out.c
2021-05-10T23:25:23.1633063Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c debug.c
2021-05-10T23:25:23.1870298Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c dummy.c
2021-05-10T23:25:23.2096361Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c export-heap.c
2021-05-10T23:25:23.2492829Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c export-fun.c
2021-05-10T23:25:23.2722803Z export-fun.c: In function ‘_ml_RunT_export_fun’:
2021-05-10T23:25:23.2724510Z export-fun.c:49:1: warning: control reaches end of non-void function [-Wreturn-type]
2021-05-10T23:25:23.2725811Z    49 | } /* end of _ml_RunT_export_fun */
2021-05-10T23:25:23.2726612Z       | ^
2021-05-10T23:25:23.2877031Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c gc-ctl.c
2021-05-10T23:25:23.3314608Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c itick.c
2021-05-10T23:25:23.3675437Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c mkexec.c
2021-05-10T23:25:23.3817540Z mkexec.c: In function ‘_ml_RunT_mkexec’:
2021-05-10T23:25:23.3818646Z mkexec.c:23:12: warning: unused variable ‘nbytes’ [-Wunused-variable]
2021-05-10T23:25:23.3819440Z    23 |     Word_t nbytes = GET_SEQ_LEN(seq);
2021-05-10T23:25:23.3819843Z       |            ^~~~~~
2021-05-10T23:25:23.3955696Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c mkliterals.c
2021-05-10T23:25:23.4207742Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c record1.c
2021-05-10T23:25:23.4458317Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c record-concat.c
2021-05-10T23:25:23.4792810Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c sysinfo.c
2021-05-10T23:25:23.5195416Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c setitimer.c
2021-05-10T23:25:23.5543331Z rm -rf libsmlnj-runt.a
2021-05-10T23:25:23.5550274Z ar rcv libsmlnj-runt.a smlnj-runt-lib.o alloc-code.o argv.o raw-argv.o shift-argv.o cmd-name.o blast-in.o blast-out.o debug.o dummy.o export-heap.o export-fun.o gc-ctl.o itick.o mkexec.o mkliterals.o record1.o record-concat.o sysinfo.o setitimer.o
2021-05-10T23:25:23.5583648Z a - smlnj-runt-lib.o
2021-05-10T23:25:23.5584560Z a - alloc-code.o
2021-05-10T23:25:23.5585254Z a - argv.o
2021-05-10T23:25:23.5586608Z a - raw-argv.o
2021-05-10T23:25:23.5587253Z a - shift-argv.o
2021-05-10T23:25:23.5587751Z a - cmd-name.o
2021-05-10T23:25:23.5588268Z a - blast-in.o
2021-05-10T23:25:23.5588766Z a - blast-out.o
2021-05-10T23:25:23.5589275Z a - debug.o
2021-05-10T23:25:23.5589732Z a - dummy.o
2021-05-10T23:25:23.5590288Z a - export-heap.o
2021-05-10T23:25:23.5590814Z a - export-fun.o
2021-05-10T23:25:23.5591347Z a - gc-ctl.o
2021-05-10T23:25:23.5591798Z a - itick.o
2021-05-10T23:25:23.5592290Z a - mkexec.o
2021-05-10T23:25:23.5592796Z a - mkliterals.o
2021-05-10T23:25:23.5593338Z a - record1.o
2021-05-10T23:25:23.5593908Z a - record-concat.o
2021-05-10T23:25:23.5594415Z a - sysinfo.o
2021-05-10T23:25:23.5594940Z a - setitimer.o
2021-05-10T23:25:23.5595497Z ranlib libsmlnj-runt.a
2021-05-10T23:25:23.5617350Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-runtime'
2021-05-10T23:25:23.5620878Z (cd ../c-libs/smlnj-signals; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-sig.a)
2021-05-10T23:25:23.5642681Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-signals'
2021-05-10T23:25:23.5662430Z (make MAKE=""make"" clean)
2021-05-10T23:25:23.5663917Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-signals'
2021-05-10T23:25:23.5664894Z rm -f v-* *.o libsmlnj-sig.a
2021-05-10T23:25:23.5680114Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-signals'
2021-05-10T23:25:23.5681823Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:23.5690334Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c smlnj-sig-lib.c
2021-05-10T23:25:23.5864829Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getsigmask.c
2021-05-10T23:25:23.6093411Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getsigstate.c
2021-05-10T23:25:23.6333179Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c listsignals.c
2021-05-10T23:25:23.6558544Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c pause.c
2021-05-10T23:25:23.6789393Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setsigmask.c
2021-05-10T23:25:23.7024806Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setsigstate.c
2021-05-10T23:25:23.7275852Z rm -rf libsmlnj-sig.a
2021-05-10T23:25:23.7282913Z ar rcv libsmlnj-sig.a smlnj-sig-lib.o getsigmask.o getsigstate.o listsignals.o pause.o setsigmask.o setsigstate.o
2021-05-10T23:25:23.7303814Z a - smlnj-sig-lib.o
2021-05-10T23:25:23.7305615Z a - getsigmask.o
2021-05-10T23:25:23.7306368Z a - getsigstate.o
2021-05-10T23:25:23.7307034Z a - listsignals.o
2021-05-10T23:25:23.7307716Z a - pause.o
2021-05-10T23:25:23.7308326Z a - setsigmask.o
2021-05-10T23:25:23.7309062Z a - setsigstate.o
2021-05-10T23:25:23.7309780Z ranlib libsmlnj-sig.a
2021-05-10T23:25:23.7327279Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-signals'
2021-05-10T23:25:23.7329983Z (cd ../c-libs/smlnj-prof; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-prof.a)
2021-05-10T23:25:23.7349177Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-prof'
2021-05-10T23:25:23.7350170Z (make MAKE=""make"" clean)
2021-05-10T23:25:23.7370700Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-prof'
2021-05-10T23:25:23.7371870Z rm -f v-* *.o libsmlnj-prof.a
2021-05-10T23:25:23.7387958Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-prof'
2021-05-10T23:25:23.7389909Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:23.7397118Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c smlnj-prof-lib.c
2021-05-10T23:25:23.7591515Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c getpquantum.c
2021-05-10T23:25:23.7827832Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c setpref.c
2021-05-10T23:25:23.8188416Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -I../../gc -c setptimer.c
2021-05-10T23:25:23.8544254Z rm -rf libsmlnj-prof.a
2021-05-10T23:25:23.8551399Z ar rcv libsmlnj-prof.a smlnj-prof-lib.o getpquantum.o setpref.o setptimer.o
2021-05-10T23:25:23.8570169Z a - smlnj-prof-lib.o
2021-05-10T23:25:23.8570938Z a - getpquantum.o
2021-05-10T23:25:23.8571708Z a - setpref.o
2021-05-10T23:25:23.8572360Z a - setptimer.o
2021-05-10T23:25:23.8573391Z ranlib libsmlnj-prof.a
2021-05-10T23:25:23.8589113Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-prof'
2021-05-10T23:25:23.8592307Z (cd ../c-libs/smlnj-sockets; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-sock.a)
2021-05-10T23:25:23.8610628Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-sockets'
2021-05-10T23:25:23.8611514Z (make MAKE=""make"" clean)
2021-05-10T23:25:23.8632440Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-sockets'
2021-05-10T23:25:23.8633679Z rm -f v-* *.o libsmlnj-sock.a
2021-05-10T23:25:23.8646339Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-sockets'
2021-05-10T23:25:23.8648715Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:23.8653422Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c smlnj-sock-lib.c
2021-05-10T23:25:23.9974674Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c gethostname.c
2021-05-10T23:25:24.0418828Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getnetbyname.c
2021-05-10T23:25:24.0778961Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getnetbyaddr.c
2021-05-10T23:25:24.1164919Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c gethostbyname.c
2021-05-10T23:25:24.1538362Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c gethostbyaddr.c
2021-05-10T23:25:24.1918425Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getprotbyname.c
2021-05-10T23:25:24.2333779Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getprotbynum.c
2021-05-10T23:25:24.2752399Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getservbyname.c
2021-05-10T23:25:24.3167845Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getservbyport.c
2021-05-10T23:25:24.3552921Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlBROADCAST.c
2021-05-10T23:25:24.3915119Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlDEBUG.c
2021-05-10T23:25:24.4272678Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlDONTROUTE.c
2021-05-10T23:25:24.4615842Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlKEEPALIVE.c
2021-05-10T23:25:24.4962723Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlLINGER.c
2021-05-10T23:25:24.5398687Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlNODELAY.c
2021-05-10T23:25:24.5810766Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlOOBINLINE.c
2021-05-10T23:25:24.6160406Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlRCVBUF.c
2021-05-10T23:25:24.6556432Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlREUSEADDR.c
2021-05-10T23:25:24.6905854Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlSNDBUF.c
2021-05-10T23:25:24.7305399Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getERROR.c
2021-05-10T23:25:24.7680353Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getTYPE.c
2021-05-10T23:25:24.8065078Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setNBIO.c
2021-05-10T23:25:24.8456257Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getNREAD.c
2021-05-10T23:25:24.8839835Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getATMARK.c
2021-05-10T23:25:24.9223906Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getpeername.c
2021-05-10T23:25:24.9647161Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getsockname.c
2021-05-10T23:25:25.0052922Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c accept.c
2021-05-10T23:25:25.0485971Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c bind.c
2021-05-10T23:25:25.0871410Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c close.c
2021-05-10T23:25:25.1263907Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c connect.c
2021-05-10T23:25:25.1654816Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c listen.c
2021-05-10T23:25:25.2014743Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c socket.c
2021-05-10T23:25:25.2394063Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c shutdown.c
2021-05-10T23:25:25.2754750Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c list-addr-families.c
2021-05-10T23:25:25.3060936Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c list-sock-types.c
2021-05-10T23:25:25.3365346Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getaddrfamily.c
2021-05-10T23:25:25.3754993Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c inetany.c
2021-05-10T23:25:25.4155707Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c from-inetaddr.c
2021-05-10T23:25:25.4547208Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c to-inetaddr.c
2021-05-10T23:25:25.4956129Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c recv.c
2021-05-10T23:25:25.5404780Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c recvbuf.c
2021-05-10T23:25:25.5788974Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c recvfrom.c
2021-05-10T23:25:25.6265905Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c recvbuffrom.c
2021-05-10T23:25:25.6717642Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sendbuf.c
2021-05-10T23:25:25.7096443Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sendbufto.c
2021-05-10T23:25:25.7500919Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c from-unixaddr.c
2021-05-10T23:25:25.7862424Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c to-unixaddr.c
2021-05-10T23:25:25.8269226Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c socketpair.c
2021-05-10T23:25:25.8676455Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c util-mkhostent.c
2021-05-10T23:25:25.9131781Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c util-mknetent.c
2021-05-10T23:25:25.9551339Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c util-mkservent.c
2021-05-10T23:25:25.9964108Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c util-sockopt.c
2021-05-10T23:25:26.0385894Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tbl-addr-family.c
2021-05-10T23:25:26.0678181Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tbl-sock-type.c
2021-05-10T23:25:26.0993254Z rm -rf libsmlnj-sock.a
2021-05-10T23:25:26.1002574Z ar rcv libsmlnj-sock.a smlnj-sock-lib.o gethostname.o getnetbyname.o getnetbyaddr.o gethostbyname.o gethostbyaddr.o getprotbyname.o getprotbynum.o getservbyname.o getservbyport.o ctlBROADCAST.o ctlDEBUG.o ctlDONTROUTE.o ctlKEEPALIVE.o ctlLINGER.o ctlNODELAY.o ctlOOBINLINE.o ctlRCVBUF.o ctlREUSEADDR.o ctlSNDBUF.o getERROR.o getTYPE.o setNBIO.o getNREAD.o getATMARK.o getpeername.o getsockname.o accept.o bind.o close.o connect.o listen.o socket.o shutdown.o list-addr-families.o list-sock-types.o getaddrfamily.o inetany.o from-inetaddr.o to-inetaddr.o recv.o recvbuf.o recvfrom.o recvbuffrom.o sendbuf.o sendbufto.o from-unixaddr.o to-unixaddr.o socketpair.o util-mkhostent.o util-mknetent.o util-mkservent.o util-sockopt.o tbl-addr-family.o tbl-sock-type.o
2021-05-10T23:25:26.1072604Z a - smlnj-sock-lib.o
2021-05-10T23:25:26.1073288Z a - gethostname.o
2021-05-10T23:25:26.1073816Z a - getnetbyname.o
2021-05-10T23:25:26.1074330Z a - getnetbyaddr.o
2021-05-10T23:25:26.1074860Z a - gethostbyname.o
2021-05-10T23:25:26.1075380Z a - gethostbyaddr.o
2021-05-10T23:25:26.1075915Z a - getprotbyname.o
2021-05-10T23:25:26.1076426Z a - getprotbynum.o
2021-05-10T23:25:26.1076955Z a - getservbyname.o
2021-05-10T23:25:26.1077495Z a - getservbyport.o
2021-05-10T23:25:26.1078017Z a - ctlBROADCAST.o
2021-05-10T23:25:26.1078503Z a - ctlDEBUG.o
2021-05-10T23:25:26.1078982Z a - ctlDONTROUTE.o
2021-05-10T23:25:26.1079497Z a - ctlKEEPALIVE.o
2021-05-10T23:25:26.1079978Z a - ctlLINGER.o
2021-05-10T23:25:26.1080459Z a - ctlNODELAY.o
2021-05-10T23:25:26.1080951Z a - ctlOOBINLINE.o
2021-05-10T23:25:26.1081443Z a - ctlRCVBUF.o
2021-05-10T23:25:26.1081923Z a - ctlREUSEADDR.o
2021-05-10T23:25:26.1082415Z a - ctlSNDBUF.o
2021-05-10T23:25:26.1082871Z a - getERROR.o
2021-05-10T23:25:26.1083326Z a - getTYPE.o
2021-05-10T23:25:26.1083765Z a - setNBIO.o
2021-05-10T23:25:26.1084216Z a - getNREAD.o
2021-05-10T23:25:26.1084668Z a - getATMARK.o
2021-05-10T23:25:26.1086213Z a - getpeername.o
2021-05-10T23:25:26.1086723Z a - getsockname.o
2021-05-10T23:25:26.1087199Z a - accept.o
2021-05-10T23:25:26.1087614Z a - bind.o
2021-05-10T23:25:26.1088040Z a - close.o
2021-05-10T23:25:26.1088465Z a - connect.o
2021-05-10T23:25:26.1088909Z a - listen.o
2021-05-10T23:25:26.1089349Z a - socket.o
2021-05-10T23:25:26.1089781Z a - shutdown.o
2021-05-10T23:25:26.1090326Z a - list-addr-families.o
2021-05-10T23:25:26.1090904Z a - list-sock-types.o
2021-05-10T23:25:26.1091453Z a - getaddrfamily.o
2021-05-10T23:25:26.1091930Z a - inetany.o
2021-05-10T23:25:26.1092572Z a - from-inetaddr.o
2021-05-10T23:25:26.1093093Z a - to-inetaddr.o
2021-05-10T23:25:26.1093559Z a - recv.o
2021-05-10T23:25:26.1093986Z a - recvbuf.o
2021-05-10T23:25:26.1094444Z a - recvfrom.o
2021-05-10T23:25:26.1094915Z a - recvbuffrom.o
2021-05-10T23:25:26.1095393Z a - sendbuf.o
2021-05-10T23:25:26.1095843Z a - sendbufto.o
2021-05-10T23:25:26.1096339Z a - from-unixaddr.o
2021-05-10T23:25:26.1096834Z a - to-unixaddr.o
2021-05-10T23:25:26.1097327Z a - socketpair.o
2021-05-10T23:25:26.1097832Z a - util-mkhostent.o
2021-05-10T23:25:26.1098373Z a - util-mknetent.o
2021-05-10T23:25:26.1098915Z a - util-mkservent.o
2021-05-10T23:25:26.1099435Z a - util-sockopt.o
2021-05-10T23:25:26.1099971Z a - tbl-addr-family.o
2021-05-10T23:25:26.1100504Z a - tbl-sock-type.o
2021-05-10T23:25:26.1101051Z ranlib libsmlnj-sock.a
2021-05-10T23:25:26.1136040Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-sockets'
2021-05-10T23:25:26.1139476Z (cd ../c-libs/smlnj-time; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-time.a)
2021-05-10T23:25:26.1158721Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-time'
2021-05-10T23:25:26.1159547Z (make MAKE=""make"" clean)
2021-05-10T23:25:26.1179766Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-time'
2021-05-10T23:25:26.1181007Z rm -f v-* *.o libsmlnj-time.a
2021-05-10T23:25:26.1194397Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-time'
2021-05-10T23:25:26.1195417Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:26.1204539Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c smlnj-time-lib.c
2021-05-10T23:25:26.1378295Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c gettime.c
2021-05-10T23:25:26.1682783Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c timeofday.c
2021-05-10T23:25:26.2020817Z rm -rf libsmlnj-time.a
2021-05-10T23:25:26.2028108Z ar rcv libsmlnj-time.a smlnj-time-lib.o gettime.o timeofday.o
2021-05-10T23:25:26.2045446Z a - smlnj-time-lib.o
2021-05-10T23:25:26.2046311Z a - gettime.o
2021-05-10T23:25:26.2047023Z a - timeofday.o
2021-05-10T23:25:26.2047800Z ranlib libsmlnj-time.a
2021-05-10T23:25:26.2064723Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-time'
2021-05-10T23:25:26.2067890Z (cd ../c-libs/smlnj-date; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-date.a)
2021-05-10T23:25:26.2086383Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-date'
2021-05-10T23:25:26.2087211Z (make MAKE=""make"" clean)
2021-05-10T23:25:26.2108162Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-date'
2021-05-10T23:25:26.2109393Z rm -f v-* *.o libsmlnj-date.a
2021-05-10T23:25:26.2122816Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-date'
2021-05-10T23:25:26.2124850Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:26.2130853Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c smlnj-date-lib.c
2021-05-10T23:25:26.2309498Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c gmtime.c
2021-05-10T23:25:26.2650333Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c localoffset.c
2021-05-10T23:25:26.3029736Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c localtime.c
2021-05-10T23:25:26.3232054Z localtime.c: In function ‘_ml_Date_localtime’:
2021-05-10T23:25:26.3233034Z localtime.c:34:1: warning: control reaches end of non-void function [-Wreturn-type]
2021-05-10T23:25:26.3233772Z    34 | } /* end of _ml_Date_localtime */
2021-05-10T23:25:26.3234138Z       | ^
2021-05-10T23:25:26.3378301Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c mktime.c
2021-05-10T23:25:26.3760844Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c strftime.c
2021-05-10T23:25:26.4150694Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c unix-date.c
2021-05-10T23:25:26.4458697Z rm -rf libsmlnj-date.a
2021-05-10T23:25:26.4465578Z ar rcv libsmlnj-date.a smlnj-date-lib.o gmtime.o localoffset.o localtime.o mktime.o strftime.o unix-date.o
2021-05-10T23:25:26.4487710Z a - smlnj-date-lib.o
2021-05-10T23:25:26.4488518Z a - gmtime.o
2021-05-10T23:25:26.4489619Z a - localoffset.o
2021-05-10T23:25:26.4490185Z a - localtime.o
2021-05-10T23:25:26.4490658Z a - mktime.o
2021-05-10T23:25:26.4491142Z a - strftime.o
2021-05-10T23:25:26.4491617Z a - unix-date.o
2021-05-10T23:25:26.4493368Z ranlib libsmlnj-date.a
2021-05-10T23:25:26.4514522Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-date'
2021-05-10T23:25:26.4517887Z (cd ../c-libs/smlnj-math; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libsmlnj-math.a)
2021-05-10T23:25:26.4534574Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-math'
2021-05-10T23:25:26.4535627Z (make MAKE=""make"" clean)
2021-05-10T23:25:26.4556145Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-math'
2021-05-10T23:25:26.4557389Z rm -f v-* *.o libsmlnj-math.a
2021-05-10T23:25:26.4573826Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-math'
2021-05-10T23:25:26.4575740Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:26.4585065Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c smlnj-math-lib.c
2021-05-10T23:25:26.4758625Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctlrndmode.c
2021-05-10T23:25:26.5088418Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c atan64.c
2021-05-10T23:25:26.5546353Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c cos64.c
2021-05-10T23:25:26.5956163Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c exp64.c
2021-05-10T23:25:26.6382027Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c log64.c
2021-05-10T23:25:26.6796087Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sin64.c
2021-05-10T23:25:26.7222585Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sqrt64.c
2021-05-10T23:25:26.7663417Z rm -rf libsmlnj-math.a
2021-05-10T23:25:26.7672708Z ar rcv libsmlnj-math.a smlnj-math-lib.o ctlrndmode.o atan64.o cos64.o exp64.o log64.o sin64.o sqrt64.o
2021-05-10T23:25:26.7692296Z a - smlnj-math-lib.o
2021-05-10T23:25:26.7693648Z a - ctlrndmode.o
2021-05-10T23:25:26.7694222Z a - atan64.o
2021-05-10T23:25:26.7694645Z a - cos64.o
2021-05-10T23:25:26.7695083Z a - exp64.o
2021-05-10T23:25:26.7695490Z a - log64.o
2021-05-10T23:25:26.7695909Z a - sin64.o
2021-05-10T23:25:26.7696315Z a - sqrt64.o
2021-05-10T23:25:26.7696816Z ranlib libsmlnj-math.a
2021-05-10T23:25:26.7716280Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-math'
2021-05-10T23:25:26.7720079Z (cd ../c-libs/posix-process; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-process.a)
2021-05-10T23:25:26.7741802Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-process'
2021-05-10T23:25:26.7742884Z (make MAKE=""make"" clean)
2021-05-10T23:25:26.7760293Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-process'
2021-05-10T23:25:26.7761310Z rm -f v-* *.o libposix-process.a
2021-05-10T23:25:26.7776588Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-process'
2021-05-10T23:25:26.7778693Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:26.7786225Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-process-lib.c
2021-05-10T23:25:26.7960881Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c osval.c
2021-05-10T23:25:26.8315162Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fork.c
2021-05-10T23:25:26.8632477Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c exec.c
2021-05-10T23:25:26.8978228Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c execp.c
2021-05-10T23:25:26.9328584Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c exece.c
2021-05-10T23:25:26.9718829Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c waitpid.c
2021-05-10T23:25:27.0119862Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c exit.c
2021-05-10T23:25:27.0329772Z exit.c: In function ‘_ml_P_Process_exit’:
2021-05-10T23:25:27.0331099Z exit.c:23:1: warning: control reaches end of non-void function [-Wreturn-type]
2021-05-10T23:25:27.0331940Z    23 | } /* end of _ml_P_Process_exit */
2021-05-10T23:25:27.0332654Z       | ^
2021-05-10T23:25:27.0449898Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c kill.c
2021-05-10T23:25:27.0801458Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c alarm.c
2021-05-10T23:25:27.1148521Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c pause.c
2021-05-10T23:25:27.1460865Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sleep.c
2021-05-10T23:25:27.1839417Z rm -rf libposix-process.a
2021-05-10T23:25:27.1850508Z ar rcv libposix-process.a posix-process-lib.o osval.o fork.o exec.o execp.o exece.o waitpid.o exit.o kill.o alarm.o pause.o sleep.o
2021-05-10T23:25:27.1875282Z a - posix-process-lib.o
2021-05-10T23:25:27.1876796Z a - osval.o
2021-05-10T23:25:27.1877282Z a - fork.o
2021-05-10T23:25:27.1877716Z a - exec.o
2021-05-10T23:25:27.1878206Z a - execp.o
2021-05-10T23:25:27.1878635Z a - exece.o
2021-05-10T23:25:27.1879077Z a - waitpid.o
2021-05-10T23:25:27.1879514Z a - exit.o
2021-05-10T23:25:27.1879934Z a - kill.o
2021-05-10T23:25:27.1880335Z a - alarm.o
2021-05-10T23:25:27.1880765Z a - pause.o
2021-05-10T23:25:27.1881179Z a - sleep.o
2021-05-10T23:25:27.1881714Z ranlib libposix-process.a
2021-05-10T23:25:27.1904911Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-process'
2021-05-10T23:25:27.1908176Z (cd ../c-libs/posix-procenv; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-procenv.a)
2021-05-10T23:25:27.1925248Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-procenv'
2021-05-10T23:25:27.1926366Z (make MAKE=""make"" clean)
2021-05-10T23:25:27.1946881Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-procenv'
2021-05-10T23:25:27.1948239Z rm -f v-* *.o ml_sysconf.h libposix-procenv.a
2021-05-10T23:25:27.1964494Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-procenv'
2021-05-10T23:25:27.1966323Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:27.1975471Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-procenv-lib.c
2021-05-10T23:25:27.2175290Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getpid.c
2021-05-10T23:25:27.2462942Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getppid.c
2021-05-10T23:25:27.2760098Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getuid.c
2021-05-10T23:25:27.3054834Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c geteuid.c
2021-05-10T23:25:27.3356605Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getgid.c
2021-05-10T23:25:27.3660287Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getegid.c
2021-05-10T23:25:27.3961983Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setuid.c
2021-05-10T23:25:27.4284936Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setgid.c
2021-05-10T23:25:27.4609180Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getgroups.c
2021-05-10T23:25:27.5129230Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getlogin.c
2021-05-10T23:25:27.5445511Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getpgrp.c
2021-05-10T23:25:27.5714109Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setsid.c
2021-05-10T23:25:27.6019243Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c setpgid.c
2021-05-10T23:25:27.6326381Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c uname.c
2021-05-10T23:25:27.6789249Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c time.c
2021-05-10T23:25:27.7115664Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c times.c
2021-05-10T23:25:27.7537522Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getenv.c
2021-05-10T23:25:27.7847067Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c environ.c
2021-05-10T23:25:27.8094957Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ctermid.c
2021-05-10T23:25:27.8458930Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ttyname.c
2021-05-10T23:25:27.8786305Z VERSION=v-amd64-linux CPP=""gcc -x assembler-with-cpp -E -P"" ../../config/gen-posix-names.sh _SC_ ml_sysconf.h
2021-05-10T23:25:27.8913298Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c sysconf.c
2021-05-10T23:25:27.9451928Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c isatty.c
2021-05-10T23:25:27.9605424Z rm -rf libposix-procenv.a
2021-05-10T23:25:27.9613561Z ar rcv libposix-procenv.a posix-procenv-lib.o getpid.o getppid.o getuid.o geteuid.o getgid.o getegid.o setuid.o setgid.o getgroups.o getlogin.o getpgrp.o setsid.o setpgid.o uname.o time.o times.o getenv.o environ.o ctermid.o ttyname.o sysconf.o isatty.o
2021-05-10T23:25:27.9649965Z a - posix-procenv-lib.o
2021-05-10T23:25:27.9650777Z a - getpid.o
2021-05-10T23:25:27.9651389Z a - getppid.o
2021-05-10T23:25:27.9651932Z a - getuid.o
2021-05-10T23:25:27.9652791Z a - geteuid.o
2021-05-10T23:25:27.9653360Z a - getgid.o
2021-05-10T23:25:27.9653917Z a - getegid.o
2021-05-10T23:25:27.9654475Z a - setuid.o
2021-05-10T23:25:27.9655004Z a - setgid.o
2021-05-10T23:25:27.9655573Z a - getgroups.o
2021-05-10T23:25:27.9656140Z a - getlogin.o
2021-05-10T23:25:27.9656714Z a - getpgrp.o
2021-05-10T23:25:27.9657260Z a - setsid.o
2021-05-10T23:25:27.9657818Z a - setpgid.o
2021-05-10T23:25:27.9658360Z a - uname.o
2021-05-10T23:25:27.9658877Z a - time.o
2021-05-10T23:25:27.9659408Z a - times.o
2021-05-10T23:25:27.9659941Z a - getenv.o
2021-05-10T23:25:27.9660495Z a - environ.o
2021-05-10T23:25:27.9661054Z a - ctermid.o
2021-05-10T23:25:27.9661595Z a - ttyname.o
2021-05-10T23:25:27.9662154Z a - sysconf.o
2021-05-10T23:25:27.9662681Z a - isatty.o
2021-05-10T23:25:27.9663319Z ranlib libposix-procenv.a
2021-05-10T23:25:27.9694655Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-procenv'
2021-05-10T23:25:27.9697433Z (cd ../c-libs/posix-filesys; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-filesys.a)
2021-05-10T23:25:27.9713791Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-filesys'
2021-05-10T23:25:27.9714597Z (make MAKE=""make"" clean)
2021-05-10T23:25:27.9735667Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-filesys'
2021-05-10T23:25:27.9736904Z rm -f v-* *.o ml_pathconf.h libposix-filesys.a
2021-05-10T23:25:27.9750974Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-filesys'
2021-05-10T23:25:27.9752150Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:27.9759413Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-filesys-lib.c
2021-05-10T23:25:27.9946097Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c osval.c
2021-05-10T23:25:28.0956241Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c chdir.c
2021-05-10T23:25:28.1280074Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getcwd.c
2021-05-10T23:25:28.2038775Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c openf.c
2021-05-10T23:25:28.2459208Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c umask.c
2021-05-10T23:25:28.2798248Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c link.c
2021-05-10T23:25:28.3124365Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c rename.c
2021-05-10T23:25:28.3478370Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c symlink.c
2021-05-10T23:25:28.3797831Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c mkdir.c
2021-05-10T23:25:28.4148483Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c mkfifo.c
2021-05-10T23:25:28.4493192Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c unlink.c
2021-05-10T23:25:28.4813424Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c rmdir.c
2021-05-10T23:25:28.5130823Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c readlink.c
2021-05-10T23:25:28.5591459Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c stat.c
2021-05-10T23:25:28.6083206Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c access.c
2021-05-10T23:25:28.6424959Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c chmod.c
2021-05-10T23:25:28.6765234Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fchmod.c
2021-05-10T23:25:28.7110770Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c chown.c
2021-05-10T23:25:28.7428096Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fchown.c
2021-05-10T23:25:28.7756406Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c ftruncate.c
2021-05-10T23:25:28.8090508Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c utime.c
2021-05-10T23:25:28.8460759Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c opendir.c
2021-05-10T23:25:28.9113217Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c readdir.c
2021-05-10T23:25:28.9479807Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c rewinddir.c
2021-05-10T23:25:28.9804203Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c closedir.c
2021-05-10T23:25:29.0135859Z VERSION=v-amd64-linux CPP=""gcc -x assembler-with-cpp -E -P"" ../../config/gen-posix-names.sh _PC_ ml_pathconf.h
2021-05-10T23:25:29.0247240Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c pathconf.c
2021-05-10T23:25:29.0699546Z rm -rf libposix-filesys.a
2021-05-10T23:25:29.0711495Z ar rcv libposix-filesys.a posix-filesys-lib.o osval.o chdir.o getcwd.o openf.o umask.o link.o rename.o symlink.o mkdir.o mkfifo.o unlink.o rmdir.o readlink.o stat.o access.o chmod.o fchmod.o chown.o fchown.o ftruncate.o utime.o opendir.o readdir.o rewinddir.o closedir.o pathconf.o
2021-05-10T23:25:29.0754390Z a - posix-filesys-lib.o
2021-05-10T23:25:29.0755417Z a - osval.o
2021-05-10T23:25:29.0755875Z a - chdir.o
2021-05-10T23:25:29.0756294Z a - getcwd.o
2021-05-10T23:25:29.0756748Z a - openf.o
2021-05-10T23:25:29.0757162Z a - umask.o
2021-05-10T23:25:29.0757953Z a - link.o
2021-05-10T23:25:29.0758373Z a - rename.o
2021-05-10T23:25:29.0758815Z a - symlink.o
2021-05-10T23:25:29.0759234Z a - mkdir.o
2021-05-10T23:25:29.0759661Z a - mkfifo.o
2021-05-10T23:25:29.0760080Z a - unlink.o
2021-05-10T23:25:29.0760506Z a - rmdir.o
2021-05-10T23:25:29.0760939Z a - readlink.o
2021-05-10T23:25:29.0761375Z a - stat.o
2021-05-10T23:25:29.0761786Z a - access.o
2021-05-10T23:25:29.0762209Z a - chmod.o
2021-05-10T23:25:29.0762637Z a - fchmod.o
2021-05-10T23:25:29.0763052Z a - chown.o
2021-05-10T23:25:29.0763480Z a - fchown.o
2021-05-10T23:25:29.0763919Z a - ftruncate.o
2021-05-10T23:25:29.0764538Z a - utime.o
2021-05-10T23:25:29.0764966Z a - opendir.o
2021-05-10T23:25:29.0766312Z a - readdir.o
2021-05-10T23:25:29.0766760Z a - rewinddir.o
2021-05-10T23:25:29.0767226Z a - closedir.o
2021-05-10T23:25:29.0767677Z a - pathconf.o
2021-05-10T23:25:29.0768225Z ranlib libposix-filesys.a
2021-05-10T23:25:29.0798964Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-filesys'
2021-05-10T23:25:29.0801120Z (cd ../c-libs/posix-io; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-io.a)
2021-05-10T23:25:29.0819818Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-io'
2021-05-10T23:25:29.0820892Z (make MAKE=""make"" clean)
2021-05-10T23:25:29.0839173Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-io'
2021-05-10T23:25:29.0840370Z rm -f v-* *.o libposix-io.a
2021-05-10T23:25:29.0856717Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-io'
2021-05-10T23:25:29.0858124Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:29.0866510Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-io-lib.c
2021-05-10T23:25:29.1062036Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c osval.c
2021-05-10T23:25:29.1411644Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c pipe.c
2021-05-10T23:25:29.1765219Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dup.c
2021-05-10T23:25:29.2100470Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dup2.c
2021-05-10T23:25:29.2420313Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c close.c
2021-05-10T23:25:29.2744539Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c read.c
2021-05-10T23:25:29.3119581Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c readbuf.c
2021-05-10T23:25:29.3460826Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c write.c
2021-05-10T23:25:29.3790854Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c writebuf.c
2021-05-10T23:25:29.4120851Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_d.c
2021-05-10T23:25:29.4475275Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_gfd.c
2021-05-10T23:25:29.4833849Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_sfd.c
2021-05-10T23:25:29.5171566Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_gfl.c
2021-05-10T23:25:29.5533006Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_sfl.c
2021-05-10T23:25:29.5898013Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fcntl_l.c
2021-05-10T23:25:29.6303006Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c lseek.c
2021-05-10T23:25:29.6644228Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c fsync.c
2021-05-10T23:25:29.6967915Z rm -rf libposix-io.a
2021-05-10T23:25:29.6977492Z ar rcv libposix-io.a posix-io-lib.o osval.o pipe.o dup.o dup2.o close.o read.o readbuf.o write.o writebuf.o fcntl_d.o fcntl_gfd.o fcntl_sfd.o fcntl_gfl.o fcntl_sfl.o fcntl_l.o lseek.o fsync.o
2021-05-10T23:25:29.7011872Z a - posix-io-lib.o
2021-05-10T23:25:29.7012495Z a - osval.o
2021-05-10T23:25:29.7012959Z a - pipe.o
2021-05-10T23:25:29.7013383Z a - dup.o
2021-05-10T23:25:29.7013898Z a - dup2.o
2021-05-10T23:25:29.7014405Z a - close.o
2021-05-10T23:25:29.7014917Z a - read.o
2021-05-10T23:25:29.7015452Z a - readbuf.o
2021-05-10T23:25:29.7017408Z a - write.o
2021-05-10T23:25:29.7017981Z a - writebuf.o
2021-05-10T23:25:29.7018434Z a - fcntl_d.o
2021-05-10T23:25:29.7018860Z a - fcntl_gfd.o
2021-05-10T23:25:29.7019310Z a - fcntl_sfd.o
2021-05-10T23:25:29.7019738Z a - fcntl_gfl.o
2021-05-10T23:25:29.7020183Z a - fcntl_sfl.o
2021-05-10T23:25:29.7020613Z a - fcntl_l.o
2021-05-10T23:25:29.7021040Z a - lseek.o
2021-05-10T23:25:29.7021453Z a - fsync.o
2021-05-10T23:25:29.7021935Z ranlib libposix-io.a
2021-05-10T23:25:29.7047715Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-io'
2021-05-10T23:25:29.7050915Z (cd ../c-libs/posix-sysdb; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-sysdb.a)
2021-05-10T23:25:29.7069227Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-sysdb'
2021-05-10T23:25:29.7070295Z (make MAKE=""make"" clean)
2021-05-10T23:25:29.7090455Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-sysdb'
2021-05-10T23:25:29.7091748Z rm -f v-* *.o libposix-sysdb.a
2021-05-10T23:25:29.7108058Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-sysdb'
2021-05-10T23:25:29.7109923Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:29.7117934Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-sysdb-lib.c
2021-05-10T23:25:29.7292792Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getgrgid.c
2021-05-10T23:25:29.7685810Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getgrnam.c
2021-05-10T23:25:29.8082488Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getpwuid.c
2021-05-10T23:25:29.8457260Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c getpwnam.c
2021-05-10T23:25:29.8813375Z rm -rf libposix-sysdb.a
2021-05-10T23:25:29.8819741Z ar rcv libposix-sysdb.a posix-sysdb-lib.o getgrgid.o getgrnam.o getpwuid.o getpwnam.o
2021-05-10T23:25:29.8842331Z a - posix-sysdb-lib.o
2021-05-10T23:25:29.8843274Z a - getgrgid.o
2021-05-10T23:25:29.8844471Z a - getgrnam.o
2021-05-10T23:25:29.8845388Z a - getpwuid.o
2021-05-10T23:25:29.8845870Z a - getpwnam.o
2021-05-10T23:25:29.8848778Z ranlib libposix-sysdb.a
2021-05-10T23:25:29.8870127Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-sysdb'
2021-05-10T23:25:29.8872607Z (cd ../c-libs/posix-signal; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-signal.a)
2021-05-10T23:25:29.8891987Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-signal'
2021-05-10T23:25:29.8893043Z (make MAKE=""make"" clean)
2021-05-10T23:25:29.8920114Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-signal'
2021-05-10T23:25:29.8921399Z rm -f v-* *.o libposix-signal.a
2021-05-10T23:25:29.8937833Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-signal'
2021-05-10T23:25:29.8941518Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:29.8948641Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-signal-lib.c
2021-05-10T23:25:29.9129780Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c osval.c
2021-05-10T23:25:29.9472395Z rm -rf libposix-signal.a
2021-05-10T23:25:29.9482623Z ar rcv libposix-signal.a posix-signal-lib.o osval.o
2021-05-10T23:25:29.9500047Z a - posix-signal-lib.o
2021-05-10T23:25:29.9501679Z a - osval.o
2021-05-10T23:25:29.9502407Z ranlib libposix-signal.a
2021-05-10T23:25:29.9519024Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-signal'
2021-05-10T23:25:29.9522203Z (cd ../c-libs/posix-tty; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-tty.a)
2021-05-10T23:25:29.9540628Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-tty'
2021-05-10T23:25:29.9541692Z (make MAKE=""make"" clean)
2021-05-10T23:25:29.9562171Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-tty'
2021-05-10T23:25:29.9563402Z rm -f v-* *.o libposix-tty.a
2021-05-10T23:25:29.9578923Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-tty'
2021-05-10T23:25:29.9580368Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:29.9589931Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-tty-lib.c
2021-05-10T23:25:29.9770759Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c osval.c
2021-05-10T23:25:30.0862973Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcdrain.c
2021-05-10T23:25:30.1193661Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcflow.c
2021-05-10T23:25:30.1513407Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcflush.c
2021-05-10T23:25:30.1856127Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcgetattr.c
2021-05-10T23:25:30.2252802Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcgetpgrp.c
2021-05-10T23:25:30.2574476Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcsendbreak.c
2021-05-10T23:25:30.2908878Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcsetattr.c
2021-05-10T23:25:30.3288480Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tcsetpgrp.c
2021-05-10T23:25:30.3612629Z rm -rf libposix-tty.a
2021-05-10T23:25:30.3619181Z ar rcv libposix-tty.a posix-tty-lib.o osval.o tcdrain.o tcflow.o tcflush.o tcgetattr.o tcgetpgrp.o tcsendbreak.o tcsetattr.o tcsetpgrp.o
2021-05-10T23:25:30.3648335Z a - posix-tty-lib.o
2021-05-10T23:25:30.3649281Z a - osval.o
2021-05-10T23:25:30.3650706Z a - tcdrain.o
2021-05-10T23:25:30.3651224Z a - tcflow.o
2021-05-10T23:25:30.3651656Z a - tcflush.o
2021-05-10T23:25:30.3652174Z a - tcgetattr.o
2021-05-10T23:25:30.3652643Z a - tcgetpgrp.o
2021-05-10T23:25:30.3653315Z a - tcsendbreak.o
2021-05-10T23:25:30.3653811Z a - tcsetattr.o
2021-05-10T23:25:30.3654289Z a - tcsetpgrp.o
2021-05-10T23:25:30.3654966Z ranlib libposix-tty.a
2021-05-10T23:25:30.3682753Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-tty'
2021-05-10T23:25:30.3686778Z (cd ../c-libs/posix-error; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libposix-error.a)
2021-05-10T23:25:30.3703060Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-error'
2021-05-10T23:25:30.3703975Z (make MAKE=""make"" clean)
2021-05-10T23:25:30.3723636Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-error'
2021-05-10T23:25:30.3724601Z rm -f v-* *.o libposix-error.a
2021-05-10T23:25:30.3740127Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-error'
2021-05-10T23:25:30.3744173Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:30.3750639Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-error-lib.c
2021-05-10T23:25:30.3926492Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c posix-name-val.c
2021-05-10T23:25:30.4222580Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c errmsg.c
2021-05-10T23:25:30.4604098Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c geterror.c
2021-05-10T23:25:30.4912535Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c listerrors.c
2021-05-10T23:25:30.5222650Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c tbl-errno.c
2021-05-10T23:25:30.5459139Z rm -rf libposix-error.a
2021-05-10T23:25:30.5466181Z ar rcv libposix-error.a posix-error-lib.o posix-name-val.o errmsg.o geterror.o listerrors.o tbl-errno.o
2021-05-10T23:25:30.5487018Z a - posix-error-lib.o
2021-05-10T23:25:30.5487888Z a - posix-name-val.o
2021-05-10T23:25:30.5488700Z a - errmsg.o
2021-05-10T23:25:30.5491602Z a - geterror.o
2021-05-10T23:25:30.5492130Z a - listerrors.o
2021-05-10T23:25:30.5492606Z a - tbl-errno.o
2021-05-10T23:25:30.5493166Z ranlib libposix-error.a
2021-05-10T23:25:30.5507691Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-error'
2021-05-10T23:25:30.5511339Z (cd ../gc; make CHECK_HEAP="""" VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../objs -I../include -I../gc"" libgc.a)
2021-05-10T23:25:30.5534780Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/gc'
2021-05-10T23:25:30.5535795Z (make MAKE=""make"" clean)
2021-05-10T23:25:30.5554143Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/gc'
2021-05-10T23:25:30.5555383Z rm -f v-* *.o libgc.a libmp-gc.a
2021-05-10T23:25:30.5569128Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/gc'
2021-05-10T23:25:30.5570106Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:30.5579296Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc init-gc.c
2021-05-10T23:25:30.6151331Z init-gc.c: In function ‘InitHeap’:
2021-05-10T23:25:30.6152429Z init-gc.c:222:17: warning: ‘max_sz’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:30.6153125Z   222 |      max_sz = (5*max_sz)/2;
2021-05-10T23:25:30.6153457Z       |               ~~^~~~~~~~
2021-05-10T23:25:30.6357151Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc call-gc.c
2021-05-10T23:25:30.6877179Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc minor-gc.c
2021-05-10T23:25:30.7195332Z minor-gc.c: In function ‘MinorGC_ForwardObj’:
2021-05-10T23:25:30.7196775Z minor-gc.c:374:18: warning: ‘arena’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:30.7197864Z   374 |     arena->nextw += (len + 1);
2021-05-10T23:25:30.7198598Z       |     ~~~~~~~~~~~~~^~~~~~~~~~~~
2021-05-10T23:25:30.7199557Z In file included from minor-gc.c:18:
2021-05-10T23:25:30.7200686Z copy-loop.h:36:6: warning: ‘len’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:30.7201512Z    36 |  int __len = (LEN);    \
2021-05-10T23:25:30.7201885Z       |      ^~~~~
2021-05-10T23:25:30.7202545Z minor-gc.c:311:12: note: ‘len’ was declared here
2021-05-10T23:25:30.7203294Z   311 |     Word_t len;
2021-05-10T23:25:30.7203670Z       |            ^~~
2021-05-10T23:25:30.7618870Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc major-gc.c
2021-05-10T23:25:30.8132480Z major-gc.c: In function ‘MajorGC_ForwardObj’:
2021-05-10T23:25:30.8133926Z major-gc.c:717:12: warning: ‘len’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:30.8134838Z   717 |     Word_t len;
2021-05-10T23:25:30.8135315Z       |            ^~~
2021-05-10T23:25:30.8136394Z major-gc.c:824:18: warning: ‘arena’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:30.8137481Z   824 |     arena->nextw += (len + 1);
2021-05-10T23:25:30.8138004Z       |     ~~~~~~~~~~~~~^~~~~~~~~~~~
2021-05-10T23:25:30.8139075Z major-gc.c:825:16: warning: ‘desc’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:30.8140050Z   825 |     *new_obj++ = desc;
2021-05-10T23:25:30.8140514Z       |     ~~~~~~~~~~~^~~~~~
2021-05-10T23:25:30.9199206Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc flip.c
2021-05-10T23:25:30.9684774Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc gc-util.c
2021-05-10T23:25:31.0409844Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc big-objects.c
2021-05-10T23:25:31.1203803Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc ml-objects.c
2021-05-10T23:25:31.2234279Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc obj-info.c
2021-05-10T23:25:31.2538515Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc build-literals.c
2021-05-10T23:25:31.2735942Z build-literals.c: In function ‘BuildLiterals’:
2021-05-10T23:25:31.2737483Z build-literals.c:471:25: warning: variable ‘maxDepth’ set but not used [-Wunused-but-set-variable]
2021-05-10T23:25:31.2738562Z   471 |     Unsigned32_t magic, maxDepth, wordSz, maxSaved;
2021-05-10T23:25:31.2739222Z       |                         ^~~~~~~~
2021-05-10T23:25:31.3235763Z build-literals.c:574:4: warning: ‘arg.uArg’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:31.3236923Z   574 |  } arg;
2021-05-10T23:25:31.3237453Z       |    ^~~
2021-05-10T23:25:31.3794277Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc old-literals.c
2021-05-10T23:25:31.4744802Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc record-ops.c
2021-05-10T23:25:31.5130200Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc import-heap.c
2021-05-10T23:25:31.6983250Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc export-heap.c
2021-05-10T23:25:31.8272199Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc blast-in.c
2021-05-10T23:25:31.8883658Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc blast-out.c
2021-05-10T23:25:31.9138851Z blast-out.c: In function ‘BlastHeap’:
2021-05-10T23:25:31.9140497Z blast-out.c:115:27: warning: variable ‘arenaHdrs’ set but not used [-Wunused-but-set-variable]
2021-05-10T23:25:31.9141750Z   115 |     heap_arena_hdr_t *p, *arenaHdrs[NUM_OBJ_KINDS], *arenaHdrsBuf;
2021-05-10T23:25:31.9142537Z       |                           ^~~~~~~~~
2021-05-10T23:25:31.9836417Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc blast-gc.c
2021-05-10T23:25:32.0054318Z blast-gc.c: In function ‘BlastGC_FinishGC’:
2021-05-10T23:25:32.0055677Z blast-gc.c:300:12: warning: variable ‘dummy’ set but not used [-Wunused-but-set-variable]
2021-05-10T23:25:32.0056578Z   300 |     bool_t dummy = FALSE;
2021-05-10T23:25:32.0060423Z       |            ^~~~~
2021-05-10T23:25:32.0500619Z blast-gc.c: In function ‘BlastGC_ForwardObj’:
2021-05-10T23:25:32.0502216Z blast-gc.c:633:12: warning: ‘len’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:32.0503184Z   633 |     Word_t len;
2021-05-10T23:25:32.0503694Z       |            ^~~
2021-05-10T23:25:32.0504825Z blast-gc.c:56:20: warning: ‘arena’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:32.0505973Z    56 |   __ap->repairList = __rp;  \
2021-05-10T23:25:32.0506535Z       |                    ^
2021-05-10T23:25:32.0507351Z blast-gc.c:634:14: note: ‘arena’ was declared here
2021-05-10T23:25:32.0508011Z   634 |     arena_t *arena;
2021-05-10T23:25:32.0508528Z       |              ^~~~~
2021-05-10T23:25:32.0509638Z blast-gc.c:734:16: warning: ‘desc’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:32.0510557Z   734 |     *new_obj++ = desc;
2021-05-10T23:25:32.0511086Z       |     ~~~~~~~~~~~^~~~~~
2021-05-10T23:25:32.0651628Z blast-gc.c: In function ‘BlastGC_ExtractLits’:
2021-05-10T23:25:32.0652986Z blast-gc.c:903:58: warning: ‘objSzB’ may be used uninitialized in this function [-Wmaybe-uninitialized]
2021-05-10T23:25:32.0654329Z   903 |  WR_Write(closure->wr, (void *)(addr - WORD_SZB), objSzB + WORD_SZB);
2021-05-10T23:25:32.0654985Z       |                                                          ^
2021-05-10T23:25:32.1963932Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc heap-in-util.c
2021-05-10T23:25:32.2453881Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc heap-out-util.c
2021-05-10T23:25:32.2888159Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc writer.c
2021-05-10T23:25:32.3269033Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc mem-writer.c
2021-05-10T23:25:32.3441774Z mem-writer.c: In function ‘Flush’:
2021-05-10T23:25:32.3443088Z mem-writer.c:93:18: warning: unused variable ‘bp’ [-Wunused-variable]
2021-05-10T23:25:32.3443937Z    93 |     wr_buffer_t *bp = BufOf(wr);
2021-05-10T23:25:32.3444467Z       |                  ^~
2021-05-10T23:25:32.3445623Z mem-writer.c: In function ‘Tell’:
2021-05-10T23:25:32.3446831Z mem-writer.c:105:1: warning: no return statement in function returning non-void [-Wreturn-type]
2021-05-10T23:25:32.3447714Z   105 | } /* end of Tell */
2021-05-10T23:25:32.3448210Z       | ^
2021-05-10T23:25:32.3448926Z mem-writer.c: In function ‘Free’:
2021-05-10T23:25:32.3449986Z mem-writer.c:119:18: warning: unused variable ‘bp’ [-Wunused-variable]
2021-05-10T23:25:32.3450997Z   119 |     wr_buffer_t *bp = BufOf(wr);
2021-05-10T23:25:32.3451531Z       |                  ^~
2021-05-10T23:25:32.3643499Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc addr-hash.c
2021-05-10T23:25:32.4122907Z gcc -std=gnu99 -Wall -c -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc c-globals-tbl.c
2021-05-10T23:25:32.5088893Z rm -rf libgc.a
2021-05-10T23:25:32.5097071Z ar rcv libgc.a init-gc.o call-gc.o minor-gc.o major-gc.o flip.o gc-util.o big-objects.o ml-objects.o obj-info.o build-literals.o old-literals.o record-ops.o  import-heap.o export-heap.o blast-in.o blast-out.o blast-gc.o heap-in-util.o heap-out-util.o writer.o mem-writer.o addr-hash.o c-globals-tbl.o
2021-05-10T23:25:32.5134560Z a - init-gc.o
2021-05-10T23:25:32.5135061Z a - call-gc.o
2021-05-10T23:25:32.5135537Z a - minor-gc.o
2021-05-10T23:25:32.5136000Z a - major-gc.o
2021-05-10T23:25:32.5136429Z a - flip.o
2021-05-10T23:25:32.5136859Z a - gc-util.o
2021-05-10T23:25:32.5137334Z a - big-objects.o
2021-05-10T23:25:32.5137814Z a - ml-objects.o
2021-05-10T23:25:32.5138291Z a - obj-info.o
2021-05-10T23:25:32.5138785Z a - build-literals.o
2021-05-10T23:25:32.5139322Z a - old-literals.o
2021-05-10T23:25:32.5139949Z a - record-ops.o
2021-05-10T23:25:32.5140464Z a - import-heap.o
2021-05-10T23:25:32.5140967Z a - export-heap.o
2021-05-10T23:25:32.5141453Z a - blast-in.o
2021-05-10T23:25:32.5141904Z a - blast-out.o
2021-05-10T23:25:32.5142366Z a - blast-gc.o
2021-05-10T23:25:32.5142845Z a - heap-in-util.o
2021-05-10T23:25:32.5143372Z a - heap-out-util.o
2021-05-10T23:25:32.5143843Z a - writer.o
2021-05-10T23:25:32.5144316Z a - mem-writer.o
2021-05-10T23:25:32.5144783Z a - addr-hash.o
2021-05-10T23:25:32.5145285Z a - c-globals-tbl.o
2021-05-10T23:25:32.5145658Z ranlib libgc.a
2021-05-10T23:25:32.5171551Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/gc'
2021-05-10T23:25:32.5174285Z (cd ../memory; make 'OBJS=$(MMAP_OBJS)' VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../objs -I../include -I../gc"" libmem.a)
2021-05-10T23:25:32.5193834Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/memory'
2021-05-10T23:25:32.5194571Z (make MAKE=""make"" clean)
2021-05-10T23:25:32.5214371Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/memory'
2021-05-10T23:25:32.5215664Z rm -f v-* *.o libmem.a
2021-05-10T23:25:32.5228156Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/memory'
2021-05-10T23:25:32.5229137Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:32.5239480Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../objs -I../include -I../gc -c mem-mmap.c
2021-05-10T23:25:32.5704120Z ar rcv libmem.a mem-mmap.o
2021-05-10T23:25:32.5717938Z a - mem-mmap.o
2021-05-10T23:25:32.5718687Z ranlib libmem.a
2021-05-10T23:25:32.5738313Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/memory'
2021-05-10T23:25:32.5741994Z (cd ../c-libs/dl; make VERSION=""v-amd64-linux"" MAKE=""make"" CC=""gcc -std=gnu99 -Wall"" CFLAGS=""-O2 -m64"" DEFS=""-DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC"" AR=""ar"" ARFLAGS=""rcv"" RANLIB=""ranlib"" INCLUDES=""-I../../objs -I../../include -I.."" libunix-dynload.a)
2021-05-10T23:25:32.5760994Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/dl'
2021-05-10T23:25:32.5762175Z (make MAKE=""make"" clean)
2021-05-10T23:25:32.5780990Z make[3]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/dl'
2021-05-10T23:25:32.5781942Z rm -f v-* *.o libunix-dynload.a
2021-05-10T23:25:32.5797220Z make[3]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/dl'
2021-05-10T23:25:32.5800241Z echo ""v-amd64-linux"" > v-amd64-linux
2021-05-10T23:25:32.5808482Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c unix-dynload-lib.c
2021-05-10T23:25:32.5985378Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dlopen.c
2021-05-10T23:25:32.6328767Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dlclose.c
2021-05-10T23:25:32.6637553Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dlsym.c
2021-05-10T23:25:32.6957944Z gcc -std=gnu99 -Wall -O2 -m64 -DARCH_AMD64 -DSIZE_64 -DOPSYS_UNIX -DOPSYS_LINUX -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC -I../../objs -I../../include -I.. -c dlerror.c
2021-05-10T23:25:32.7282195Z rm -rf libunix-dynload.a
2021-05-10T23:25:32.7291477Z ar rcv libunix-dynload.a unix-dynload-lib.o dlopen.o dlclose.o dlsym.o dlerror.o
2021-05-10T23:25:32.7308647Z a - unix-dynload-lib.o
2021-05-10T23:25:32.7309784Z a - dlopen.o
2021-05-10T23:25:32.7310316Z a - dlclose.o
2021-05-10T23:25:32.7310766Z a - dlsym.o
2021-05-10T23:25:32.7311193Z a - dlerror.o
2021-05-10T23:25:32.7311731Z ranlib libunix-dynload.a
2021-05-10T23:25:32.7330302Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/dl'
2021-05-10T23:25:32.7337590Z gcc -std=gnu99 -Wall -o run.amd64-linux -O2 -m64  main.o c-libraries.o unix-raise-syserr.o ml-options.o boot.o load-ml.o run-ml.o globals.o ml-state.o error.o timers.o unix-timers.o qualify-name.o swap-bytes.o unix-fault.o signal-util.o unix-signal.o unix-prof.o prim.o   ../c-libs/posix-os/libposix-os.a ../c-libs/smlnj-runtime/libsmlnj-runt.a ../c-libs/smlnj-signals/libsmlnj-sig.a ../c-libs/smlnj-prof/libsmlnj-prof.a ../c-libs/smlnj-sockets/libsmlnj-sock.a ../c-libs/smlnj-time/libsmlnj-time.a ../c-libs/smlnj-date/libsmlnj-date.a ../c-libs/smlnj-math/libsmlnj-math.a ../c-libs/posix-process/libposix-process.a ../c-libs/posix-procenv/libposix-procenv.a ../c-libs/posix-filesys/libposix-filesys.a ../c-libs/posix-io/libposix-io.a ../c-libs/posix-sysdb/libposix-sysdb.a ../c-libs/posix-signal/libposix-signal.a ../c-libs/posix-tty/libposix-tty.a ../c-libs/posix-error/libposix-error.a ../gc/libgc.a ../memory/libmem.a ../c-libs/dl/libunix-dynload.a -lm -ldl
2021-05-10T23:25:32.7959852Z make[1]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/objs'
2021-05-10T23:25:32.8009977Z rm -f v-* run.* interactive-run \
2021-05-10T23:25:32.8011175Z 	gen-sizes gen-offsets gen-bc-instr-def \
2021-05-10T23:25:32.8012320Z 	gen-unix-signals gen-unix-sigtbl \
2021-05-10T23:25:32.8013420Z 	ml-sizes.h mlstate-offsets.h bc-instr-def.h \
2021-05-10T23:25:32.8014450Z 	system-signals.h unix-sigtbl.c \
2021-05-10T23:25:32.8015149Z 	*.o prim.s primops.s
2021-05-10T23:25:32.8088891Z rm -r -f *.dSYM
2021-05-10T23:25:32.8101245Z (cd ../memory; make MAKE=""make"" clean)
2021-05-10T23:25:32.8119801Z make[1]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/memory'
2021-05-10T23:25:32.8120865Z rm -f v-* *.o libmem.a
2021-05-10T23:25:32.8138745Z make[1]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/memory'
2021-05-10T23:25:32.8140198Z (cd ../c-libs; make MAKE=""make"" clean)
2021-05-10T23:25:32.8160920Z make[1]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs'
2021-05-10T23:25:32.8163005Z for dir in posix-os smlnj-runtime smlnj-signals smlnj-sockets smlnj-prof smlnj-time smlnj-date smlnj-math smlnj-mp posix-error posix-filesys posix-io posix-procenv posix-process posix-signal posix-sysdb posix-tty smlnj-ccalls dl; do \
2021-05-10T23:25:32.8164458Z   (cd $dir; echo ""cleaning $dir""; make MAKE=""make"" clean) ; \
2021-05-10T23:25:32.8165457Z done
2021-05-10T23:25:32.8167345Z cleaning posix-os
2021-05-10T23:25:32.8181360Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-os'
2021-05-10T23:25:32.8182309Z rm -f v-* *.o libposix-os.a
2021-05-10T23:25:32.8198323Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-os'
2021-05-10T23:25:32.8200442Z cleaning smlnj-runtime
2021-05-10T23:25:32.8212060Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-runtime'
2021-05-10T23:25:32.8213244Z rm -f v-* *.o libsmlnj-runt.a
2021-05-10T23:25:32.8228451Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-runtime'
2021-05-10T23:25:32.8229410Z cleaning smlnj-signals
2021-05-10T23:25:32.8244477Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-signals'
2021-05-10T23:25:32.8245738Z rm -f v-* *.o libsmlnj-sig.a
2021-05-10T23:25:32.8260248Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-signals'
2021-05-10T23:25:32.8262222Z cleaning smlnj-sockets
2021-05-10T23:25:32.8274380Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-sockets'
2021-05-10T23:25:32.8275950Z rm -f v-* *.o libsmlnj-sock.a
2021-05-10T23:25:32.8295513Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-sockets'
2021-05-10T23:25:32.8297506Z cleaning smlnj-prof
2021-05-10T23:25:32.8311228Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-prof'
2021-05-10T23:25:32.8312227Z rm -f v-* *.o libsmlnj-prof.a
2021-05-10T23:25:32.8327618Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-prof'
2021-05-10T23:25:32.8329690Z cleaning smlnj-time
2021-05-10T23:25:32.8340550Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-time'
2021-05-10T23:25:32.8341725Z rm -f v-* *.o libsmlnj-time.a
2021-05-10T23:25:32.8354022Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-time'
2021-05-10T23:25:32.8358115Z cleaning smlnj-date
2021-05-10T23:25:32.8371751Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-date'
2021-05-10T23:25:32.8372721Z rm -f v-* *.o libsmlnj-date.a
2021-05-10T23:25:32.8388086Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-date'
2021-05-10T23:25:32.8389429Z cleaning smlnj-math
2021-05-10T23:25:32.8404204Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-math'
2021-05-10T23:25:32.8405632Z rm -f v-* *.o libsmlnj-math.a
2021-05-10T23:25:32.8420673Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-math'
2021-05-10T23:25:32.8421914Z cleaning smlnj-mp
2021-05-10T23:25:32.8436514Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-mp'
2021-05-10T23:25:32.8437736Z rm -f v-* *.o libsmlnj-mp.a
2021-05-10T23:25:32.8451331Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-mp'
2021-05-10T23:25:32.8452678Z cleaning posix-error
2021-05-10T23:25:32.8467050Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-error'
2021-05-10T23:25:32.8468052Z rm -f v-* *.o libposix-error.a
2021-05-10T23:25:32.8482751Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-error'
2021-05-10T23:25:32.8484045Z cleaning posix-filesys
2021-05-10T23:25:32.8500527Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-filesys'
2021-05-10T23:25:32.8501628Z rm -f v-* *.o ml_pathconf.h libposix-filesys.a
2021-05-10T23:25:32.8519024Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-filesys'
2021-05-10T23:25:32.8520252Z cleaning posix-io
2021-05-10T23:25:32.8534703Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-io'
2021-05-10T23:25:32.8536732Z rm -f v-* *.o libposix-io.a
2021-05-10T23:25:32.8551119Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-io'
2021-05-10T23:25:32.8553387Z cleaning posix-procenv
2021-05-10T23:25:32.8569529Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-procenv'
2021-05-10T23:25:32.8570631Z rm -f v-* *.o ml_sysconf.h libposix-procenv.a
2021-05-10T23:25:32.8587477Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-procenv'
2021-05-10T23:25:32.8588745Z cleaning posix-process
2021-05-10T23:25:32.8603334Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-process'
2021-05-10T23:25:32.8604362Z rm -f v-* *.o libposix-process.a
2021-05-10T23:25:32.8619692Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-process'
2021-05-10T23:25:32.8620938Z cleaning posix-signal
2021-05-10T23:25:32.8635281Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-signal'
2021-05-10T23:25:32.8636316Z rm -f v-* *.o libposix-signal.a
2021-05-10T23:25:32.8650944Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-signal'
2021-05-10T23:25:32.8654459Z cleaning posix-sysdb
2021-05-10T23:25:32.8668763Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-sysdb'
2021-05-10T23:25:32.8669742Z rm -f v-* *.o libposix-sysdb.a
2021-05-10T23:25:32.8684241Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-sysdb'
2021-05-10T23:25:32.8685823Z cleaning posix-tty
2021-05-10T23:25:32.8701198Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-tty'
2021-05-10T23:25:32.8702149Z rm -f v-* *.o libposix-tty.a
2021-05-10T23:25:32.8717606Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/posix-tty'
2021-05-10T23:25:32.8719796Z cleaning smlnj-ccalls
2021-05-10T23:25:32.8732300Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-ccalls'
2021-05-10T23:25:32.8733313Z rm -f v-* *.o *.s libsmlnj-ccalls.a
2021-05-10T23:25:32.8747640Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/smlnj-ccalls'
2021-05-10T23:25:32.8749358Z cleaning dl
2021-05-10T23:25:32.8761127Z make[2]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/dl'
2021-05-10T23:25:32.8762371Z rm -f v-* *.o libunix-dynload.a
2021-05-10T23:25:32.8776768Z make[2]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs/dl'
2021-05-10T23:25:32.8777905Z rm -f v-* *.o
2021-05-10T23:25:32.8793309Z make[1]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/c-libs'
2021-05-10T23:25:32.8794091Z (cd ../gc; make MAKE=""make"" clean)
2021-05-10T23:25:32.8817264Z make[1]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/gc'
2021-05-10T23:25:32.8818229Z rm -f v-* *.o libgc.a libmp-gc.a
2021-05-10T23:25:32.8833972Z make[1]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/gc'
2021-05-10T23:25:32.8836398Z (cd ../mp; make MAKE=""make"" clean)
2021-05-10T23:25:32.8857409Z make[1]: Entering directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/mp'
2021-05-10T23:25:32.8858305Z rm -f v-* *.o libmp.a
2021-05-10T23:25:32.8870532Z make[1]: Leaving directory '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/runtime/mp'
2021-05-10T23:25:32.8912227Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching bootfiles from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:32.8914186Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying boot.amd64-unix.tgz ...
2021-05-10T23:25:33.2669391Z 2021-05-10 23:25:33 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//boot.amd64-unix.tgz [5965800/5965800] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/boot.amd64-unix.tgz"" [1]
2021-05-10T23:25:33.2674679Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching boot.amd64-unix.tgz was a success.
2021-05-10T23:25:33.2676783Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing bootfiles archive.
2021-05-10T23:25:33.4056263Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: CM metadata directory name is "".cm""
2021-05-10T23:25:33.4285447Z ********************* Primop Bindings ********************
2021-05-10T23:25:33.4286502Z * int size = 63; real size = 64; large word size = 64
2021-05-10T23:25:33.4287110Z ********************
2021-05-10T23:25:33.4287678Z             raw_update_float64 = raw_store(f64)
2021-05-10T23:25:33.4288340Z             raw_update_float32 = raw_store(f32)
2021-05-10T23:25:33.4288974Z               raw_update_int32 = raw_store(i32)
2021-05-10T23:25:33.4289589Z              raw_update_word32 = raw_store(u32)
2021-05-10T23:25:33.4290213Z               raw_update_int16 = raw_store(i16)
2021-05-10T23:25:33.4290823Z              raw_update_word16 = raw_store(u16)
2021-05-10T23:25:33.4291450Z                raw_update_int8 = raw_store(i8)
2021-05-10T23:25:33.4292072Z               raw_update_word8 = raw_store(u8)
2021-05-10T23:25:33.4292668Z                raw_sub_float64 = raw_load(f64)
2021-05-10T23:25:33.4293277Z                raw_sub_float32 = raw_load(f32)
2021-05-10T23:25:33.4293854Z                  raw_sub_int32 = raw_load(i32)
2021-05-10T23:25:33.4294439Z                 raw_sub_word32 = raw_load(u32)
2021-05-10T23:25:33.4295031Z                  raw_sub_int16 = raw_load(i16)
2021-05-10T23:25:33.4300048Z                 raw_sub_word16 = raw_load(u16)
2021-05-10T23:25:33.4300479Z                   raw_sub_int8 = raw_load(i8)
2021-05-10T23:25:33.4300883Z                  raw_sub_word8 = raw_load(u8)
2021-05-10T23:25:33.4301329Z              raw_store_float64 = raw_store(f64)
2021-05-10T23:25:33.4301773Z              raw_store_float32 = raw_store(f32)
2021-05-10T23:25:33.4302223Z                raw_store_int32 = raw_store(i32)
2021-05-10T23:25:33.4302671Z               raw_store_word32 = raw_store(u32)
2021-05-10T23:25:33.4303104Z                raw_store_int16 = raw_store(i16)
2021-05-10T23:25:33.4303549Z               raw_store_word16 = raw_store(u16)
2021-05-10T23:25:33.4304099Z                 raw_store_int8 = raw_store(i8)
2021-05-10T23:25:33.4304541Z                raw_store_word8 = raw_store(u8)
2021-05-10T23:25:33.4304966Z               raw_load_float64 = raw_load(f64)
2021-05-10T23:25:33.4305401Z               raw_load_float32 = raw_load(f32)
2021-05-10T23:25:33.4305824Z                 raw_load_int32 = raw_load(i32)
2021-05-10T23:25:33.4306246Z                raw_load_word32 = raw_load(u32)
2021-05-10T23:25:33.4306654Z                 raw_load_int16 = raw_load(i16)
2021-05-10T23:25:33.4307078Z                raw_load_word16 = raw_load(u16)
2021-05-10T23:25:33.4307498Z                  raw_load_int8 = raw_load(i8)
2021-05-10T23:25:33.4307904Z                 raw_load_word8 = raw_load(u8)
2021-05-10T23:25:33.4308345Z                   raw_record64 = raw64_record
2021-05-10T23:25:33.4308778Z                     raw_record = raw_record
2021-05-10T23:25:33.4309188Z                      raw_ccall = raw_ccall
2021-05-10T23:25:33.4309594Z                 word64_to_cptr = word_to_cptr
2021-05-10T23:25:33.4310028Z                 cptr_to_word64 = cptr_to_word
2021-05-10T23:25:33.4310416Z                       char_neq = <>u63
2021-05-10T23:25:33.4310779Z                       char_eql = =u63
2021-05-10T23:25:33.4311127Z                        char_ge = >=u63
2021-05-10T23:25:33.4311485Z                        char_gt = >u63
2021-05-10T23:25:33.4311837Z                        char_le = <=u63
2021-05-10T23:25:33.4312177Z                        char_lt = <u63
2021-05-10T23:25:33.4312585Z                int64_to_real64 = int64_to_real64
2021-05-10T23:25:33.4313021Z                  int_to_real64 = int63_to_real64
2021-05-10T23:25:33.4313493Z            round_real64_to_int = round_real64_to_int63
2021-05-10T23:25:33.4313981Z            floor_real64_to_int = floor_real64_to_int63
2021-05-10T23:25:33.4314449Z           copy_word64_to_int64 = copy_64_64
2021-05-10T23:25:33.4314865Z             copy_word_to_int64 = copy_63_64
2021-05-10T23:25:33.4316468Z           copy_int64_to_word64 = copy_64_64
2021-05-10T23:25:33.4316933Z            trunc_word64_to_int = trunc_64_63
2021-05-10T23:25:33.4317350Z            trunc_int64_to_word = trunc_64_63
2021-05-10T23:25:33.4317783Z                intinf_to_word8 = trunc_inf_8
2021-05-10T23:25:33.4318320Z         signed_word8_to_intinf = extend_8_inf
2021-05-10T23:25:33.4318811Z       unsigned_word8_to_intinf = copy_8_inf
2021-05-10T23:25:33.4319263Z            signed_word8_to_int = extend_8_63
2021-05-10T23:25:33.4319714Z          unsigned_word8_to_int = copy_8_63
2021-05-10T23:25:33.4320127Z                   int_to_word8 = trunc_63_8
2021-05-10T23:25:33.4320558Z         signed_word8_to_word64 = extend_8_64
2021-05-10T23:25:33.4321011Z       unsigned_word8_to_word64 = copy_8_64
2021-05-10T23:25:33.4321456Z                word64_to_word8 = trunc_64_8
2021-05-10T23:25:33.4321888Z               intinf_to_word64 = trunc_inf_64
2021-05-10T23:25:33.4322340Z        signed_word64_to_intinf = extend_64_inf
2021-05-10T23:25:33.4322828Z      unsigned_word64_to_intinf = copy_64_inf
2021-05-10T23:25:33.4323277Z           signed_word64_to_int = test_64_63
2021-05-10T23:25:33.4323722Z         unsigned_word64_to_int = testu_64_63
2021-05-10T23:25:33.4324152Z                  int_to_word64 = extend_63_64
2021-05-10T23:25:33.4324575Z                intinf_to_int64 = test_inf_64
2021-05-10T23:25:33.4325125Z                int64_to_intinf = extend_64_inf
2021-05-10T23:25:33.4325619Z                 word_to_word64 = copy_63_64
2021-05-10T23:25:33.4326022Z                   int_to_int64 = extend_63_64
2021-05-10T23:25:33.4326436Z                 word64_to_word = trunc_64_63
2021-05-10T23:25:33.4326836Z                   int64_to_int = test_64_63
2021-05-10T23:25:33.4327237Z               intinf_to_word32 = trunc_inf_32
2021-05-10T23:25:33.4327712Z        signed_word32_to_intinf = extend_32_inf
2021-05-10T23:25:33.4328187Z      unsigned_word32_to_intinf = copy_32_inf
2021-05-10T23:25:33.4328671Z           signed_word32_to_int = extend_32_63
2021-05-10T23:25:33.4329194Z         unsigned_word32_to_int = copy_32_63
2021-05-10T23:25:33.4329624Z                  int_to_word32 = trunc_63_32
2021-05-10T23:25:33.4330023Z                intinf_to_int32 = test_inf_32
2021-05-10T23:25:33.4330463Z                int32_to_intinf = extend_32_inf
2021-05-10T23:25:33.4330915Z        signed_word32_to_word64 = extend_32_64
2021-05-10T23:25:33.4331386Z      unsigned_word32_to_word64 = copy_32_64
2021-05-10T23:25:33.4331833Z               word64_to_word32 = trunc_64_32
2021-05-10T23:25:33.4332234Z                 word_to_word32 = trunc_63_32
2021-05-10T23:25:33.4332633Z                   int_to_int32 = test_63_32
2021-05-10T23:25:33.4333017Z                 word32_to_word = copy_32_63
2021-05-10T23:25:33.4333432Z                   int32_to_int = extend_32_63
2021-05-10T23:25:33.4333839Z                 intinf_to_word = trunc_inf_63
2021-05-10T23:25:33.4334297Z          signed_word_to_intinf = extend_63_inf
2021-05-10T23:25:33.4334760Z        unsigned_word_to_intinf = copy_63_inf
2021-05-10T23:25:33.4335216Z             signed_word_to_int = copy_63_63
2021-05-10T23:25:33.4336017Z           unsigned_word_to_int = testu_63_63
2021-05-10T23:25:33.4336558Z                    int_to_word = copy_63_63
2021-05-10T23:25:33.4336966Z                  intinf_to_int = test_inf_63
2021-05-10T23:25:33.4337386Z                  int_to_intinf = extend_63_inf
2021-05-10T23:25:33.4337841Z          signed_word_to_word64 = extend_63_64
2021-05-10T23:25:33.4338291Z        unsigned_word_to_word64 = copy_63_64
2021-05-10T23:25:33.4338726Z                 word64_to_word = trunc_64_63
2021-05-10T23:25:33.4339146Z                 real64_to_bits = real_to_bits_64
2021-05-10T23:25:33.4339577Z                    real64_sqrt = fsqrt_f64
2021-05-10T23:25:33.4339963Z                     real64_abs = fabs_f64
2021-05-10T23:25:33.4340372Z                     real64_max = inlmax_f64
2021-05-10T23:25:33.4340772Z                     real64_min = inlmin_f64
2021-05-10T23:25:33.4341177Z                     real64_sgn = fsgn_64
2021-05-10T23:25:33.4341570Z                     real64_neq = <>f64
2021-05-10T23:25:33.4341934Z                     real64_eql = =f64
2021-05-10T23:25:33.4342308Z                      real64_ge = >=f64
2021-05-10T23:25:33.4342663Z                      real64_gt = >f64
2021-05-10T23:25:33.4343116Z                      real64_le = <=f64
2021-05-10T23:25:33.4343471Z                      real64_lt = <f64
2021-05-10T23:25:33.4343854Z                     real64_neg = neg_f64
2021-05-10T23:25:33.4344236Z                     real64_div = fdiv_f64
2021-05-10T23:25:33.4344630Z                     real64_mul = mul_f64
2021-05-10T23:25:33.4345009Z                     real64_sub = sub_f64
2021-05-10T23:25:33.4345398Z                     real64_add = add_f64
2021-05-10T23:25:33.4345800Z                     word64_max = inlmax_u64
2021-05-10T23:25:33.4346194Z                     word64_min = inlmin_u64
2021-05-10T23:25:33.4346587Z                     word64_neq = <>u64
2021-05-10T23:25:33.4346947Z                     word64_eql = =u64
2021-05-10T23:25:33.4347322Z                      word64_ge = >=u64
2021-05-10T23:25:33.4347673Z                      word64_gt = >u64
2021-05-10T23:25:33.4348039Z                      word64_le = <=u64
2021-05-10T23:25:33.4348390Z                      word64_lt = <u64
2021-05-10T23:25:33.4348770Z                    word64_notb = notb_u64
2021-05-10T23:25:33.4349179Z              word64_raw_lshift = lshift_u64
2021-05-10T23:25:33.4349629Z             word64_raw_rshiftl = rshiftl_u64
2021-05-10T23:25:33.4350063Z              word64_raw_rshift = rshift_u64
2021-05-10T23:25:33.4350511Z                  word64_lshift = inllshift_u64
2021-05-10T23:25:33.4351020Z                 word64_rshiftl = inlrshiftl_u64
2021-05-10T23:25:33.4351474Z                  word64_rshift = inlrshift_u64
2021-05-10T23:25:33.4351901Z                    word64_andb = andb_u64
2021-05-10T23:25:33.4352281Z                    word64_xorb = xorb_u64
2021-05-10T23:25:33.4352672Z                     word64_orb = orb_u64
2021-05-10T23:25:33.4353104Z                     word64_neg = neg_u64
2021-05-10T23:25:33.4353509Z                     word64_mod = inlrem_u64
2021-05-10T23:25:33.4353911Z                     word64_div = inlquot_u64
2021-05-10T23:25:33.4354310Z                     word64_mul = mul_u64
2021-05-10T23:25:33.4354680Z                     word64_sub = sub_u64
2021-05-10T23:25:33.4355067Z                     word64_add = add_u64
2021-05-10T23:25:33.4355809Z                      int64_abs = inlabs_i64
2021-05-10T23:25:33.4356296Z                      int64_max = inlmax_i64
2021-05-10T23:25:33.4356717Z                      int64_min = inlmin_i64
2021-05-10T23:25:33.4357084Z                      int64_neq = <>i64
2021-05-10T23:25:33.4357451Z                      int64_eql = =i64
2021-05-10T23:25:33.4357800Z                       int64_ge = >=i64
2021-05-10T23:25:33.4358157Z                       int64_gt = >i64
2021-05-10T23:25:33.4358498Z                       int64_le = <=i64
2021-05-10T23:25:33.4358850Z                       int64_lt = <i64
2021-05-10T23:25:33.4359218Z                      int64_neg = ineg_64
2021-05-10T23:25:33.4359616Z                      int64_rem = inlrem_i64
2021-05-10T23:25:33.4360026Z                     int64_quot = inlquot_i64
2021-05-10T23:25:33.4360423Z                      int64_mod = inlmod_i64
2021-05-10T23:25:33.4360824Z                      int64_div = inldiv_i64
2021-05-10T23:25:33.4361196Z                      int64_mul = imul_64
2021-05-10T23:25:33.4361572Z                      int64_sub = isub_64
2021-05-10T23:25:33.4361930Z                      int64_add = iadd_64
2021-05-10T23:25:33.4362314Z                     word32_max = inlmax_u32
2021-05-10T23:25:33.4362712Z                     word32_min = inlmin_u32
2021-05-10T23:25:33.4363098Z                     word32_neq = <>u32
2021-05-10T23:25:33.4363455Z                     word32_eql = =u32
2021-05-10T23:25:33.4363832Z                      word32_ge = >=u32
2021-05-10T23:25:33.4364195Z                      word32_gt = >u32
2021-05-10T23:25:33.4364547Z                      word32_le = <=u32
2021-05-10T23:25:33.4364908Z                      word32_lt = <u32
2021-05-10T23:25:33.4365438Z                    word32_notb = notb_u32
2021-05-10T23:25:33.4365865Z              word32_raw_lshift = lshift_u32
2021-05-10T23:25:33.4366381Z             word32_raw_rshiftl = rshiftl_u32
2021-05-10T23:25:33.4366832Z              word32_raw_rshift = rshift_u32
2021-05-10T23:25:33.4367265Z                  word32_lshift = inllshift_u32
2021-05-10T23:25:33.4367740Z                 word32_rshiftl = inlrshiftl_u32
2021-05-10T23:25:33.4368196Z                  word32_rshift = inlrshift_u32
2021-05-10T23:25:33.4368620Z                    word32_andb = andb_u32
2021-05-10T23:25:33.4369019Z                    word32_xorb = xorb_u32
2021-05-10T23:25:33.4369392Z                     word32_orb = orb_u32
2021-05-10T23:25:33.4369777Z                     word32_neg = neg_u32
2021-05-10T23:25:33.4370171Z                     word32_mod = inlrem_u32
2021-05-10T23:25:33.4370595Z                     word32_div = inlquot_u32
2021-05-10T23:25:33.4370979Z                     word32_mul = mul_u32
2021-05-10T23:25:33.4371357Z                     word32_sub = sub_u32
2021-05-10T23:25:33.4371726Z                     word32_add = add_u32
2021-05-10T23:25:33.4372121Z                      word8_max = inlmax_u8
2021-05-10T23:25:33.4372510Z                      word8_min = inlmin_u8
2021-05-10T23:25:33.4372889Z                      word8_neq = <>u8
2021-05-10T23:25:33.4373258Z                      word8_eql = =u8
2021-05-10T23:25:33.4373609Z                       word8_ge = >=u8
2021-05-10T23:25:33.4373965Z                       word8_gt = >u8
2021-05-10T23:25:33.4374310Z                       word8_le = <=u8
2021-05-10T23:25:33.4374665Z                       word8_lt = <u8
2021-05-10T23:25:33.4375023Z                     word8_notb = notb_u8
2021-05-10T23:25:33.4375790Z               word8_raw_lshift = lshift_u8
2021-05-10T23:25:33.4376324Z              word8_raw_rshiftl = rshiftl_u8
2021-05-10T23:25:33.4376859Z               word8_raw_rshift = rshift_u8
2021-05-10T23:25:33.4377285Z                   word8_lshift = inllshift_u8
2021-05-10T23:25:33.4377748Z                  word8_rshiftl = inlrshiftl_u8
2021-05-10T23:25:33.4378199Z                   word8_rshift = inlrshift_u8
2021-05-10T23:25:33.4378624Z                     word8_andb = andb_u8
2021-05-10T23:25:33.4379015Z                     word8_xorb = xorb_u8
2021-05-10T23:25:33.4379386Z                      word8_orb = orb_u8
2021-05-10T23:25:33.4379765Z                      word8_neg = neg_u8
2021-05-10T23:25:33.4380150Z                      word8_mod = inlrem_u8
2021-05-10T23:25:33.4380558Z                      word8_div = inlquot_u8
2021-05-10T23:25:33.4380940Z                      word8_mul = mul_u8
2021-05-10T23:25:33.4381316Z                      word8_sub = sub_u8
2021-05-10T23:25:33.4381676Z                      word8_add = add_u8
2021-05-10T23:25:33.4382069Z                      int32_abs = inlabs_i32
2021-05-10T23:25:33.4382462Z                      int32_max = inlmax_i32
2021-05-10T23:25:33.4382862Z                      int32_min = inlmin_i32
2021-05-10T23:25:33.4383247Z                      int32_neq = <>i32
2021-05-10T23:25:33.4383598Z                      int32_eql = =i32
2021-05-10T23:25:33.4383959Z                       int32_ge = >=i32
2021-05-10T23:25:33.4384302Z                       int32_gt = >i32
2021-05-10T23:25:33.4384655Z                       int32_le = <=i32
2021-05-10T23:25:33.4384998Z                       int32_lt = <i32
2021-05-10T23:25:33.4385365Z                      int32_neg = ineg_32
2021-05-10T23:25:33.4385747Z                      int32_rem = inlrem_i32
2021-05-10T23:25:33.4386156Z                     int32_quot = inlquot_i32
2021-05-10T23:25:33.4386550Z                      int32_mod = inlmod_i32
2021-05-10T23:25:33.4386949Z                      int32_div = inldiv_i32
2021-05-10T23:25:33.4387334Z                      int32_mul = imul_32
2021-05-10T23:25:33.4387691Z                      int32_sub = isub_32
2021-05-10T23:25:33.4388070Z                      int32_add = iadd_32
2021-05-10T23:25:33.4388443Z                       word_max = inlmax_u63
2021-05-10T23:25:33.4388840Z                       word_min = inlmin_u63
2021-05-10T23:25:33.4389200Z                       word_neq = <>u63
2021-05-10T23:25:33.4389610Z                       word_eql = =u63
2021-05-10T23:25:33.4389957Z                        word_ge = >=u63
2021-05-10T23:25:33.4390310Z                        word_gt = >u63
2021-05-10T23:25:33.4390653Z                        word_le = <=u63
2021-05-10T23:25:33.4391001Z                        word_lt = <u63
2021-05-10T23:25:33.4391368Z                      word_notb = notb_u63
2021-05-10T23:25:33.4391760Z                word_raw_lshift = lshift_u63
2021-05-10T23:25:33.4392199Z               word_raw_rshiftl = rshiftl_u63
2021-05-10T23:25:33.4392623Z                word_raw_rshift = rshift_u63
2021-05-10T23:25:33.4393065Z                    word_lshift = inllshift_u63
2021-05-10T23:25:33.4393508Z                   word_rshiftl = inlrshiftl_u63
2021-05-10T23:25:33.4393971Z                    word_rshift = inlrshift_u63
2021-05-10T23:25:33.4394384Z                      word_andb = andb_u63
2021-05-10T23:25:33.4394768Z                      word_xorb = xorb_u63
2021-05-10T23:25:33.4395134Z                       word_orb = orb_u63
2021-05-10T23:25:33.4395866Z                       word_neg = neg_u63
2021-05-10T23:25:33.4396365Z                       word_mod = inlrem_u63
2021-05-10T23:25:33.4396767Z                       word_div = inlquot_u63
2021-05-10T23:25:33.4397157Z                       word_mul = mul_u63
2021-05-10T23:25:33.4397517Z                       word_sub = sub_u63
2021-05-10T23:25:33.4397889Z                       word_add = add_u63
2021-05-10T23:25:33.4398241Z                        int_geu = >=u63
2021-05-10T23:25:33.4398593Z                        int_ltu = <u63
2021-05-10T23:25:33.4398943Z                       int_notb = notb_u63
2021-05-10T23:25:33.4399350Z                 int_raw_lshift = lshift_u63
2021-05-10T23:25:33.4399831Z                 int_raw_rshift = rshift_u63
2021-05-10T23:25:33.4400229Z                       int_andb = andb_u63
2021-05-10T23:25:33.4400595Z                       int_xorb = xorb_u63
2021-05-10T23:25:33.4401091Z                        int_orb = orb_u63
2021-05-10T23:25:33.4401484Z                 int_unsafe_sub = sub_u63
2021-05-10T23:25:33.4401875Z                 int_unsafe_add = add_u63
2021-05-10T23:25:33.4402274Z                        int_abs = inlabs_i63
2021-05-10T23:25:33.4402652Z                        int_max = inlmax_i63
2021-05-10T23:25:33.4403048Z                        int_min = inlmin_i63
2021-05-10T23:25:33.4403406Z                        int_neq = <>i63
2021-05-10T23:25:33.4403760Z                        int_eql = =i63
2021-05-10T23:25:33.4404101Z                         int_ge = >=i63
2021-05-10T23:25:33.4404446Z                         int_gt = >i63
2021-05-10T23:25:33.4404794Z                         int_le = <=i63
2021-05-10T23:25:33.4405268Z                         int_lt = <i63
2021-05-10T23:25:33.4405630Z                        int_neg = ineg_63
2021-05-10T23:25:33.4406003Z                        int_rem = inlrem_i63
2021-05-10T23:25:33.4406412Z                       int_quot = inlquot_i63
2021-05-10T23:25:33.4406801Z                        int_mod = inlmod_i63
2021-05-10T23:25:33.4407193Z                        int_div = inldiv_i63
2021-05-10T23:25:33.4407554Z                        int_mul = imul_63
2021-05-10T23:25:33.4407920Z                        int_sub = isub_63
2021-05-10T23:25:33.4408271Z                        int_add = iadd_63
2021-05-10T23:25:33.4408721Z       real64_arr_unsafe_update = numupdate_f64
2021-05-10T23:25:33.4409238Z          real64_arr_unsafe_sub = numsubscript_f64
2021-05-10T23:25:33.4409768Z              real64_arr_update = inlnumupdate_f64
2021-05-10T23:25:33.4410304Z                 real64_arr_sub = inlnumsubscript_f64
2021-05-10T23:25:33.4410821Z         char_arr_unsafe_update = numupdate_u8
2021-05-10T23:25:33.4411337Z            char_arr_unsafe_sub = numsubscript_u8
2021-05-10T23:25:33.4411842Z                char_arr_update = inlnumupdate_u8
2021-05-10T23:25:33.4861446Z                   char_arr_sub = inlnumsubscript_u8
2021-05-10T23:25:33.4862097Z         char_vec_unsafe_update = numupdate_u8
2021-05-10T23:25:33.4862870Z            char_vec_unsafe_sub = numsubscriptv_u8
2021-05-10T23:25:33.4863507Z                   char_vec_sub = inlnumsubscriptv_u8
2021-05-10T23:25:33.4864109Z        word8_arr_unsafe_update = numupdate_u8
2021-05-10T23:25:33.4864707Z           word8_arr_unsafe_sub = numsubscript_u8
2021-05-10T23:25:33.4865293Z               word8_arr_update = inlnumupdate_u8
2021-05-10T23:25:33.4865900Z                  word8_arr_sub = inlnumsubscript_u8
2021-05-10T23:25:33.4866492Z        word8_vec_unsafe_update = numupdate_u8
2021-05-10T23:25:33.4867097Z           word8_vec_unsafe_sub = numsubscriptv_u8
2021-05-10T23:25:33.4867713Z                  word8_vec_sub = inlnumsubscriptv_u8
2021-05-10T23:25:33.4868330Z                      recordSub = subscriptrec
2021-05-10T23:25:33.4868909Z                       raw64Sub = subscriptraw64
2021-05-10T23:25:33.4869433Z                       seq_data = getseqdata
2021-05-10T23:25:33.4869916Z                     seq_length = length
2021-05-10T23:25:33.4870403Z                      newArray0 = newarray0
2021-05-10T23:25:33.4870973Z             arr_unboxed_update = unboxedupdate
2021-05-10T23:25:33.4871524Z                     arr_update = inlupdate
2021-05-10T23:25:33.4872030Z              arr_unsafe_update = update
2021-05-10T23:25:33.4872542Z                        vec_sub = inlsubscriptv
2021-05-10T23:25:33.4873066Z                 vec_unsafe_sub = subscriptv
2021-05-10T23:25:33.4873576Z                        arr_sub = inlsubscript
2021-05-10T23:25:33.4874089Z                 arr_unsafe_sub = subscript
2021-05-10T23:25:33.4874594Z                        mkarray = inlmkarray
2021-05-10T23:25:33.4875032Z                        inl_ord = cast
2021-05-10T23:25:33.4875978Z                        inl_chr = inlchr
2021-05-10T23:25:33.4879103Z                        inl_not = inlnot
2021-05-10T23:25:33.4879605Z                   inl_identity = inlidentity
2021-05-10T23:25:33.4880111Z                     inl_ignore = inlignore
2021-05-10T23:25:33.4880627Z                     inl_before = inlbefore
2021-05-10T23:25:33.4881133Z                    inl_compose = inlcompose
2021-05-10T23:25:33.4881651Z                      objlength = objlength
2021-05-10T23:25:33.4882111Z                         gettag = gettag
2021-05-10T23:25:33.4882568Z                        sethdlr = sethdlr
2021-05-10T23:25:33.4883034Z                        gethdlr = gethdlr
2021-05-10T23:25:33.4883535Z                     setspecial = setspecial
2021-05-10T23:25:33.4884089Z                     getspecial = getspecial
2021-05-10T23:25:33.4884666Z                      mkspecial = mkspecial
2021-05-10T23:25:33.4885390Z                         setvar = setvar
2021-05-10T23:25:33.4885852Z                         getvar = getvar
2021-05-10T23:25:33.4886308Z                        ptr_neq = ptrneq
2021-05-10T23:25:33.4886748Z                        ptr_eql = ptreql
2021-05-10T23:25:33.4887186Z                             <> = polyneq
2021-05-10T23:25:33.4887597Z                              = = polyeql
2021-05-10T23:25:33.4888014Z                           cast = cast
2021-05-10T23:25:33.4888453Z                        unboxed = unboxed
2021-05-10T23:25:33.4888889Z                          boxed = boxed
2021-05-10T23:25:33.4889343Z                        makeref = makeref
2021-05-10T23:25:33.4889748Z                             := = :=
2021-05-10T23:25:33.4890111Z                              ! = !
2021-05-10T23:25:33.4890495Z                         cthrow = throw
2021-05-10T23:25:33.4890943Z                        isolate = isolate
2021-05-10T23:25:33.4891398Z                        capture = capture
2021-05-10T23:25:33.4891845Z                          throw = throw
2021-05-10T23:25:33.4892261Z                         callcc = callcc
2021-05-10T23:25:33.4892660Z ********************
2021-05-10T23:25:33.4893112Z [library $smlnj/basis/basis.cm is stable]
2021-05-10T23:25:33.4893698Z [library $smlnj/cm.cm is stable]
2021-05-10T23:25:33.4903341Z [library $smlnj/smlnj-lib/smlnj-lib.cm is stable]
2021-05-10T23:25:33.4930993Z [library $smlnj/compiler.cm is stable]
2021-05-10T23:25:33.4955247Z [library $smlnj/compiler/minimal.cm is stable]
2021-05-10T23:25:33.4956447Z Generating heap image...
2021-05-10T23:25:33.5124120Z This is...
2021-05-10T23:25:33.5125670Z Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon May 10 23:25:33 2021]
2021-05-10T23:25:33.7462009Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: installing /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/ml-build
2021-05-10T23:25:33.7490593Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: Installing other libraries and programs:
2021-05-10T23:25:33.7692028Z Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon May 10 23:25:33 2021]
2021-05-10T23:25:33.7745578Z [library $smlnj/installer.cm is stable]
2021-05-10T23:25:33.7797200Z $Execute: required privileges are:
2021-05-10T23:25:33.7797927Z   cm-init
2021-05-10T23:25:33.7798510Z [library $SMLNJ-BASIS/basis.cm is stable]
2021-05-10T23:25:33.7799295Z [library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
2021-05-10T23:25:33.7838293Z [library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
2021-05-10T23:25:33.7850114Z [library $smlnj/installer/util.cm is stable]
2021-05-10T23:25:33.7855506Z [library $smlnj/cm/cm.cm is stable]
2021-05-10T23:25:33.7859456Z [library $smlnj/internal/cm-sig-lib.cm is stable]
2021-05-10T23:25:33.7862374Z [library $/pgraph.cm is stable]
2021-05-10T23:25:33.7874424Z [library $smlnj/internal/cm0.cm is stable]
2021-05-10T23:25:33.7879551Z [library $smlnj/internal/srcpath-lib.cm is stable]
2021-05-10T23:25:33.8035173Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching Trace/Debug/Profile code from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:33.8037369Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying trace-debug-profile.tgz ...
2021-05-10T23:25:33.9000655Z 2021-05-10 23:25:33 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//trace-debug-profile.tgz [3937/3937] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/trace-debug-profile.tgz"" [1]
2021-05-10T23:25:33.9004385Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching trace-debug-profile.tgz was a success.
2021-05-10T23:25:33.9006558Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing Trace/Debug/Profile code archive.
2021-05-10T23:25:33.9043370Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching SML/NJ Library from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:33.9045631Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying smlnj-lib.tgz ...
2021-05-10T23:25:34.0686806Z 2021-05-10 23:25:34 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//smlnj-lib.tgz [637841/637841] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib.tgz"" [1]
2021-05-10T23:25:34.0690617Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching smlnj-lib.tgz was a success.
2021-05-10T23:25:34.0692553Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing SML/NJ Library archive.
2021-05-10T23:25:34.0919345Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching Old Basis Libraries from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:34.0921228Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying old-basis.tgz ...
2021-05-10T23:25:34.1338540Z 2021-05-10 23:25:34 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//old-basis.tgz [1216/1216] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/old-basis.tgz"" [1]
2021-05-10T23:25:34.1345556Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching old-basis.tgz was a success.
2021-05-10T23:25:34.1347651Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing Old Basis Libraries archive.
2021-05-10T23:25:34.1373855Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching MLRISC Library from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:34.1375900Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying MLRISC.tgz ...
2021-05-10T23:25:34.3225664Z 2021-05-10 23:25:34 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//MLRISC.tgz [1460280/1460280] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC.tgz"" [1]
2021-05-10T23:25:34.3229354Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching MLRISC.tgz was a success.
2021-05-10T23:25:34.3231194Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing MLRISC Library archive.
2021-05-10T23:25:34.3650362Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching ML-Yacc from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:34.3652335Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying ml-yacc.tgz ...
2021-05-10T23:25:34.4587545Z 2021-05-10 23:25:34 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//ml-yacc.tgz [101719/101719] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-yacc.tgz"" [1]
2021-05-10T23:25:34.4590871Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching ml-yacc.tgz was a success.
2021-05-10T23:25:34.4592672Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing ML-Yacc archive.
2021-05-10T23:25:34.4655472Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: The ML-Yacc tree already exists.
2021-05-10T23:25:34.4657777Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching new unicode lexer generator from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:34.4659779Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying ml-lpt.tgz ...
2021-05-10T23:25:34.6120192Z 2021-05-10 23:25:34 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//ml-lpt.tgz [268113/268113] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lpt.tgz"" [1]
2021-05-10T23:25:34.6128285Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching ml-lpt.tgz was a success.
2021-05-10T23:25:34.6130223Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing new unicode lexer generator archive.
2021-05-10T23:25:34.6231041Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: The new unicode lexer generator tree already exists.
2021-05-10T23:25:34.6232907Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: The utilities for language processing tools tree already exists.
2021-05-10T23:25:34.6234832Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching ML-Lex from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:34.6236479Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying ml-lex.tgz ...
2021-05-10T23:25:34.7173116Z 2021-05-10 23:25:34 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//ml-lex.tgz [28168/28168] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lex.tgz"" [1]
2021-05-10T23:25:34.7174645Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching ml-lex.tgz was a success.
2021-05-10T23:25:34.7175944Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing ML-Lex archive.
2021-05-10T23:25:34.7206732Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: The ML-Lex tree already exists.
2021-05-10T23:25:34.7208682Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching ML-Burg from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:34.7210629Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying ml-burg.tgz ...
2021-05-10T23:25:34.7787577Z 2021-05-10 23:25:34 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//ml-burg.tgz [40550/40550] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-burg.tgz"" [1]
2021-05-10T23:25:34.7790743Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching ml-burg.tgz was a success.
2021-05-10T23:25:34.7792534Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing ML-Burg archive.
2021-05-10T23:25:34.7827018Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: The new LL(k) parser generator tree already exists.
2021-05-10T23:25:34.7829046Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching documentation from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:34.7830722Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying doc.tgz ...
2021-05-10T23:25:35.2794782Z 2021-05-10 23:25:35 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//doc.tgz [2439348/2439348] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/doc.tgz"" [1]
2021-05-10T23:25:35.2796850Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching doc.tgz was a success.
2021-05-10T23:25:35.2798498Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing documentation archive.
2021-05-10T23:25:35.3202511Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching CML from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:35.3204425Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying cml.tgz ...
2021-05-10T23:25:35.4488554Z 2021-05-10 23:25:35 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//cml.tgz [104484/104484] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml.tgz"" [1]
2021-05-10T23:25:35.4492236Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching cml.tgz was a success.
2021-05-10T23:25:35.4493860Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing CML archive.
2021-05-10T23:25:35.4561415Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: The CML tree already exists.
2021-05-10T23:25:35.4563443Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching C-Kit from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:35.4565405Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying ckit.tgz ...
2021-05-10T23:25:35.7061286Z 2021-05-10 23:25:35 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//ckit.tgz [201122/201122] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit.tgz"" [1]
2021-05-10T23:25:35.7069348Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching ckit.tgz was a success.
2021-05-10T23:25:35.7071215Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing C-Kit archive.
2021-05-10T23:25:35.7204726Z Unknown package: asdl.
2021-05-10T23:25:35.7205782Z Trying default method...
2021-05-10T23:25:35.7207689Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching asdl from http://smlnj.cs.uchicago.edu/dist/working/110.99.1/. Please stand by...
2021-05-10T23:25:35.7209195Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Trying asdl.tgz ...
2021-05-10T23:25:35.8320452Z 2021-05-10 23:25:35 URL:http://smlnj.cs.uchicago.edu/dist/working/110.99.1//asdl.tgz [219264/219264] -> ""/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl.tgz"" [1]
2021-05-10T23:25:35.8328467Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Fetching asdl.tgz was a success.
2021-05-10T23:25:35.8330311Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/unpack: Un-GZIP-ing and un-TAR-ing asdl archive.
2021-05-10T23:25:35.8421073Z Scheduling library $basis-2004.cm/basis-2004.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/basis-2004.cm/.cm/amd64-unix/basis-2004.cm
2021-05-10T23:25:35.8461573Z Scheduling library $ml-lpt-lib.cm/ml-lpt-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/ml-lpt-lib.cm/.cm/amd64-unix/ml-lpt-lib.cm
2021-05-10T23:25:35.8463646Z Scheduling library $unix-lib.cm/unix-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/unix-lib.cm/.cm/amd64-unix/unix-lib.cm
2021-05-10T23:25:35.8480187Z Scheduling library $hash-cons-lib.cm/hash-cons-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/hash-cons-lib.cm/.cm/amd64-unix/hash-cons-lib.cm
2021-05-10T23:25:35.8498323Z Scheduling library $html-lib.cm/html-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/html-lib.cm/.cm/amd64-unix/html-lib.cm
2021-05-10T23:25:35.8517963Z Scheduling library $html4-lib.cm/html4-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/html4-lib.cm/.cm/amd64-unix/html4-lib.cm
2021-05-10T23:25:35.8535929Z Scheduling library $inet-lib.cm/inet-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/inet-lib.cm/.cm/amd64-unix/inet-lib.cm
2021-05-10T23:25:35.8555483Z Scheduling library $json-lib.cm/json-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/json-lib.cm/.cm/amd64-unix/json-lib.cm
2021-05-10T23:25:35.8581578Z Scheduling library $pp-extras-lib.cm/pp-extras-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/pp-extras-lib.cm/.cm/amd64-unix/pp-extras-lib.cm
2021-05-10T23:25:35.8600143Z Scheduling library $regexp-lib.cm/regexp-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/regexp-lib.cm/.cm/amd64-unix/regexp-lib.cm
2021-05-10T23:25:35.8619482Z Scheduling library $reactive-lib.cm/reactive-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/reactive-lib.cm/.cm/amd64-unix/reactive-lib.cm
2021-05-10T23:25:35.8638983Z Scheduling library $sexp-lib.cm/sexp-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/sexp-lib.cm/.cm/amd64-unix/sexp-lib.cm
2021-05-10T23:25:35.8656683Z Scheduling library $uuid-lib.cm/uuid-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/uuid-lib.cm/.cm/amd64-unix/uuid-lib.cm
2021-05-10T23:25:35.8676407Z Scheduling library $xml-lib.cm/xml-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/xml-lib.cm/.cm/amd64-unix/xml-lib.cm
2021-05-10T23:25:35.8694208Z Scheduling library $ml-ulex-tool.cm/ml-ulex-tool.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/ml-ulex-tool.cm/.cm/amd64-unix/ml-ulex-tool.cm
2021-05-10T23:25:35.8713813Z Scheduling library $mllex-tool.cm/mllex-tool.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/mllex-tool.cm/.cm/amd64-unix/mllex-tool.cm
2021-05-10T23:25:35.8730619Z Building ml-lex.
2021-05-10T23:25:35.8748097Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/ml-build -64 ml-lex.cm ExportLexGen.lexGen ml-lex
2021-05-10T23:25:35.8982495Z Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon May 10 23:25:33 2021]
2021-05-10T23:25:35.9004248Z [scanning ml-lex.cm]
2021-05-10T23:25:35.9010349Z [parsing (ml-lex.cm):lexgen.sml]
2021-05-10T23:25:35.9394845Z [creating directory .cm/SKEL]
2021-05-10T23:25:35.9438472Z [parsing (ml-lex.cm):export-lex.sml]
2021-05-10T23:25:35.9459396Z [library $SMLNJ-BASIS/basis.cm is stable]
2021-05-10T23:25:35.9495498Z [library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
2021-05-10T23:25:35.9692625Z [library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
2021-05-10T23:25:35.9718196Z [compiling (ml-lex.cm):lexgen.sml]
2021-05-10T23:25:35.9718758Z [creating directory .cm/GUID]
2021-05-10T23:25:36.3994043Z [creating directory .cm/amd64-unix]
2021-05-10T23:25:36.3994620Z [code: 107648, data: 6608, env: 151 bytes]
2021-05-10T23:25:36.4004669Z [compiling (ml-lex.cm):export-lex.sml]
2021-05-10T23:25:36.4104031Z [code: 3809, data: 193, env: 253 bytes]
2021-05-10T23:25:36.4131228Z [scanning 3114-export.cm]
2021-05-10T23:25:36.4135050Z [scanning (3114-export.cm):ml-lex.cm]
2021-05-10T23:25:36.4143905Z [parsing (3114-export.cm):3114-export.sml]
2021-05-10T23:25:36.4154390Z [compiling (3114-export.cm):3114-export.sml]
2021-05-10T23:25:36.4175836Z [code: 236, data: 28, env: 39 bytes]
2021-05-10T23:25:36.4502536Z Scheduling library $lex-ext.cm/lex-ext.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/lex-ext.cm/.cm/amd64-unix/lex-ext.cm
2021-05-10T23:25:36.4523444Z Building ml-yacc.
2021-05-10T23:25:36.4762268Z Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon May 10 23:25:33 2021]
2021-05-10T23:25:36.4784517Z [scanning ml-yacc.cm]
2021-05-10T23:25:36.4792933Z [library $/ml-yacc-lib.cm is stable]
2021-05-10T23:25:36.4796093Z [parsing (ml-yacc.cm):sigs.sml]
2021-05-10T23:25:36.4889501Z [creating directory .cm/SKEL]
2021-05-10T23:25:36.4896197Z [parsing (ml-yacc.cm):utils.sig]
2021-05-10T23:25:36.4914121Z [parsing (ml-yacc.cm):hdr.sml]
2021-05-10T23:25:36.4943698Z [parsing (ml-yacc.cm):yacc.grm.sig]
2021-05-10T23:25:36.4962997Z [parsing (ml-yacc.cm):yacc.grm.sml]
2021-05-10T23:25:36.5244908Z [parsing (ml-yacc.cm):yacc.lex.sml]
2021-05-10T23:25:36.5867175Z [parsing (ml-yacc.cm):parse.sml]
2021-05-10T23:25:36.5878429Z [parsing (ml-yacc.cm):utils.sml]
2021-05-10T23:25:36.6076780Z [parsing (ml-yacc.cm):grammar.sml]
2021-05-10T23:25:36.6093690Z [parsing (ml-yacc.cm):core.sml]
2021-05-10T23:25:36.6110167Z [parsing (ml-yacc.cm):coreutils.sml]
2021-05-10T23:25:36.6171795Z [parsing (ml-yacc.cm):graph.sml]
2021-05-10T23:25:36.6193635Z [parsing (ml-yacc.cm):look.sml]
2021-05-10T23:25:36.6232194Z [parsing (ml-yacc.cm):lalr.sml]
2021-05-10T23:25:36.6341861Z [parsing (ml-yacc.cm):mklrtable.sml]
2021-05-10T23:25:36.6466849Z [parsing (ml-yacc.cm):mkprstruct.sml]
2021-05-10T23:25:36.6501266Z [parsing (ml-yacc.cm):shrink.sml]
2021-05-10T23:25:36.6555841Z [parsing (ml-yacc.cm):verbose.sml]
2021-05-10T23:25:36.6621989Z [parsing (ml-yacc.cm):absyn.sig]
2021-05-10T23:25:36.6627174Z [parsing (ml-yacc.cm):absyn.sml]
2021-05-10T23:25:36.6669642Z [parsing (ml-yacc.cm):yacc.sml]
2021-05-10T23:25:36.6844676Z [parsing (ml-yacc.cm):link.sml]
2021-05-10T23:25:36.6854880Z [parsing (ml-yacc.cm):export-yacc.sml]
2021-05-10T23:25:36.6873588Z [library $SMLNJ-BASIS/basis.cm is stable]
2021-05-10T23:25:36.6942843Z [library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
2021-05-10T23:25:36.7139072Z [library $SMLNJ-ML-YACC-LIB/ml-yacc-lib.cm is stable]
2021-05-10T23:25:36.7285947Z [compiling (ml-yacc.cm):utils.sig]
2021-05-10T23:25:36.7289014Z [creating directory .cm/GUID]
2021-05-10T23:25:36.7317404Z [creating directory .cm/amd64-unix]
2021-05-10T23:25:36.7317921Z [code: 65, data: 1, env: 1321 bytes]
2021-05-10T23:25:36.7320831Z [compiling (ml-yacc.cm):sigs.sml]
2021-05-10T23:25:36.7444706Z [code: 65, data: 1, env: 7247 bytes]
2021-05-10T23:25:36.7453300Z [compiling (ml-yacc.cm):hdr.sml]
2021-05-10T23:25:36.7770523Z [code: 9108, data: 164, env: 1944 bytes]
2021-05-10T23:25:36.7781237Z [compiling (ml-yacc.cm):yacc.grm.sig]
2021-05-10T23:25:36.7810085Z [code: 65, data: 1, env: 1104 bytes]
2021-05-10T23:25:36.7813694Z [compiling (ml-yacc.cm):yacc.grm.sml]
2021-05-10T23:25:37.0610517Z [code: 58871, data: 2463, env: 6412 bytes]
2021-05-10T23:25:37.0611668Z [compiling (ml-yacc.cm):yacc.lex.sml]
2021-05-10T23:25:37.5156020Z [code: 86628, data: 444, env: 3967 bytes]
2021-05-10T23:25:37.5157154Z [compiling (ml-yacc.cm):parse.sml]
2021-05-10T23:25:37.5240190Z [code: 1777, data: 1, env: 924 bytes]
2021-05-10T23:25:37.5241202Z [compiling (ml-yacc.cm):utils.sml]
2021-05-10T23:25:37.6929069Z [code: 46556, data: 204, env: 1445 bytes]
2021-05-10T23:25:37.6932464Z [compiling (ml-yacc.cm):grammar.sml]
2021-05-10T23:25:37.6983256Z grammar.sml:46.45-46.49 Warning: calling polyEqual
2021-05-10T23:25:37.6984026Z grammar.sml:42.48-42.52 Warning: calling polyEqual
2021-05-10T23:25:37.6984723Z grammar.sml:39.39-39.43 Warning: calling polyEqual
2021-05-10T23:25:37.7140409Z [code: 5851, data: 83, env: 1376 bytes]
2021-05-10T23:25:37.7143098Z [compiling (ml-yacc.cm):core.sml]
2021-05-10T23:25:37.7337206Z [code: 5162, data: 82, env: 978 bytes]
2021-05-10T23:25:37.7338204Z [compiling (ml-yacc.cm):coreutils.sml]
2021-05-10T23:25:37.7808334Z [code: 16679, data: 271, env: 830 bytes]
2021-05-10T23:25:37.7809459Z [compiling (ml-yacc.cm):graph.sml]
2021-05-10T23:25:37.8114322Z [code: 9499, data: 187, env: 1221 bytes]
2021-05-10T23:25:37.8115370Z [compiling (ml-yacc.cm):look.sml]
2021-05-10T23:25:37.8456943Z [code: 10860, data: 156, env: 826 bytes]
2021-05-10T23:25:37.8458047Z [compiling (ml-yacc.cm):lalr.sml]
2021-05-10T23:25:37.9433738Z [code: 31976, data: 312, env: 1711 bytes]
2021-05-10T23:25:37.9465109Z [compiling (ml-yacc.cm):mklrtable.sml]
2021-05-10T23:25:37.9706859Z mklrtable.sml:333.38 Warning: calling polyEqual
2021-05-10T23:25:37.9707589Z mklrtable.sml:325.38 Warning: calling polyEqual
2021-05-10T23:25:38.0817450Z [code: 38526, data: 542, env: 5799 bytes]
2021-05-10T23:25:38.0818586Z [compiling (ml-yacc.cm):verbose.sml]
2021-05-10T23:25:38.1150815Z [code: 11991, data: 447, env: 370 bytes]
2021-05-10T23:25:38.1152106Z [compiling (ml-yacc.cm):shrink.sml]
2021-05-10T23:25:38.1210940Z shrink.sml:183.28 Warning: calling polyEqual
2021-05-10T23:25:38.1211619Z shrink.sml:181.6 Warning: calling polyEqual
2021-05-10T23:25:38.1212255Z shrink.sml:177.13 Warning: calling polyEqual
2021-05-10T23:25:38.1212889Z shrink.sml:171.18 Warning: calling polyEqual
2021-05-10T23:25:38.1545474Z [code: 11391, data: 87, env: 1291 bytes]
2021-05-10T23:25:38.1546580Z [compiling (ml-yacc.cm):mkprstruct.sml]
2021-05-10T23:25:38.1789885Z [code: 10062, data: 2238, env: 344 bytes]
2021-05-10T23:25:38.1790956Z [compiling (ml-yacc.cm):absyn.sig]
2021-05-10T23:25:38.1815587Z [code: 65, data: 1, env: 1256 bytes]
2021-05-10T23:25:38.1818988Z [compiling (ml-yacc.cm):absyn.sml]
2021-05-10T23:25:38.2298286Z [code: 18162, data: 130, env: 579 bytes]
2021-05-10T23:25:38.2299374Z [compiling (ml-yacc.cm):yacc.sml]
2021-05-10T23:25:38.2525570Z yacc.sml:351.34 Warning: calling polyEqual
2021-05-10T23:25:38.2535134Z yacc.sml:253.56 Warning: calling polyEqual
2021-05-10T23:25:38.5192836Z [code: 100565, data: 2525, env: 2378 bytes]
2021-05-10T23:25:38.5297379Z [compiling (ml-yacc.cm):link.sml]
2021-05-10T23:25:38.5929039Z [code: 12315, data: 27, env: 12959 bytes]
2021-05-10T23:25:38.5947228Z [compiling (ml-yacc.cm):export-yacc.sml]
2021-05-10T23:25:38.6044226Z [code: 3653, data: 221, env: 258 bytes]
2021-05-10T23:25:38.6074677Z [scanning 3143-export.cm]
2021-05-10T23:25:38.6075307Z [scanning (3143-export.cm):ml-yacc.cm]
2021-05-10T23:25:38.6106087Z [parsing (3143-export.cm):3143-export.sml]
2021-05-10T23:25:38.6161131Z [compiling (3143-export.cm):3143-export.sml]
2021-05-10T23:25:38.6180336Z [code: 237, data: 29, env: 39 bytes]
2021-05-10T23:25:38.6511234Z Scheduling library $mlyacc-tool.cm/mlyacc-tool.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/mlyacc-tool.cm/.cm/amd64-unix/mlyacc-tool.cm
2021-05-10T23:25:38.6533342Z Scheduling library $grm-ext.cm/grm-ext.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/grm-ext.cm/.cm/amd64-unix/grm-ext.cm
2021-05-10T23:25:38.6553036Z Scheduling library $ml-antlr-tool.cm/ml-antlr-tool.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/ml-antlr-tool.cm/.cm/amd64-unix/ml-antlr-tool.cm
2021-05-10T23:25:38.6569676Z Configuring asdl.
2021-05-10T23:25:38.9519523Z checking build system type... x86_64-pc-linux-gnu
2021-05-10T23:25:38.9521648Z checking host system type... x86_64-pc-linux-gnu
2021-05-10T23:25:38.9535122Z checking for gcc... gcc
2021-05-10T23:25:39.0075019Z checking whether the C compiler works... yes
2021-05-10T23:25:39.0076101Z checking for C compiler default output file name... a.out
2021-05-10T23:25:39.0416802Z checking for suffix of executables...
2021-05-10T23:25:39.0803859Z checking whether we are cross compiling... no
2021-05-10T23:25:39.1014872Z checking for suffix of object files... o
2021-05-10T23:25:39.1206596Z checking whether we are using the GNU C compiler... yes
2021-05-10T23:25:39.1403683Z checking whether gcc accepts -g... yes
2021-05-10T23:25:39.1740002Z checking for gcc option to accept ISO C89... none needed
2021-05-10T23:25:39.2027208Z checking how to run the C preprocessor... gcc -E
2021-05-10T23:25:39.2411865Z checking whether we are using the GNU C compiler... (cached) yes
2021-05-10T23:25:39.2413311Z checking whether gcc accepts -g... (cached) yes
2021-05-10T23:25:39.2414075Z checking for gcc option to accept ISO C89... (cached) none needed
2021-05-10T23:25:39.2414806Z checking for clang++... clang++
2021-05-10T23:25:45.6223951Z checking whether we are using the GNU C++ compiler... yes
2021-05-10T23:25:45.6632410Z checking whether clang++ accepts -g... yes
2021-05-10T23:25:46.4458100Z checking whether clang++ supports C++11 features by default... yes
2021-05-10T23:25:46.4551930Z checking for a BSD-compatible install... /usr/bin/install -c
2021-05-10T23:25:46.4623021Z checking whether make sets $(MAKE)... yes
2021-05-10T23:25:46.4638213Z checking for grep that handles long lines and -e... /usr/bin/grep
2021-05-10T23:25:46.4656700Z checking for egrep... /usr/bin/grep -E
2021-05-10T23:25:46.5806011Z checking for ANSI C header files... yes
2021-05-10T23:25:46.6061315Z checking for sys/types.h... yes
2021-05-10T23:25:46.6351804Z checking for sys/stat.h... yes
2021-05-10T23:25:46.6644378Z checking for stdlib.h... yes
2021-05-10T23:25:46.6966302Z checking for string.h... yes
2021-05-10T23:25:46.7285748Z checking for memory.h... yes
2021-05-10T23:25:46.7597333Z checking for strings.h... yes
2021-05-10T23:25:46.7917804Z checking for inttypes.h... yes
2021-05-10T23:25:46.8236357Z checking for stdint.h... yes
2021-05-10T23:25:46.8581835Z checking for unistd.h... yes
2021-05-10T23:25:46.9189388Z checking size of int... 4
2021-05-10T23:25:46.9775616Z checking size of long... 8
2021-05-10T23:25:47.0357487Z checking size of float... 4
2021-05-10T23:25:47.0955668Z checking size of double... 8
2021-05-10T23:25:47.1087538Z checking version of SML/NJ... 110.99.1
2021-05-10T23:25:47.1182406Z checking heap suffix of SML/NJ... amd64-linux
2021-05-10T23:25:47.1183767Z checking for ml-makedepend... /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/ml-makedepend
2021-05-10T23:25:47.1185559Z checking for ml-build... /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/ml-build
2021-05-10T23:25:47.1186421Z checking for ld... /usr/bin/ld
2021-05-10T23:25:47.1624840Z configure: creating ./config.status
2021-05-10T23:25:47.2374452Z config.status: creating Makefile
2021-05-10T23:25:47.2486074Z config.status: creating doc/Makefile
2021-05-10T23:25:47.2632277Z config.status: creating doc/manual-2.0/Makefile
2021-05-10T23:25:47.2779330Z config.status: creating doc/manual-3.0/Makefile
2021-05-10T23:25:47.2944591Z config.status: creating examples/Makefile
2021-05-10T23:25:47.3104006Z config.status: creating src/Makefile
2021-05-10T23:25:47.3261585Z config.status: creating src/asdlgen/Makefile
2021-05-10T23:25:47.3418824Z config.status: creating src/lib/Makefile
2021-05-10T23:25:47.3575513Z config.status: creating src/lib/cxx/Makefile
2021-05-10T23:25:47.3754243Z config.status: creating src/tests/Makefile
2021-05-10T23:25:47.3931896Z config.status: creating src/tests/basics/Makefile
2021-05-10T23:25:47.4091578Z config.status: creating src/tests/options/Makefile
2021-05-10T23:25:47.4239395Z config.status: creating src/tests/primitives/Makefile
2021-05-10T23:25:47.4396451Z config.status: creating src/tests/sequences/Makefile
2021-05-10T23:25:47.4555246Z config.status: creating src/asdlgen/common/config.sml
2021-05-10T23:25:47.4713564Z config.status: creating bin/install-sml-wrapper.sh
2021-05-10T23:25:47.4889406Z config.status: creating src/gen/fragments/mkfrags.sh
2021-05-10T23:25:47.5055123Z config.status: creating src/gen/fragments/mkmk.sh
2021-05-10T23:25:47.5228738Z config.status: creating src/lib/cxx/include/asdl/config.h
2021-05-10T23:25:47.5596725Z Scheduling library $asdlgen-tool.cm/asdlgen-tool.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/asdlgen-tool.cm/.cm/amd64-unix/asdlgen-tool.cm
2021-05-10T23:25:47.5599234Z Scheduling library $asdl-ext.cm/asdl-ext.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/asdl-ext.cm/.cm/amd64-unix/asdl-ext.cm
2021-05-10T23:25:47.5601135Z Scheduling library $asdl-lib.cm/asdl-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/asdl-lib.cm/.cm/amd64-unix/asdl-lib.cm
2021-05-10T23:25:47.5602964Z Scheduling library $smlnj-tdp/plugins.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/smlnj-tdp/.cm/amd64-unix/plugins.cm
2021-05-10T23:25:47.5615448Z Scheduling library $smlnj-tdp/back-trace.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/smlnj-tdp/.cm/amd64-unix/back-trace.cm
2021-05-10T23:25:47.5633661Z Scheduling library $smlnj-tdp/coverage.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/smlnj-tdp/.cm/amd64-unix/coverage.cm
2021-05-10T23:25:47.5652617Z Scheduling library $cml/core-cml.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/cml/.cm/amd64-unix/core-cml.cm
2021-05-10T23:25:47.5671230Z Scheduling library $cml/cml-internal.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/cml/.cm/amd64-unix/cml-internal.cm
2021-05-10T23:25:47.5691822Z Scheduling library $cml/cml.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/cml/.cm/amd64-unix/cml.cm
2021-05-10T23:25:47.5710733Z Scheduling library $cml/basis.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/cml/.cm/amd64-unix/basis.cm
2021-05-10T23:25:47.5729726Z Scheduling library $cml-lib/trace-cml.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/cml-lib/.cm/amd64-unix/trace-cml.cm
2021-05-10T23:25:47.5748285Z Scheduling library $cml-lib/smlnj-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/cml-lib/.cm/amd64-unix/smlnj-lib.cm
2021-05-10T23:25:47.5766922Z Scheduling library $cml/trace-cml.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/cml/.cm/amd64-unix/trace-cml.cm
2021-05-10T23:25:47.5785525Z Scheduling library $cml/smlnj-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/cml/.cm/amd64-unix/smlnj-lib.cm
2021-05-10T23:25:47.5804178Z Scheduling library $cml/inet-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/cml/.cm/amd64-unix/inet-lib.cm
2021-05-10T23:25:47.5822862Z Scheduling library $cml/unix-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/cml/.cm/amd64-unix/unix-lib.cm
2021-05-10T23:25:47.5841476Z Scheduling library $cml/cml-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/cml/.cm/amd64-unix/cml-lib.cm
2021-05-10T23:25:47.6228205Z Scheduling library $OTHER-MLRISC/RA.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/RA.cm
2021-05-10T23:25:47.6247063Z Scheduling library $OTHER-MLRISC/Peephole.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/Peephole.cm
2021-05-10T23:25:47.6266202Z Scheduling library $OTHER-MLRISC/IA32-Peephole.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/IA32-Peephole.cm
2021-05-10T23:25:47.6283884Z Library $OTHER-MLRISC/AMD64.cm already existed in /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/AMD64.cm.  Will rebuild.
2021-05-10T23:25:47.6285967Z Scheduling library $OTHER-MLRISC/AMD64.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/AMD64.cm
2021-05-10T23:25:47.6302019Z Scheduling library $OTHER-MLRISC/AMD64-Peephole.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/AMD64-Peephole.cm
2021-05-10T23:25:47.6321670Z Scheduling library $OTHER-MLRISC/StagedAlloc.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/StagedAlloc.cm
2021-05-10T23:25:47.6339141Z Scheduling library $OTHER-MLRISC/CCall.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/CCall.cm
2021-05-10T23:25:47.6358772Z Scheduling library $OTHER-MLRISC/CCall-x86-64.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/CCall-x86-64.cm
2021-05-10T23:25:47.6376514Z Scheduling library $OTHER-MLRISC/CCall-x86.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/CCall-x86.cm
2021-05-10T23:25:47.6395957Z Scheduling library $OTHER-MLRISC/CCall-sparc.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/CCall-sparc.cm
2021-05-10T23:25:47.6413625Z Scheduling library $OTHER-MLRISC/CCall-Vararg.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/SMLNJ-MLRISC/.cm/amd64-unix/CCall-Vararg.cm
2021-05-10T23:25:47.6433115Z Scheduling library $ckit-lib.cm/ckit-lib.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/ckit-lib.cm/.cm/amd64-unix/ckit-lib.cm
2021-05-10T23:25:47.6450827Z Building ml-burg.
2021-05-10T23:25:47.6705749Z Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon May 10 23:25:33 2021]
2021-05-10T23:25:47.6725364Z [scanning ml-burg.cm]
2021-05-10T23:25:47.6742077Z [library $/ml-yacc-lib.cm is stable]
2021-05-10T23:25:47.6744047Z [parsing (ml-burg.cm):errormsg.sml]
2021-05-10T23:25:47.6751696Z [creating directory .cm/SKEL]
2021-05-10T23:25:47.6755419Z [parsing (ml-burg.cm):burg-ast.sml]
2021-05-10T23:25:47.6769837Z [parsing (ml-burg.cm):burg-lex.sml]
2021-05-10T23:25:47.7003913Z [parsing (ml-burg.cm):burg-gram.sig]
2021-05-10T23:25:47.7051605Z [parsing (ml-burg.cm):burg-gram.sml]
2021-05-10T23:25:47.7115829Z [parsing (ml-burg.cm):parse.sml]
2021-05-10T23:25:47.7125690Z [parsing (ml-burg.cm):burg.sml]
2021-05-10T23:25:47.7523490Z [parsing (ml-burg.cm):main.sml]
2021-05-10T23:25:47.7543927Z [library $SMLNJ-ML-YACC-LIB/ml-yacc-lib.cm is stable]
2021-05-10T23:25:47.7569910Z [library $SMLNJ-BASIS/basis.cm is stable]
2021-05-10T23:25:47.7622837Z [library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
2021-05-10T23:25:47.7730190Z [library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
2021-05-10T23:25:47.7759226Z [compiling (ml-burg.cm):burg-ast.sml]
2021-05-10T23:25:47.7761138Z [creating directory .cm/GUID]
2021-05-10T23:25:47.7815334Z [creating directory .cm/amd64-unix]
2021-05-10T23:25:47.7816991Z [code: 84, data: 20, env: 898 bytes]
2021-05-10T23:25:47.7818374Z [compiling (ml-burg.cm):burg-gram.sig]
2021-05-10T23:25:47.7840468Z [code: 65, data: 1, env: 688 bytes]
2021-05-10T23:25:47.7845974Z [compiling (ml-burg.cm):burg-gram.sml]
2021-05-10T23:25:47.8712911Z [code: 20170, data: 1170, env: 1541 bytes]
2021-05-10T23:25:47.8716319Z [compiling (ml-burg.cm):errormsg.sml]
2021-05-10T23:25:47.8772684Z [code: 2113, data: 97, env: 289 bytes]
2021-05-10T23:25:47.8776597Z [compiling (ml-burg.cm):burg-lex.sml]
2021-05-10T23:25:48.0134553Z [code: 31043, data: 275, env: 3156 bytes]
2021-05-10T23:25:48.0178796Z [compiling (ml-burg.cm):parse.sml]
2021-05-10T23:25:48.0444320Z [code: 6553, data: 41, env: 5492 bytes]
2021-05-10T23:25:48.0456889Z [compiling (ml-burg.cm):burg.sml]
2021-05-10T23:25:48.0688336Z burg.sml:533.10 Warning: calling polyEqual
2021-05-10T23:25:48.4676640Z [code: 131364, data: 5004, env: 216 bytes]
2021-05-10T23:25:48.4686061Z [compiling (ml-burg.cm):main.sml]
2021-05-10T23:25:48.4802256Z [code: 4160, data: 96, env: 255 bytes]
2021-05-10T23:25:48.4828649Z [scanning 4281-export.cm]
2021-05-10T23:25:48.4831239Z [scanning (4281-export.cm):ml-burg.cm]
2021-05-10T23:25:48.4847771Z [parsing (4281-export.cm):4281-export.sml]
2021-05-10T23:25:48.4868147Z [compiling (4281-export.cm):4281-export.sml]
2021-05-10T23:25:48.4889590Z [code: 349, data: 29, env: 39 bytes]
2021-05-10T23:25:48.5223099Z Scheduling library $mlburg-tool.cm/mlburg-tool.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/mlburg-tool.cm/.cm/amd64-unix/mlburg-tool.cm
2021-05-10T23:25:48.5244619Z Scheduling library $burg-ext.cm/burg-ext.cm to be built as /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/lib/burg-ext.cm/.cm/amd64-unix/burg-ext.cm
2021-05-10T23:25:48.5285845Z [scanning $/basis-2004.cm]
2021-05-10T23:25:48.5292982Z [parsing $/(basis-2004.cm):basis.sml]
2021-05-10T23:25:48.5305162Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/old-basis/2004/.cm/SKEL]
2021-05-10T23:25:48.5315927Z [parsing $/(basis-2004.cm):target32-basis.sml]
2021-05-10T23:25:48.5489344Z [compiling $/(basis-2004.cm):basis.sml]
2021-05-10T23:25:48.5490408Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/old-basis/2004/.cm/GUID]
2021-05-10T23:25:48.6785696Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/base/old-basis/2004/.cm/amd64-unix]
2021-05-10T23:25:48.6787068Z [code: 11516, data: 108, env: 17463 bytes]
2021-05-10T23:25:48.7505611Z [stabilizing $/basis-2004.cm]
2021-05-10T23:25:48.9482832Z [code: 11516, data: 108, inlinable: 0, env: 24694 bytes]
2021-05-10T23:25:48.9511101Z [scanning $/ml-lpt-lib.cm]
2021-05-10T23:25:48.9513353Z [parsing $/(ml-lpt-lib.cm):ebnf.sml]
2021-05-10T23:25:48.9527030Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lpt/lib/.cm/SKEL]
2021-05-10T23:25:48.9529616Z [parsing $/(ml-lpt-lib.cm):err-handler.sml]
2021-05-10T23:25:48.9626275Z [parsing $/(ml-lpt-lib.cm):antlr-lexer-sig.sml]
2021-05-10T23:25:48.9630079Z [parsing $/(ml-lpt-lib.cm):repair.sml]
2021-05-10T23:25:48.9649369Z [parsing $/(ml-lpt-lib.cm):wrapped-strm.sml]
2021-05-10T23:25:48.9678595Z [parsing $/(ml-lpt-lib.cm):antlr-stream-pos.sml]
2021-05-10T23:25:48.9714069Z [parsing $/(ml-lpt-lib.cm):antlr-tokens-sig.sml]
2021-05-10T23:25:48.9726397Z [parsing $/(ml-lpt-lib.cm):ulex-buffer.sml]
2021-05-10T23:25:48.9766555Z [compiling $/(ml-lpt-lib.cm):antlr-tokens-sig.sml]
2021-05-10T23:25:48.9767652Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lpt/lib/.cm/GUID]
2021-05-10T23:25:48.9786423Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lpt/lib/.cm/amd64-unix]
2021-05-10T23:25:48.9787181Z [code: 89, data: 1, env: 547 bytes]
2021-05-10T23:25:48.9791114Z [compiling $/(ml-lpt-lib.cm):antlr-stream-pos.sml]
2021-05-10T23:25:49.0042712Z [code: 7782, data: 126, env: 1512 bytes]
2021-05-10T23:25:49.0050640Z [compiling $/(ml-lpt-lib.cm):ebnf.sml]
2021-05-10T23:25:49.0152116Z [code: 3153, data: 1, env: 580 bytes]
2021-05-10T23:25:49.0156260Z [compiling $/(ml-lpt-lib.cm):repair.sml]
2021-05-10T23:25:49.0318155Z [code: 5618, data: 98, env: 1096 bytes]
2021-05-10T23:25:49.0329178Z [compiling $/(ml-lpt-lib.cm):antlr-lexer-sig.sml]
2021-05-10T23:25:49.0340016Z [code: 81, data: 1, env: 244 bytes]
2021-05-10T23:25:49.0349926Z [compiling $/(ml-lpt-lib.cm):wrapped-strm.sml]
2021-05-10T23:25:49.0596229Z [code: 6732, data: 268, env: 1550 bytes]
2021-05-10T23:25:49.0603727Z [compiling $/(ml-lpt-lib.cm):err-handler.sml]
2021-05-10T23:25:49.1516994Z [code: 22206, data: 302, env: 2463 bytes]
2021-05-10T23:25:49.1544453Z [compiling $/(ml-lpt-lib.cm):ulex-buffer.sml]
2021-05-10T23:25:49.1735019Z [code: 6110, data: 574, env: 845 bytes]
2021-05-10T23:25:49.1743854Z [stabilizing $/ml-lpt-lib.cm]
2021-05-10T23:25:49.1852402Z [code: 51771, data: 1371, inlinable: 0, env: 9224 bytes]
2021-05-10T23:25:49.1876808Z [scanning $/unix-lib.cm]
2021-05-10T23:25:49.1881015Z [parsing $/(unix-lib.cm):unix-env-sig.sml]
2021-05-10T23:25:49.1890580Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/Unix/.cm/SKEL]
2021-05-10T23:25:49.1892913Z [parsing $/(unix-lib.cm):unix-env.sml]
2021-05-10T23:25:49.1911503Z [parsing $/(unix-lib.cm):unix-path-sig.sml]
2021-05-10T23:25:49.1923748Z [parsing $/(unix-lib.cm):unix-path.sml]
2021-05-10T23:25:49.1943739Z [compiling $/(unix-lib.cm):unix-env-sig.sml]
2021-05-10T23:25:49.1944816Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/Unix/.cm/GUID]
2021-05-10T23:25:49.1955789Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/Unix/.cm/amd64-unix]
2021-05-10T23:25:49.1956534Z [code: 89, data: 1, env: 323 bytes]
2021-05-10T23:25:49.1958314Z [compiling $/(unix-lib.cm):unix-env.sml]
2021-05-10T23:25:49.2078856Z [code: 3668, data: 20, env: 62 bytes]
2021-05-10T23:25:49.2079913Z [compiling $/(unix-lib.cm):unix-path-sig.sml]
2021-05-10T23:25:49.2099793Z [code: 89, data: 1, env: 787 bytes]
2021-05-10T23:25:49.2111260Z [compiling $/(unix-lib.cm):unix-path.sml]
2021-05-10T23:25:49.2206251Z [code: 2978, data: 26, env: 317 bytes]
2021-05-10T23:25:49.2216571Z [stabilizing $/unix-lib.cm]
2021-05-10T23:25:49.2242121Z [code: 6824, data: 48, inlinable: 0, env: 2663 bytes]
2021-05-10T23:25:49.2266092Z [scanning $/hash-cons-lib.cm]
2021-05-10T23:25:49.2269359Z [parsing $/(hash-cons-lib.cm):hash-cons-atom.sml]
2021-05-10T23:25:49.2272482Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/HashCons/.cm/SKEL]
2021-05-10T23:25:49.2275358Z [parsing $/(hash-cons-lib.cm):hash-cons-ground-fn.sml]
2021-05-10T23:25:49.2283061Z [parsing $/(hash-cons-lib.cm):hash-cons-map-sig.sml]
2021-05-10T23:25:49.2325524Z [parsing $/(hash-cons-lib.cm):hash-cons-map.sml]
2021-05-10T23:25:49.2362059Z [parsing $/(hash-cons-lib.cm):hash-cons-sig.sml]
2021-05-10T23:25:49.2387590Z [parsing $/(hash-cons-lib.cm):hash-cons.sml]
2021-05-10T23:25:49.2419630Z [parsing $/(hash-cons-lib.cm):hash-cons-set-sig.sml]
2021-05-10T23:25:49.2450902Z [parsing $/(hash-cons-lib.cm):hash-cons-set.sml]
2021-05-10T23:25:49.2649430Z [parsing $/(hash-cons-lib.cm):hash-cons-string.sml]
2021-05-10T23:25:49.2670825Z [compiling $/(hash-cons-lib.cm):hash-cons-sig.sml]
2021-05-10T23:25:49.2672174Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/HashCons/.cm/GUID]
2021-05-10T23:25:49.2706829Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/HashCons/.cm/amd64-unix]
2021-05-10T23:25:49.2707742Z [code: 89, data: 1, env: 1278 bytes]
2021-05-10T23:25:49.2711708Z [compiling $/(hash-cons-lib.cm):hash-cons.sml]
2021-05-10T23:25:49.3181562Z [code: 12470, data: 166, env: 379 bytes]
2021-05-10T23:25:49.3188322Z [compiling $/(hash-cons-lib.cm):hash-cons-ground-fn.sml]
2021-05-10T23:25:49.3236725Z [code: 1041, data: 1, env: 499 bytes]
2021-05-10T23:25:49.3239009Z [compiling $/(hash-cons-lib.cm):hash-cons-string.sml]
2021-05-10T23:25:49.3261759Z [code: 380, data: 20, env: 437 bytes]
2021-05-10T23:25:49.3266216Z [compiling $/(hash-cons-lib.cm):hash-cons-set-sig.sml]
2021-05-10T23:25:49.3294275Z [code: 97, data: 1, env: 1270 bytes]
2021-05-10T23:25:49.3299529Z [compiling $/(hash-cons-lib.cm):hash-cons-atom.sml]
2021-05-10T23:25:49.3321620Z [code: 372, data: 20, env: 431 bytes]
2021-05-10T23:25:49.3327177Z [compiling $/(hash-cons-lib.cm):hash-cons-map-sig.sml]
2021-05-10T23:25:49.3363434Z [code: 97, data: 1, env: 1850 bytes]
2021-05-10T23:25:49.3370437Z [compiling $/(hash-cons-lib.cm):hash-cons-map.sml]
2021-05-10T23:25:49.4452835Z [code: 29512, data: 136, env: 392 bytes]
2021-05-10T23:25:49.4459814Z [compiling $/(hash-cons-lib.cm):hash-cons-set.sml]
2021-05-10T23:25:49.4644185Z smlnj-lib/HashCons/hash-cons-set.sml:70.8-70.29 Warning: binding not exhaustive
2021-05-10T23:25:49.4644902Z           T (_,a,y,b) = ...
2021-05-10T23:25:49.6265918Z [code: 40870, data: 262, env: 541 bytes]
2021-05-10T23:25:49.6276923Z [stabilizing $/hash-cons-lib.cm]
2021-05-10T23:25:49.6392632Z [code: 84928, data: 608, inlinable: 0, env: 8839 bytes]
2021-05-10T23:25:49.6416720Z [scanning $/html-lib.cm]
2021-05-10T23:25:49.6506985Z [library $/ml-yacc-lib.cm is stable]
2021-05-10T23:25:49.6507722Z [attempting to load plugin $/mllex-tool.cm]
2021-05-10T23:25:49.6508375Z [scanning $/mllex-tool.cm]
2021-05-10T23:25:49.6508862Z [library $smlnj/cm/tools.cm is stable]
2021-05-10T23:25:49.6509521Z [parsing $/(mllex-tool.cm):mllex-tool.sml]
2021-05-10T23:25:49.6510570Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lpt/ml-ulex/tool/.cm/SKEL]
2021-05-10T23:25:49.6511519Z [library $smlnj/internal/cm-lib.cm is stable]
2021-05-10T23:25:49.6512229Z [compiling $/(mllex-tool.cm):mllex-tool.sml]
2021-05-10T23:25:49.6513262Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lpt/ml-ulex/tool/.cm/GUID]
2021-05-10T23:25:49.6545302Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lpt/ml-ulex/tool/.cm/amd64-unix]
2021-05-10T23:25:49.6546104Z [code: 588, data: 76, env: 40 bytes]
2021-05-10T23:25:49.6554061Z [plugin $/mllex-tool.cm loaded successfully]
2021-05-10T23:25:49.6554776Z [parsing $/(html-lib.cm):html-lex.sml]
2021-05-10T23:25:49.6819155Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/HTML/.cm/SKEL]
2021-05-10T23:25:49.6848844Z [attempting to load plugin $/mlyacc-tool.cm]
2021-05-10T23:25:49.6871320Z [scanning $/mlyacc-tool.cm]
2021-05-10T23:25:49.6872008Z [parsing $/(mlyacc-tool.cm):tool.sml]
2021-05-10T23:25:49.6877748Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-yacc/tool/.cm/SKEL]
2021-05-10T23:25:49.6883044Z [compiling $/(mlyacc-tool.cm):tool.sml]
2021-05-10T23:25:49.6884025Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-yacc/tool/.cm/GUID]
2021-05-10T23:25:49.6937471Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-yacc/tool/.cm/amd64-unix]
2021-05-10T23:25:49.6938236Z [code: 1001, data: 97, env: 35 bytes]
2021-05-10T23:25:49.6938924Z [plugin $/mlyacc-tool.cm loaded successfully]
2021-05-10T23:25:49.6939684Z [parsing $/(html-lib.cm):html-gram.sig]
2021-05-10T23:25:49.6985830Z [parsing $/(html-lib.cm):html-gram.sml]
2021-05-10T23:25:49.7790167Z [parsing $/(html-lib.cm):html-error-sig.sml]
2021-05-10T23:25:49.7800073Z [parsing $/(html-lib.cm):html-sig.sml]
2021-05-10T23:25:49.7873723Z [parsing $/(html-lib.cm):html.sml]
2021-05-10T23:25:49.7943986Z [parsing $/(html-lib.cm):html-attr-vals.sml]
2021-05-10T23:25:49.7948348Z [parsing $/(html-lib.cm):html-attrs-sig.sml]
2021-05-10T23:25:49.7968649Z [parsing $/(html-lib.cm):html-attrs-fn.sml]
2021-05-10T23:25:49.8152410Z [parsing $/(html-lib.cm):html-elements-fn.sml]
2021-05-10T23:25:49.8225358Z [parsing $/(html-lib.cm):html-parser-fn.sml]
2021-05-10T23:25:49.8239671Z [parsing $/(html-lib.cm):check-html-fn.sml]
2021-05-10T23:25:49.8286820Z [parsing $/(html-lib.cm):html-defaults.sml]
2021-05-10T23:25:49.8295484Z [parsing $/(html-lib.cm):make-html.sml]
2021-05-10T23:25:49.8318175Z [parsing $/(html-lib.cm):pr-html.sml]
2021-05-10T23:25:49.8418492Z [library $SMLNJ-ML-YACC-LIB/ml-yacc-lib.cm is stable]
2021-05-10T23:25:49.8467495Z [compiling $/(html-lib.cm):html-error-sig.sml]
2021-05-10T23:25:49.8468592Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/HTML/.cm/GUID]
2021-05-10T23:25:49.8482254Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/HTML/.cm/amd64-unix]
2021-05-10T23:25:49.8483035Z [code: 89, data: 1, env: 442 bytes]
2021-05-10T23:25:49.8486413Z [compiling $/(html-lib.cm):html-sig.sml]
2021-05-10T23:25:49.8662617Z [code: 81, data: 1, env: 7107 bytes]
2021-05-10T23:25:49.8692079Z [compiling $/(html-lib.cm):html.sml]
2021-05-10T23:25:49.8900467Z [code: 6969, data: 217, env: 3859 bytes]
2021-05-10T23:25:49.8906197Z [compiling $/(html-lib.cm):pr-html.sml]
2021-05-10T23:25:50.0211038Z [code: 35603, data: 883, env: 225 bytes]
2021-05-10T23:25:50.0216579Z [compiling $/(html-lib.cm):make-html.sml]
2021-05-10T23:25:50.0322348Z [code: 2413, data: 29, env: 717 bytes]
2021-05-10T23:25:50.0328241Z [compiling $/(html-lib.cm):html-defaults.sml]
2021-05-10T23:25:50.0346180Z [code: 245, data: 53, env: 513 bytes]
2021-05-10T23:25:50.0354100Z [compiling $/(html-lib.cm):html-attr-vals.sml]
2021-05-10T23:25:50.0366829Z [code: 108, data: 20, env: 322 bytes]
2021-05-10T23:25:50.0373081Z [compiling $/(html-lib.cm):html-attrs-sig.sml]
2021-05-10T23:25:50.0406011Z [code: 89, data: 1, env: 1450 bytes]
2021-05-10T23:25:50.0410403Z [compiling $/(html-lib.cm):html-attrs-fn.sml]
2021-05-10T23:25:50.2475861Z [code: 58757, data: 1589, env: 1295 bytes]
2021-05-10T23:25:50.2480071Z [compiling $/(html-lib.cm):html-gram.sig]
2021-05-10T23:25:50.2556311Z [code: 81, data: 1, env: 2767 bytes]
2021-05-10T23:25:50.2560635Z [compiling $/(html-lib.cm):html-gram.sml]
2021-05-10T23:25:50.9204622Z [code: 130461, data: 9717, env: 7092 bytes]
2021-05-10T23:25:50.9205970Z [compiling $/(html-lib.cm):html-elements-fn.sml]
2021-05-10T23:25:51.1349163Z [code: 77753, data: 505, env: 1462 bytes]
2021-05-10T23:25:51.1359426Z [compiling $/(html-lib.cm):html-lex.sml]
2021-05-10T23:25:51.2892668Z [code: 39321, data: 377, env: 4357 bytes]
2021-05-10T23:25:51.2895910Z [compiling $/(html-lib.cm):check-html-fn.sml]
2021-05-10T23:25:51.3264353Z [code: 11964, data: 268, env: 414 bytes]
2021-05-10T23:25:51.3319551Z [compiling $/(html-lib.cm):html-parser-fn.sml]
2021-05-10T23:25:51.3743412Z [code: 9325, data: 69, env: 9897 bytes]
2021-05-10T23:25:51.3764850Z [stabilizing $/html-lib.cm]
2021-05-10T23:25:51.4138014Z [code: 373259, data: 13731, inlinable: 0, env: 26032 bytes]
2021-05-10T23:25:51.4167479Z [scanning $/html4-lib.cm]
2021-05-10T23:25:51.4172083Z [attempting to load plugin $/ml-antlr-tool.cm]
2021-05-10T23:25:51.4195560Z [scanning $/ml-antlr-tool.cm]
2021-05-10T23:25:51.4198134Z [parsing $/(ml-antlr-tool.cm):tool.sml]
2021-05-10T23:25:51.4203236Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lpt/ml-antlr/tool/.cm/SKEL]
2021-05-10T23:25:51.4207783Z [compiling $/(ml-antlr-tool.cm):tool.sml]
2021-05-10T23:25:51.4210459Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lpt/ml-antlr/tool/.cm/GUID]
2021-05-10T23:25:51.4246092Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lpt/ml-antlr/tool/.cm/amd64-unix]
2021-05-10T23:25:51.4248503Z [code: 554, data: 50, env: 36 bytes]
2021-05-10T23:25:51.4250720Z [plugin $/ml-antlr-tool.cm loaded successfully]
2021-05-10T23:25:51.4251452Z [parsing $/(html4-lib.cm):html4.g.sml]
2021-05-10T23:25:51.7631372Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/HTML4/.cm/SKEL]
2021-05-10T23:25:51.7632576Z [attempting to load plugin $/ml-ulex-tool.cm]
2021-05-10T23:25:51.7655037Z [scanning $/ml-ulex-tool.cm]
2021-05-10T23:25:51.7655807Z [parsing $/(ml-ulex-tool.cm):tool.sml]
2021-05-10T23:25:51.7662429Z [compiling $/(ml-ulex-tool.cm):tool.sml]
2021-05-10T23:25:51.7699409Z [code: 552, data: 48, env: 35 bytes]
2021-05-10T23:25:51.7702102Z [plugin $/ml-ulex-tool.cm loaded successfully]
2021-05-10T23:25:51.7702957Z [parsing $/(html4-lib.cm):html4.l.sml]
2021-05-10T23:25:51.8047823Z [parsing $/(html4-lib.cm):html4-attr.g.sml]
2021-05-10T23:25:51.8138286Z [""ml-ulex""  ""html4-attr.l""]
2021-05-10T23:25:51.8150430Z sh: 1: ml-ulex: not found
2021-05-10T23:25:51.8159635Z [*** WARNING: """"ml-ulex""  ""html4-attr.l"""" failed ***]
2021-05-10T23:25:51.8160819Z [*** using potentially outdated targets ***]
2021-05-10T23:25:51.8161930Z [parsing $/(html4-lib.cm):html4-attr.l.sml]
2021-05-10T23:25:51.8256337Z [parsing $/(html4-lib.cm):html4.sig]
2021-05-10T23:25:51.8287584Z [parsing $/(html4-lib.cm):html4.sml]
2021-05-10T23:25:51.8331509Z [parsing $/(html4-lib.cm):html4-attrs.sml]
2021-05-10T23:25:51.8408302Z [parsing $/(html4-lib.cm):html4-entities.sml]
2021-05-10T23:25:51.8415590Z [parsing $/(html4-lib.cm):html4-parser.sml]
2021-05-10T23:25:51.8574761Z [parsing $/(html4-lib.cm):html4-print.sml]
2021-05-10T23:25:51.8687679Z [parsing $/(html4-lib.cm):html4-token-utils.sml]
2021-05-10T23:25:51.8825080Z [parsing $/(html4-lib.cm):html4-utils.sml]
2021-05-10T23:25:51.8939831Z [compiling $/(html4-lib.cm):html4-attr.g.sml]
2021-05-10T23:25:51.8942721Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/HTML4/.cm/GUID]
2021-05-10T23:25:51.9389250Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/HTML4/.cm/amd64-unix]
2021-05-10T23:25:51.9390054Z [code: 10120, data: 72, env: 2849 bytes]
2021-05-10T23:25:51.9398947Z [compiling $/(html4-lib.cm):html4-attr.l.sml]
2021-05-10T23:25:51.9476563Z smlnj-lib/HTML4/html4-attr.l.sml:394.15 Warning: calling polyEqual
2021-05-10T23:25:51.9969684Z [code: 15315, data: 99, env: 1278 bytes]
2021-05-10T23:25:51.9970906Z [compiling $/(html4-lib.cm):html4-utils.sml]
2021-05-10T23:25:52.0030650Z smlnj-lib/HTML4/html4-utils.sml:151.13-151.70 Warning: binding not exhaustive
2021-05-10T23:25:52.0032112Z           (_,result :: _) = ...
2021-05-10T23:25:52.0033003Z smlnj-lib/HTML4/html4-utils.sml:145.13-150.40 Warning: match nonexhaustive
2021-05-10T23:25:52.0033718Z           (EnterNT _,(spine,peers)) => ...
2021-05-10T23:25:52.0035055Z           (ExitNT ntAtom,(peers :: spine,children')) => ...
2021-05-10T23:25:52.0035672Z           (VisitT term,(spine,peers)) => ...
2021-05-10T23:25:52.0036105Z
2021-05-10T23:25:52.0560900Z [code: 17879, data: 319, env: 2066 bytes]
2021-05-10T23:25:52.0567536Z [compiling $/(html4-lib.cm):html4.g.sml]
2021-05-10T23:25:54.1186179Z [code: 383459, data: 3083, env: 9795 bytes]
2021-05-10T23:25:54.1200654Z [compiling $/(html4-lib.cm):html4-token-utils.sml]
2021-05-10T23:25:54.3353014Z [code: 69247, data: 2295, env: 9603 bytes]
2021-05-10T23:25:54.3365794Z [compiling $/(html4-lib.cm):html4.sig]
2021-05-10T23:25:54.3505370Z [code: 81, data: 1, env: 6763 bytes]
2021-05-10T23:25:54.3512548Z [compiling $/(html4-lib.cm):html4.sml]
2021-05-10T23:25:54.3602943Z [code: 100, data: 20, env: 3440 bytes]
2021-05-10T23:25:54.3614229Z [compiling $/(html4-lib.cm):html4.l.sml]
2021-05-10T23:25:54.4991286Z [code: 35975, data: 175, env: 1369 bytes]
2021-05-10T23:25:54.4998736Z [compiling $/(html4-lib.cm):html4-parser.sml]
2021-05-10T23:25:55.3712832Z [code: 151514, data: 1490, env: 7223 bytes]
2021-05-10T23:25:55.3726566Z [compiling $/(html4-lib.cm):html4-print.sml]
2021-05-10T23:25:55.4564257Z [code: 29484, data: 956, env: 265 bytes]
2021-05-10T23:25:55.4569577Z [compiling $/(html4-lib.cm):html4-entities.sml]
2021-05-10T23:25:55.4621414Z [code: 1759, data: 79, env: 227 bytes]
2021-05-10T23:25:55.4624999Z [compiling $/(html4-lib.cm):html4-attrs.sml]
2021-05-10T23:25:55.5824199Z [code: 26986, data: 1026, env: 2124 bytes]
2021-05-10T23:25:55.5834626Z [stabilizing $/html4-lib.cm]
2021-05-10T23:25:55.6404702Z [code: 741919, data: 9615, inlinable: 0, env: 40298 bytes]
2021-05-10T23:25:55.6433534Z [scanning $/inet-lib.cm]
2021-05-10T23:25:55.6436895Z [parsing $/(inet-lib.cm):sock-util-sig.sml]
2021-05-10T23:25:55.6451401Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/INet/.cm/SKEL]
2021-05-10T23:25:55.6452593Z [parsing $/(inet-lib.cm):sock-util.sml]
2021-05-10T23:25:55.6486184Z [parsing $/(inet-lib.cm):unix-sock-util.sml]
2021-05-10T23:25:55.6508992Z [compiling $/(inet-lib.cm):sock-util-sig.sml]
2021-05-10T23:25:55.6510069Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/INet/.cm/GUID]
2021-05-10T23:25:55.6548102Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/INet/.cm/amd64-unix]
2021-05-10T23:25:55.6548898Z [code: 89, data: 1, env: 1323 bytes]
2021-05-10T23:25:55.6554290Z [compiling $/(inet-lib.cm):sock-util.sml]
2021-05-10T23:25:55.6941216Z [code: 13064, data: 240, env: 373 bytes]
2021-05-10T23:25:55.6943804Z [compiling $/(inet-lib.cm):unix-sock-util.sml]
2021-05-10T23:25:55.7012895Z [code: 959, data: 23, env: 1463 bytes]
2021-05-10T23:25:55.7022749Z [stabilizing $/inet-lib.cm]
2021-05-10T23:25:55.7058172Z [code: 14112, data: 264, inlinable: 0, env: 3288 bytes]
2021-05-10T23:25:55.7084514Z [scanning $/json-lib.cm]
2021-05-10T23:25:55.7088820Z [parsing $/(json-lib.cm):json.lex.sml]
2021-05-10T23:25:55.7311317Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/JSON/.cm/SKEL]
2021-05-10T23:25:55.7317694Z [parsing $/(json-lib.cm):json.sml]
2021-05-10T23:25:55.7323443Z [parsing $/(json-lib.cm):json-parser.sml]
2021-05-10T23:25:55.7347535Z [parsing $/(json-lib.cm):json-printer.sml]
2021-05-10T23:25:55.7356553Z [parsing $/(json-lib.cm):json-source.sml]
2021-05-10T23:25:55.7372388Z [parsing $/(json-lib.cm):json-stream-parser.sml]
2021-05-10T23:25:55.7419323Z [parsing $/(json-lib.cm):json-stream-printer.sml]
2021-05-10T23:25:55.7462019Z [parsing $/(json-lib.cm):json-tokens.sml]
2021-05-10T23:25:55.7471358Z [parsing $/(json-lib.cm):json-util.sml]
2021-05-10T23:25:55.7557081Z [compiling $/(json-lib.cm):json-tokens.sml]
2021-05-10T23:25:55.7558144Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/JSON/.cm/GUID]
2021-05-10T23:25:55.7641578Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/JSON/.cm/amd64-unix]
2021-05-10T23:25:55.7642540Z [code: 2297, data: 97, env: 807 bytes]
2021-05-10T23:25:55.7652400Z [compiling $/(json-lib.cm):json.lex.sml]
2021-05-10T23:25:55.7958061Z smlnj-lib/JSON/json.lex.sml:22.6-22.64 Warning: binding not exhaustive
2021-05-10T23:25:55.7958739Z           SOME (w,_) = ...
2021-05-10T23:25:55.9142279Z [code: 37715, data: 187, env: 1301 bytes]
2021-05-10T23:25:55.9147791Z [compiling $/(json-lib.cm):json-source.sml]
2021-05-10T23:25:55.9272089Z [code: 3368, data: 48, env: 945 bytes]
2021-05-10T23:25:55.9278271Z [compiling $/(json-lib.cm):json-stream-parser.sml]
2021-05-10T23:25:55.9511261Z [code: 6592, data: 216, env: 865 bytes]
2021-05-10T23:25:55.9515756Z [compiling $/(json-lib.cm):json-stream-printer.sml]
2021-05-10T23:25:55.9855142Z [code: 12474, data: 970, env: 886 bytes]
2021-05-10T23:25:55.9859809Z [compiling $/(json-lib.cm):json.sml]
2021-05-10T23:25:55.9889755Z [code: 100, data: 20, env: 606 bytes]
2021-05-10T23:25:55.9890795Z [compiling $/(json-lib.cm):json-util.sml]
2021-05-10T23:25:55.9948230Z smlnj-lib/JSON/json-util.sml:267.9-292.49 Warning: match nonexhaustive
2021-05-10T23:25:55.9948810Z           (v,nil) => ...
2021-05-10T23:25:55.9949384Z           (v as OBJECT fields,SEL lab :: rest) => ...
2021-05-10T23:25:55.9949854Z           (v,SEL _ :: _) => ...
2021-05-10T23:25:55.9950275Z           (v as ARRAY vs,SUB i :: rest) => ...
2021-05-10T23:25:55.9950669Z           (v,SUB _ :: _) => ...
2021-05-10T23:25:55.9950975Z
2021-05-10T23:25:56.0342402Z [code: 16454, data: 1582, env: 1562 bytes]
2021-05-10T23:25:56.0350167Z [compiling $/(json-lib.cm):json-parser.sml]
2021-05-10T23:25:56.0522084Z [code: 5054, data: 254, env: 402 bytes]
2021-05-10T23:25:56.0529450Z [compiling $/(json-lib.cm):json-printer.sml]
2021-05-10T23:25:56.0616302Z [code: 2758, data: 22, env: 235 bytes]
2021-05-10T23:25:56.0624088Z [stabilizing $/json-lib.cm]
2021-05-10T23:25:56.0692734Z [code: 86812, data: 3396, inlinable: 0, env: 7063 bytes]
2021-05-10T23:25:56.0719480Z [scanning $/pp-extras-lib.cm]
2021-05-10T23:25:56.0724429Z [library $/pp-lib.cm is stable]
2021-05-10T23:25:56.0729888Z [parsing $/(pp-extras-lib.cm):devices/html3-dev.sml]
2021-05-10T23:25:56.0776660Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/PP/devices/.cm/SKEL]
2021-05-10T23:25:56.0799544Z [library $SMLNJ-LIB/PP/pp-lib.cm is stable]
2021-05-10T23:25:56.0832275Z [compiling $/(pp-extras-lib.cm):devices/html3-dev.sml]
2021-05-10T23:25:56.0833437Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/PP/devices/.cm/GUID]
2021-05-10T23:25:56.1167783Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/PP/devices/.cm/amd64-unix]
2021-05-10T23:25:56.1168714Z [code: 9323, data: 115, env: 1807 bytes]
2021-05-10T23:25:56.1174010Z [stabilizing $/pp-extras-lib.cm]
2021-05-10T23:25:56.1209820Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/PP/.cm/amd64-unix]
2021-05-10T23:25:56.1210768Z [code: 9323, data: 115, inlinable: 0, env: 3090 bytes]
2021-05-10T23:25:56.1236037Z [scanning $/regexp-lib.cm]
2021-05-10T23:25:56.1240052Z [parsing $/(regexp-lib.cm):Glue/match-tree.sml]
2021-05-10T23:25:56.1269001Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/RegExp/Glue/.cm/SKEL]
2021-05-10T23:25:56.1270281Z [parsing $/(regexp-lib.cm):BackEnd/fsm.sml]
2021-05-10T23:25:56.1390041Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/RegExp/BackEnd/.cm/SKEL]
2021-05-10T23:25:56.1393366Z [parsing $/(regexp-lib.cm):FrontEnd/syntax-sig.sml]
2021-05-10T23:25:56.1485762Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/RegExp/FrontEnd/.cm/SKEL]
2021-05-10T23:25:56.1486853Z [parsing $/(regexp-lib.cm):FrontEnd/syntax.sml]
2021-05-10T23:25:56.1487651Z [parsing $/(regexp-lib.cm):FrontEnd/parser-sig.sml]
2021-05-10T23:25:56.1488452Z [parsing $/(regexp-lib.cm):BackEnd/engine-sig.sml]
2021-05-10T23:25:56.1489445Z [parsing $/(regexp-lib.cm):FrontEnd/awk-syntax.sml]
2021-05-10T23:25:56.1529676Z [parsing $/(regexp-lib.cm):BackEnd/bt-engine.sml]
2021-05-10T23:25:56.1603037Z [parsing $/(regexp-lib.cm):BackEnd/dfa-engine.sml]
2021-05-10T23:25:56.1623359Z [parsing $/(regexp-lib.cm):BackEnd/thompson-engine.sml]
2021-05-10T23:25:56.1710230Z [parsing $/(regexp-lib.cm):Glue/regexp-sig.sml]
2021-05-10T23:25:56.1726237Z [parsing $/(regexp-lib.cm):Glue/regexp-fn.sml]
2021-05-10T23:25:56.1752686Z [compiling $/(regexp-lib.cm):Glue/match-tree.sml]
2021-05-10T23:25:56.1754678Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/RegExp/Glue/.cm/GUID]
2021-05-10T23:25:56.2038795Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/RegExp/Glue/.cm/amd64-unix]
2021-05-10T23:25:56.2041251Z [code: 6880, data: 72, env: 645 bytes]
2021-05-10T23:25:56.2045387Z [compiling $/(regexp-lib.cm):FrontEnd/syntax-sig.sml]
2021-05-10T23:25:56.2048155Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/RegExp/FrontEnd/.cm/GUID]
2021-05-10T23:25:56.2096818Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/RegExp/FrontEnd/.cm/amd64-unix]
2021-05-10T23:25:56.2097661Z [code: 97, data: 1, env: 2161 bytes]
2021-05-10T23:25:56.2106116Z [compiling $/(regexp-lib.cm):FrontEnd/syntax.sml]
2021-05-10T23:25:56.2258364Z [code: 4729, data: 209, env: 716 bytes]
2021-05-10T23:25:56.2265699Z [compiling $/(regexp-lib.cm):BackEnd/engine-sig.sml]
2021-05-10T23:25:56.2266826Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/RegExp/BackEnd/.cm/GUID]
2021-05-10T23:25:56.2289432Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/RegExp/BackEnd/.cm/amd64-unix]
2021-05-10T23:25:56.2290244Z [code: 97, data: 1, env: 494 bytes]
2021-05-10T23:25:56.2292811Z [compiling $/(regexp-lib.cm):BackEnd/bt-engine.sml]
2021-05-10T23:25:56.2346037Z smlnj-lib/RegExp/BackEnd/bt-engine.sml:66.15-66.47 Warning: binding not exhaustive
2021-05-10T23:25:56.2347190Z           (b',matches',last',s') :: nil = ...
2021-05-10T23:25:56.2348149Z smlnj-lib/RegExp/BackEnd/bt-engine.sml:65.15-65.43 Warning: binding not exhaustive
2021-05-10T23:25:56.2348853Z           (b,matches,last,s) :: nil = ...
2021-05-10T23:25:56.3083949Z [code: 19134, data: 302, env: 231 bytes]
2021-05-10T23:25:56.3090108Z [compiling $/(regexp-lib.cm):FrontEnd/parser-sig.sml]
2021-05-10T23:25:56.3110434Z [code: 97, data: 1, env: 231 bytes]
2021-05-10T23:25:56.3114486Z [compiling $/(regexp-lib.cm):Glue/regexp-sig.sml]
2021-05-10T23:25:56.3136909Z [code: 89, data: 1, env: 570 bytes]
2021-05-10T23:25:56.3143279Z [compiling $/(regexp-lib.cm):Glue/regexp-fn.sml]
2021-05-10T23:25:56.3290903Z [code: 4138, data: 138, env: 888 bytes]
2021-05-10T23:25:56.3299305Z [compiling $/(regexp-lib.cm):BackEnd/thompson-engine.sml]
2021-05-10T23:25:56.3832509Z [code: 15017, data: 681, env: 474 bytes]
2021-05-10T23:25:56.3842424Z [compiling $/(regexp-lib.cm):BackEnd/fsm.sml]
2021-05-10T23:25:56.3988527Z smlnj-lib/RegExp/BackEnd/fsm.sml:394.21-395.26 Warning: match nonexhaustive
2021-05-10T23:25:56.3989290Z           Move (s1,SOME c',s2) => ...
2021-05-10T23:25:56.3989647Z
2021-05-10T23:25:56.3990311Z smlnj-lib/RegExp/BackEnd/fsm.sml:394.7-398.43 Warning: match nonexhaustive
2021-05-10T23:25:56.3990847Z           NONE => ...
2021-05-10T23:25:56.3991340Z           SOME (Move (s1,SOME c',s2)) => ...
2021-05-10T23:25:56.3991688Z
2021-05-10T23:25:56.5390013Z [code: 47867, data: 571, env: 2780 bytes]
2021-05-10T23:25:56.5398140Z [compiling $/(regexp-lib.cm):BackEnd/dfa-engine.sml]
2021-05-10T23:25:56.5628494Z [code: 6221, data: 133, env: 224 bytes]
2021-05-10T23:25:56.5637626Z [compiling $/(regexp-lib.cm):FrontEnd/awk-syntax.sml]
2021-05-10T23:25:56.5695888Z smlnj-lib/RegExp/FrontEnd/awk-syntax.sml:85.8-85.58 Warning: binding not exhaustive
2021-05-10T23:25:56.5696666Z           SOME (n,_) = ...
2021-05-10T23:25:56.6129018Z [code: 15619, data: 723, env: 52 bytes]
2021-05-10T23:25:56.6138171Z [stabilizing $/regexp-lib.cm]
2021-05-10T23:25:56.6239064Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/RegExp/.cm/amd64-unix]
2021-05-10T23:25:56.6239934Z [code: 119985, data: 2833, inlinable: 0, env: 9341 bytes]
2021-05-10T23:25:56.6268336Z [scanning $/reactive-lib.cm]
2021-05-10T23:25:56.6271765Z [parsing $/(reactive-lib.cm):instruction.sml]
2021-05-10T23:25:56.6283477Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/Reactive/.cm/SKEL]
2021-05-10T23:25:56.6286192Z [parsing $/(reactive-lib.cm):machine.sml]
2021-05-10T23:25:56.6401378Z [parsing $/(reactive-lib.cm):reactive-sig.sml]
2021-05-10T23:25:56.6412838Z [parsing $/(reactive-lib.cm):reactive.sml]
2021-05-10T23:25:56.6456698Z [compiling $/(reactive-lib.cm):instruction.sml]
2021-05-10T23:25:56.6457823Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/Reactive/.cm/GUID]
2021-05-10T23:25:56.6494902Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/Reactive/.cm/amd64-unix]
2021-05-10T23:25:56.6495694Z [code: 108, data: 20, env: 1452 bytes]
2021-05-10T23:25:56.6499501Z [compiling $/(reactive-lib.cm):machine.sml]
2021-05-10T23:25:56.7179417Z [code: 19393, data: 25, env: 2307 bytes]
2021-05-10T23:25:56.7180663Z [compiling $/(reactive-lib.cm):reactive-sig.sml]
2021-05-10T23:25:56.7212682Z [code: 89, data: 1, env: 1224 bytes]
2021-05-10T23:25:56.7220700Z [compiling $/(reactive-lib.cm):reactive.sml]
2021-05-10T23:25:56.7546837Z [code: 10405, data: 85, env: 451 bytes]
2021-05-10T23:25:56.7554015Z [stabilizing $/reactive-lib.cm]
2021-05-10T23:25:56.7591621Z [code: 29995, data: 131, inlinable: 0, env: 3614 bytes]
2021-05-10T23:25:56.7618254Z [scanning $/sexp-lib.cm]
2021-05-10T23:25:56.7623280Z [parsing $/(sexp-lib.cm):sexp.lex.sml]
2021-05-10T23:25:56.8093421Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/SExp/.cm/SKEL]
2021-05-10T23:25:56.8126111Z [parsing $/(sexp-lib.cm):sexp.sml]
2021-05-10T23:25:56.8138915Z [parsing $/(sexp-lib.cm):sexp-parser.sml]
2021-05-10T23:25:56.8162540Z [parsing $/(sexp-lib.cm):sexp-pp.sml]
2021-05-10T23:25:56.8191099Z [parsing $/(sexp-lib.cm):sexp-printer.sml]
2021-05-10T23:25:56.8201104Z [parsing $/(sexp-lib.cm):sexp-tokens.sml]
2021-05-10T23:25:56.8223237Z [compiling $/(sexp-lib.cm):sexp.sml]
2021-05-10T23:25:56.8224282Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/SExp/.cm/GUID]
2021-05-10T23:25:56.8279772Z smlnj-lib/SExp/sexp.sml:33.27-53.55 Warning: match nonexhaustive
2021-05-10T23:25:56.8280340Z           (SYMBOL a,SYMBOL b) => ...
2021-05-10T23:25:56.8280722Z           (SYMBOL _,_) => ...
2021-05-10T23:25:56.8281056Z           (_,SYMBOL _) => ...
2021-05-10T23:25:56.8281410Z           (BOOL a,BOOL b) => ...
2021-05-10T23:25:56.8281757Z           (INT a,INT b) => ...
2021-05-10T23:25:56.8282111Z           (INT _,_) => ...
2021-05-10T23:25:56.8282416Z           (_,INT _) => ...
2021-05-10T23:25:56.8282770Z           (FLOAT a,FLOAT b) => ...
2021-05-10T23:25:56.8283115Z           (FLOAT _,_) => ...
2021-05-10T23:25:56.8283450Z           (_,FLOAT _) => ...
2021-05-10T23:25:56.8283808Z           (STRING a,STRING b) => ...
2021-05-10T23:25:56.8284184Z           (STRING _,_) => ...
2021-05-10T23:25:56.8284524Z           (_,STRING _) => ...
2021-05-10T23:25:56.8284875Z           (QUOTE a,QUOTE b) => ...
2021-05-10T23:25:56.8285396Z           (QUOTE _,_) => ...
2021-05-10T23:25:56.8285718Z           (_,QUOTE _) => ...
2021-05-10T23:25:56.8286069Z           (LIST a,LIST b) => ...
2021-05-10T23:25:56.8286378Z
2021-05-10T23:25:56.8401645Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/SExp/.cm/amd64-unix]
2021-05-10T23:25:56.8402423Z [code: 4472, data: 56, env: 691 bytes]
2021-05-10T23:25:56.8403098Z [compiling $/(sexp-lib.cm):sexp-tokens.sml]
2021-05-10T23:25:56.8493504Z [code: 2299, data: 83, env: 999 bytes]
2021-05-10T23:25:56.8503598Z [compiling $/(sexp-lib.cm):sexp.lex.sml]
2021-05-10T23:25:56.8939632Z smlnj-lib/SExp/sexp.lex.sml:162.9-162.78 Warning: binding not exhaustive
2021-05-10T23:25:56.8940244Z           SOME value = ...
2021-05-10T23:25:56.8962970Z smlnj-lib/SExp/sexp.lex.sml:22.6-22.64 Warning: binding not exhaustive
2021-05-10T23:25:56.8963540Z           SOME (w,_) = ...
2021-05-10T23:25:57.0681833Z [code: 49894, data: 254, env: 1302 bytes]
2021-05-10T23:25:57.0690758Z [compiling $/(sexp-lib.cm):sexp-parser.sml]
2021-05-10T23:25:57.0907284Z [code: 6219, data: 227, env: 190 bytes]
2021-05-10T23:25:57.0911718Z [compiling $/(sexp-lib.cm):sexp-printer.sml]
2021-05-10T23:25:57.1017200Z [code: 3038, data: 62, env: 173 bytes]
2021-05-10T23:25:57.1022010Z [compiling $/(sexp-lib.cm):sexp-pp.sml]
2021-05-10T23:25:57.1156903Z [code: 4601, data: 65, env: 169 bytes]
2021-05-10T23:25:57.1164695Z [stabilizing $/sexp-lib.cm]
2021-05-10T23:25:57.1193884Z [code: 70523, data: 747, inlinable: 0, env: 3157 bytes]
2021-05-10T23:25:57.1222432Z [scanning $/uuid-lib.cm]
2021-05-10T23:25:57.1224169Z [parsing $/(uuid-lib.cm):gen-uuid.sml]
2021-05-10T23:25:57.1237536Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/UUID/.cm/SKEL]
2021-05-10T23:25:57.1240340Z [parsing $/(uuid-lib.cm):uuid.sml]
2021-05-10T23:25:57.1277877Z [compiling $/(uuid-lib.cm):uuid.sml]
2021-05-10T23:25:57.1278884Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/UUID/.cm/GUID]
2021-05-10T23:25:57.1309049Z smlnj-lib/UUID/uuid.sml:58.46 Warning: calling polyEqual
2021-05-10T23:25:57.1498281Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/UUID/.cm/amd64-unix]
2021-05-10T23:25:57.1500512Z [code: 6998, data: 142, env: 549 bytes]
2021-05-10T23:25:57.1501265Z [compiling $/(uuid-lib.cm):gen-uuid.sml]
2021-05-10T23:25:57.1614248Z [code: 3844, data: 20, env: 130 bytes]
2021-05-10T23:25:57.1619547Z [stabilizing $/uuid-lib.cm]
2021-05-10T23:25:57.1637758Z [code: 10842, data: 162, inlinable: 0, env: 1734 bytes]
2021-05-10T23:25:57.1665265Z [scanning $/xml-lib.cm]
2021-05-10T23:25:57.1674415Z [parsing $/(xml-lib.cm):generic-xml-tree.sml]
2021-05-10T23:25:57.1682708Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/XML/.cm/SKEL]
2021-05-10T23:25:57.1685487Z [parsing $/(xml-lib.cm):xml-parser-fn.sml]
2021-05-10T23:25:57.1762269Z [parsing $/(xml-lib.cm):xml-schema-sig.sml]
2021-05-10T23:25:57.1770332Z [parsing $/(xml-lib.cm):xml-tokens.sml]
2021-05-10T23:25:57.1781303Z [parsing $/(xml-lib.cm):xml-tree-fn.sml]
2021-05-10T23:25:57.1792759Z [parsing $/(xml-lib.cm):xml-tree-sig.sml]
2021-05-10T23:25:57.1799773Z [parsing $/(xml-lib.cm):xml-lexer.lex.sml]
2021-05-10T23:25:57.2486134Z [compiling $/(xml-lib.cm):xml-schema-sig.sml]
2021-05-10T23:25:57.2487397Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/XML/.cm/GUID]
2021-05-10T23:25:57.2507141Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/smlnj-lib/XML/.cm/amd64-unix]
2021-05-10T23:25:57.2509693Z [code: 89, data: 1, env: 332 bytes]
2021-05-10T23:25:57.2510550Z [compiling $/(xml-lib.cm):xml-tree-sig.sml]
2021-05-10T23:25:57.2568833Z [code: 81, data: 1, env: 808 bytes]
2021-05-10T23:25:57.2569703Z [compiling $/(xml-lib.cm):xml-tokens.sml]
2021-05-10T23:25:57.2609405Z [code: 758, data: 110, env: 838 bytes]
2021-05-10T23:25:57.2617671Z [compiling $/(xml-lib.cm):xml-lexer.lex.sml]
2021-05-10T23:25:57.7246286Z [code: 94387, data: 219, env: 1465 bytes]
2021-05-10T23:25:57.7254253Z [compiling $/(xml-lib.cm):xml-parser-fn.sml]
2021-05-10T23:25:57.7860834Z [code: 18127, data: 583, env: 985 bytes]
2021-05-10T23:25:57.7869465Z [compiling $/(xml-lib.cm):xml-tree-fn.sml]
2021-05-10T23:25:57.7902940Z [code: 297, data: 1, env: 716 bytes]
2021-05-10T23:25:57.7908148Z [compiling $/(xml-lib.cm):generic-xml-tree.sml]
2021-05-10T23:25:57.8001467Z [code: 1549, data: 21, env: 1383 bytes]
2021-05-10T23:25:57.8009847Z [stabilizing $/xml-lib.cm]
2021-05-10T23:25:57.8068940Z [code: 115288, data: 936, inlinable: 0, env: 5724 bytes]
2021-05-10T23:25:57.8097684Z [scanning $/ml-ulex-tool.cm]
2021-05-10T23:25:57.8104988Z [loading $/(ml-ulex-tool.cm):tool.sml]
2021-05-10T23:25:57.8105763Z [stabilizing $/ml-ulex-tool.cm]
2021-05-10T23:25:57.8109058Z [code: 552, data: 48, inlinable: 0, env: 392 bytes]
2021-05-10T23:25:57.8137647Z [scanning $/mllex-tool.cm]
2021-05-10T23:25:57.8144156Z [loading $/(mllex-tool.cm):mllex-tool.sml]
2021-05-10T23:25:57.8144911Z [stabilizing $/mllex-tool.cm]
2021-05-10T23:25:57.8148144Z [code: 588, data: 76, inlinable: 0, env: 405 bytes]
2021-05-10T23:25:57.8176852Z [scanning $/lex-ext.cm]
2021-05-10T23:25:57.8177517Z [parsing $/(lex-ext.cm):ext.sml]
2021-05-10T23:25:57.8184169Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lex/tool/.cm/SKEL]
2021-05-10T23:25:57.8185185Z [compiling $/(lex-ext.cm):ext.sml]
2021-05-10T23:25:57.8186156Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lex/tool/.cm/GUID]
2021-05-10T23:25:57.8225897Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-lex/tool/.cm/amd64-unix]
2021-05-10T23:25:57.8226672Z [code: 694, data: 38, env: 36 bytes]
2021-05-10T23:25:57.8228816Z [stabilizing $/lex-ext.cm]
2021-05-10T23:25:57.8229336Z [code: 694, data: 38, inlinable: 0, env: 372 bytes]
2021-05-10T23:25:57.8259066Z [scanning $/mlyacc-tool.cm]
2021-05-10T23:25:57.8265769Z [loading $/(mlyacc-tool.cm):tool.sml]
2021-05-10T23:25:57.8266506Z [stabilizing $/mlyacc-tool.cm]
2021-05-10T23:25:57.8269997Z [code: 1001, data: 97, inlinable: 0, env: 383 bytes]
2021-05-10T23:25:57.8299530Z [scanning $/grm-ext.cm]
2021-05-10T23:25:57.8300160Z [parsing $/(grm-ext.cm):ext.sml]
2021-05-10T23:25:57.8305179Z [compiling $/(grm-ext.cm):ext.sml]
2021-05-10T23:25:57.8343720Z [code: 695, data: 39, env: 37 bytes]
2021-05-10T23:25:57.8344531Z [stabilizing $/grm-ext.cm]
2021-05-10T23:25:57.8347383Z [code: 695, data: 39, inlinable: 0, env: 374 bytes]
2021-05-10T23:25:57.8375263Z [scanning $/ml-antlr-tool.cm]
2021-05-10T23:25:57.8380067Z [loading $/(ml-antlr-tool.cm):tool.sml]
2021-05-10T23:25:57.8385888Z [stabilizing $/ml-antlr-tool.cm]
2021-05-10T23:25:57.8389292Z [code: 554, data: 50, inlinable: 0, env: 396 bytes]
2021-05-10T23:25:57.8416902Z [scanning $/asdlgen-tool.cm]
2021-05-10T23:25:57.8420175Z [parsing $/(asdlgen-tool.cm):asdlgen-tool.sml]
2021-05-10T23:25:57.8427688Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl/tool/.cm/SKEL]
2021-05-10T23:25:57.8432954Z [compiling $/(asdlgen-tool.cm):asdlgen-tool.sml]
2021-05-10T23:25:57.8433978Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl/tool/.cm/GUID]
2021-05-10T23:25:57.8496824Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl/tool/.cm/amd64-unix]
2021-05-10T23:25:57.8499088Z [code: 1212, data: 124, env: 38 bytes]
2021-05-10T23:25:57.8499782Z [stabilizing $/asdlgen-tool.cm]
2021-05-10T23:25:57.8504628Z [code: 1212, data: 124, inlinable: 0, env: 460 bytes]
2021-05-10T23:25:57.8533720Z [scanning $/asdl-ext.cm]
2021-05-10T23:25:57.8534441Z [parsing $/(asdl-ext.cm):ext.sml]
2021-05-10T23:25:57.8539423Z [compiling $/(asdl-ext.cm):ext.sml]
2021-05-10T23:25:57.8566358Z [code: 347, data: 35, env: 34 bytes]
2021-05-10T23:25:57.8567111Z [stabilizing $/asdl-ext.cm]
2021-05-10T23:25:57.8569928Z [code: 347, data: 35, inlinable: 0, env: 371 bytes]
2021-05-10T23:25:57.8597611Z [scanning $/asdl-lib.cm]
2021-05-10T23:25:57.8601077Z [parsing $/(asdl-lib.cm):asdl.sig]
2021-05-10T23:25:57.8604520Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl/src/lib/sml/.cm/SKEL]
2021-05-10T23:25:57.8607221Z [parsing $/(asdl-lib.cm):asdl.sml]
2021-05-10T23:25:57.8615826Z [parsing $/(asdl-lib.cm):asdl-pickle.sig]
2021-05-10T23:25:57.8624935Z [parsing $/(asdl-lib.cm):asdl-memory-pickle.sml]
2021-05-10T23:25:57.8691614Z [parsing $/(asdl-lib.cm):asdl-file-pickle.sml]
2021-05-10T23:25:57.8753291Z [parsing $/(asdl-lib.cm):asdl-sexp-pickle.sml]
2021-05-10T23:25:57.8796133Z [compiling $/(asdl-lib.cm):asdl.sig]
2021-05-10T23:25:57.8797153Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl/src/lib/sml/.cm/GUID]
2021-05-10T23:25:57.8826279Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl/src/lib/sml/.cm/amd64-unix]
2021-05-10T23:25:57.8827042Z [code: 81, data: 1, env: 481 bytes]
2021-05-10T23:25:57.8827731Z [compiling $/(asdl-lib.cm):asdl.sml]
2021-05-10T23:25:57.8854089Z [code: 159, data: 31, env: 408 bytes]
2021-05-10T23:25:57.8858724Z [compiling $/(asdl-lib.cm):asdl-pickle.sig]
2021-05-10T23:25:57.8887998Z [code: 89, data: 1, env: 1155 bytes]
2021-05-10T23:25:57.8891311Z [compiling $/(asdl-lib.cm):asdl-memory-pickle.sml]
2021-05-10T23:25:57.9328409Z [code: 13833, data: 473, env: 1716 bytes]
2021-05-10T23:25:57.9335766Z [compiling $/(asdl-lib.cm):asdl-sexp-pickle.sml]
2021-05-10T23:25:57.9745087Z [code: 15396, data: 636, env: 1546 bytes]
2021-05-10T23:25:57.9752831Z [compiling $/(asdl-lib.cm):asdl-file-pickle.sml]
2021-05-10T23:25:58.0155147Z [code: 13934, data: 398, env: 1477 bytes]
2021-05-10T23:25:58.0163492Z [stabilizing $/asdl-lib.cm]
2021-05-10T23:25:58.0228204Z [code: 43492, data: 1540, inlinable: 0, env: 5696 bytes]
2021-05-10T23:25:58.0259175Z [scanning $smlnj-tdp/plugins.cm]
2021-05-10T23:25:58.0259973Z [parsing $smlnj-tdp/(plugins.cm):back-trace.sml]
2021-05-10T23:25:58.0322460Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/trace-debug-profile/.cm/SKEL]
2021-05-10T23:25:58.0323538Z [parsing $smlnj-tdp/(plugins.cm):coverage.sml]
2021-05-10T23:25:58.0353524Z [library $smlnj/compiler/current.cm is stable]
2021-05-10T23:25:58.0358780Z [library $smlnj/compiler/amd64.cm is stable]
2021-05-10T23:25:58.0383664Z [library $smlnj/viscomp/core.cm is stable]
2021-05-10T23:25:58.0390171Z [library $smlnj/viscomp/basics.cm is stable]
2021-05-10T23:25:58.0410431Z [library $smlnj/viscomp/elabdata.cm is stable]
2021-05-10T23:25:58.0431845Z [library $smlnj/viscomp/elaborate.cm is stable]
2021-05-10T23:25:58.0438045Z [library $compiler/(core.cm):Library/const-arith/sources.cm is stable]
2021-05-10T23:25:58.0461770Z [library $smlnj/MLRISC/Lib.cm is stable]
2021-05-10T23:25:58.0465001Z [library $SMLNJ-MLRISC/Lib.cm is stable]
2021-05-10T23:25:58.0494956Z [library $smlnj/MLRISC/Control.cm is stable]
2021-05-10T23:25:58.0497536Z [library $SMLNJ-MLRISC/Control.cm is stable]
2021-05-10T23:25:58.0508135Z [library $controls-lib.cm(=$SMLNJ-LIB/Controls)/controls-lib.cm is stable]
2021-05-10T23:25:58.0542982Z [library $smlnj/smlnj-lib/controls-lib.cm is stable]
2021-05-10T23:25:58.0653667Z [compiling $smlnj-tdp/(plugins.cm):back-trace.sml]
2021-05-10T23:25:58.0654895Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/trace-debug-profile/.cm/GUID]
2021-05-10T23:25:58.1122335Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/trace-debug-profile/.cm/amd64-unix]
2021-05-10T23:25:58.1123341Z [code: 12429, data: 301, env: 170 bytes]
2021-05-10T23:25:58.1124202Z [compiling $smlnj-tdp/(plugins.cm):coverage.sml]
2021-05-10T23:25:58.1426788Z [code: 10344, data: 312, env: 338 bytes]
2021-05-10T23:25:58.1434997Z [library $smlnj/viscomp/parser.cm is stable]
2021-05-10T23:25:58.1444690Z [library $smlnj/viscomp/execute.cm is stable]
2021-05-10T23:25:58.1452796Z [library $smlnj/internal/smlnj-version.cm is stable]
2021-05-10T23:25:58.1462371Z [stabilizing $smlnj-tdp/plugins.cm]
2021-05-10T23:25:58.1480786Z [code: 22773, data: 613, inlinable: 0, env: 1630 bytes]
2021-05-10T23:25:58.1511759Z [scanning $smlnj-tdp/back-trace.cm]
2021-05-10T23:25:58.1512747Z [parsing $smlnj-tdp/(back-trace.cm):install-back-trace.sml]
2021-05-10T23:25:58.1519998Z [compiling $smlnj-tdp/(back-trace.cm):install-back-trace.sml]
2021-05-10T23:25:58.1546016Z [code: 252, data: 20, env: 43 bytes]
2021-05-10T23:25:58.1546997Z [stabilizing $smlnj-tdp/back-trace.cm]
2021-05-10T23:25:58.1583241Z [code: 252, data: 20, inlinable: 0, env: 462 bytes]
2021-05-10T23:25:58.1611914Z [scanning $smlnj-tdp/coverage.cm]
2021-05-10T23:25:58.1612846Z [parsing $smlnj-tdp/(coverage.cm):install-coverage.sml]
2021-05-10T23:25:58.1622018Z [compiling $smlnj-tdp/(coverage.cm):install-coverage.sml]
2021-05-10T23:25:58.1646635Z [code: 252, data: 20, env: 42 bytes]
2021-05-10T23:25:58.1647440Z [stabilizing $smlnj-tdp/coverage.cm]
2021-05-10T23:25:58.1650306Z [code: 252, data: 20, inlinable: 0, env: 452 bytes]
2021-05-10T23:25:58.1678493Z [scanning $cml/core-cml.cm]
2021-05-10T23:25:58.1681642Z [parsing $cml/(core-cml.cm):core-cml/version.sml]
2021-05-10T23:25:58.1687467Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/core-cml/.cm/SKEL]
2021-05-10T23:25:58.1689951Z [parsing $cml/(core-cml.cm):core-cml/rep-types.sml]
2021-05-10T23:25:58.1711290Z [parsing $cml/(core-cml.cm):core-cml/queue.sml]
2021-05-10T23:25:58.1735149Z [parsing $cml/(core-cml.cm):core-cml/scheduler.sml]
2021-05-10T23:25:58.1814323Z [parsing $cml/(core-cml.cm):core-cml/event-sig.sml]
2021-05-10T23:25:58.1820108Z [parsing $cml/(core-cml.cm):core-cml/event.sml]
2021-05-10T23:25:58.1963163Z [parsing $cml/(core-cml.cm):core-cml/thread-sig.sml]
2021-05-10T23:25:58.1971091Z [parsing $cml/(core-cml.cm):core-cml/thread.sml]
2021-05-10T23:25:58.2005669Z [parsing $cml/(core-cml.cm):core-cml/channel-sig.sml]
2021-05-10T23:25:58.2013154Z [parsing $cml/(core-cml.cm):core-cml/channel.sml]
2021-05-10T23:25:58.2064656Z [parsing $cml/(core-cml.cm):core-cml/timeout-sig.sml]
2021-05-10T23:25:58.2068487Z [parsing $cml/(core-cml.cm):core-cml/timeout.sml]
2021-05-10T23:25:58.2122892Z [parsing $cml/(core-cml.cm):core-cml/io-manager.sml]
2021-05-10T23:25:58.2150931Z [parsing $cml/(core-cml.cm):core-cml/cml-sig.sml]
2021-05-10T23:25:58.2154495Z [parsing $cml/(core-cml.cm):core-cml/cml.sml]
2021-05-10T23:25:58.2159099Z [parsing $cml/(core-cml.cm):core-cml/sync-var-sig.sml]
2021-05-10T23:25:58.2168582Z [parsing $cml/(core-cml.cm):core-cml/sync-var.sml]
2021-05-10T23:25:58.2240267Z [parsing $cml/(core-cml.cm):core-cml/mailbox-sig.sml]
2021-05-10T23:25:58.2244821Z [parsing $cml/(core-cml.cm):core-cml/mailbox.sml]
2021-05-10T23:25:58.2282930Z [parsing $cml/(core-cml.cm):core-cml/barrier-sig.sml]
2021-05-10T23:25:58.2290622Z [parsing $cml/(core-cml.cm):core-cml/barrier.sml]
2021-05-10T23:25:58.2314029Z [parsing $cml/(core-cml.cm):core-cml/running.sml]
2021-05-10T23:25:58.2317532Z [parsing $cml/(core-cml.cm):core-cml/cml-cleanup-sig.sml]
2021-05-10T23:25:58.2330299Z [parsing $cml/(core-cml.cm):core-cml/cleanup.sml]
2021-05-10T23:25:58.2378561Z [parsing $cml/(core-cml.cm):core-cml/debug.sml]
2021-05-10T23:25:58.2435251Z [compiling $cml/(core-cml.cm):core-cml/rep-types.sml]
2021-05-10T23:25:58.2436340Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/core-cml/.cm/GUID]
2021-05-10T23:25:58.2500507Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/core-cml/.cm/amd64-unix]
2021-05-10T23:25:58.2501298Z [code: 754, data: 26, env: 1759 bytes]
2021-05-10T23:25:58.2506062Z [compiling $cml/(core-cml.cm):core-cml/debug.sml]
2021-05-10T23:25:58.2571461Z [code: 1658, data: 50, env: 178 bytes]
2021-05-10T23:25:58.2572370Z [compiling $cml/(core-cml.cm):core-cml/queue.sml]
2021-05-10T23:25:58.2780250Z [code: 3838, data: 118, env: 473 bytes]
2021-05-10T23:25:58.2786469Z [compiling $cml/(core-cml.cm):core-cml/scheduler.sml]
2021-05-10T23:25:58.2850455Z cml/src/core-cml/scheduler.sml:180.7-180.30 Warning: binding not exhaustive
2021-05-10T23:25:58.2851274Z           x :: r = ...
2021-05-10T23:25:58.3216138Z [code: 12787, data: 251, env: 1380 bytes]
2021-05-10T23:25:58.3217424Z [compiling $cml/(core-cml.cm):core-cml/event-sig.sml]
2021-05-10T23:25:58.3238824Z [code: 81, data: 1, env: 435 bytes]
2021-05-10T23:25:58.3246272Z [compiling $cml/(core-cml.cm):core-cml/event.sml]
2021-05-10T23:25:58.3395399Z cml/src/core-cml/event.sml:105.7-105.38 Warning: binding not exhaustive
2021-05-10T23:25:58.3396264Z           CVAR_unset waiting = ...
2021-05-10T23:25:58.4345375Z [code: 27465, data: 185, env: 612 bytes]
2021-05-10T23:25:58.4346674Z [compiling $cml/(core-cml.cm):core-cml/timeout-sig.sml]
2021-05-10T23:25:58.4370986Z [code: 89, data: 1, env: 177 bytes]
2021-05-10T23:25:58.4377845Z [compiling $cml/(core-cml.cm):core-cml/timeout.sml]
2021-05-10T23:25:58.4404494Z cml/src/core-cml/timeout.sml:92.26 Warning: calling polyEqual
2021-05-10T23:25:58.4565836Z [code: 5508, data: 20, env: 361 bytes]
2021-05-10T23:25:58.4571186Z [compiling $cml/(core-cml.cm):core-cml/mailbox-sig.sml]
2021-05-10T23:25:58.4590513Z [code: 89, data: 1, env: 347 bytes]
2021-05-10T23:25:58.4601367Z [compiling $cml/(core-cml.cm):core-cml/version.sml]
2021-05-10T23:25:58.4655369Z [code: 887, data: 95, env: 185 bytes]
2021-05-10T23:25:58.4659617Z [compiling $cml/(core-cml.cm):core-cml/thread-sig.sml]
2021-05-10T23:25:58.4683349Z [code: 89, data: 1, env: 679 bytes]
2021-05-10T23:25:58.4686046Z [compiling $cml/(core-cml.cm):core-cml/thread.sml]
2021-05-10T23:25:58.4987370Z [code: 7538, data: 26, env: 915 bytes]
2021-05-10T23:25:58.4992816Z [compiling $cml/(core-cml.cm):core-cml/channel-sig.sml]
2021-05-10T23:25:58.5015540Z [code: 89, data: 1, env: 433 bytes]
2021-05-10T23:25:58.5022579Z [compiling $cml/(core-cml.cm):core-cml/channel.sml]
2021-05-10T23:25:58.5096044Z cml/src/core-cml/channel.sml:60.9-62.8 Warning: match nonexhaustive
2021-05-10T23:25:58.5096643Z           transId as ref (TRANS tid) => ...
2021-05-10T23:25:58.5097004Z
2021-05-10T23:25:58.5596599Z [code: 14750, data: 126, env: 741 bytes]
2021-05-10T23:25:58.5601921Z [compiling $cml/(core-cml.cm):core-cml/cml-sig.sml]
2021-05-10T23:25:58.5637740Z [code: 81, data: 1, env: 1500 bytes]
2021-05-10T23:25:58.5646319Z [compiling $cml/(core-cml.cm):core-cml/cml.sml]
2021-05-10T23:25:58.5708051Z [code: 457, data: 1, env: 355 bytes]
2021-05-10T23:25:58.5709155Z [compiling $cml/(core-cml.cm):core-cml/sync-var-sig.sml]
2021-05-10T23:25:58.5740346Z [code: 89, data: 1, env: 1499 bytes]
2021-05-10T23:25:58.5744129Z [compiling $cml/(core-cml.cm):core-cml/sync-var.sml]
2021-05-10T23:25:58.5835402Z cml/src/core-cml/sync-var.sml:38.9-40.8 Warning: match nonexhaustive
2021-05-10T23:25:58.5836224Z           transId as ref (TRANS tid) => ...
2021-05-10T23:25:58.5836580Z
2021-05-10T23:25:58.6459972Z [code: 19449, data: 225, env: 378 bytes]
2021-05-10T23:25:58.6466944Z [compiling $cml/(core-cml.cm):core-cml/mailbox.sml]
2021-05-10T23:25:58.6509135Z cml/src/core-cml/mailbox.sml:129.7-129.25 Warning: binding not exhaustive
2021-05-10T23:25:58.6509782Z           EMPTY q = ...
2021-05-10T23:25:58.6519003Z cml/src/core-cml/mailbox.sml:50.9-52.8 Warning: match nonexhaustive
2021-05-10T23:25:58.6519684Z           transId as ref (TRANS tid) => ...
2021-05-10T23:25:58.6520078Z
2021-05-10T23:25:58.6812190Z [code: 8664, data: 176, env: 667 bytes]
2021-05-10T23:25:58.6818034Z [compiling $cml/(core-cml.cm):core-cml/barrier-sig.sml]
2021-05-10T23:25:58.6839065Z [code: 89, data: 1, env: 286 bytes]
2021-05-10T23:25:58.6843696Z [compiling $cml/(core-cml.cm):core-cml/running.sml]
2021-05-10T23:25:58.6865248Z [code: 129, data: 1, env: 72 bytes]
2021-05-10T23:25:58.6870470Z [compiling $cml/(core-cml.cm):core-cml/cml-cleanup-sig.sml]
2021-05-10T23:25:58.6897247Z [code: 89, data: 1, env: 742 bytes]
2021-05-10T23:25:58.6901595Z [compiling $cml/(core-cml.cm):core-cml/cleanup.sml]
2021-05-10T23:25:58.7422564Z [code: 15520, data: 272, env: 912 bytes]
2021-05-10T23:25:58.7433147Z [compiling $cml/(core-cml.cm):core-cml/barrier.sml]
2021-05-10T23:25:58.7645573Z [code: 5883, data: 275, env: 973 bytes]
2021-05-10T23:25:58.7655589Z [compiling $cml/(core-cml.cm):core-cml/io-manager.sml]
2021-05-10T23:25:58.7687958Z cml/src/core-cml/io-manager.sml:108.13-113.44 Warning: match nonexhaustive
2021-05-10T23:25:58.7688634Z           (nil,r,wq) => ...
2021-05-10T23:25:58.7689245Z           (pi :: pis,item :: r,wq) => ...
2021-05-10T23:25:58.7689803Z
2021-05-10T23:25:58.7690680Z cml/src/core-cml/io-manager.sml:74.54 Warning: calling polyEqual
2021-05-10T23:25:58.7849548Z [code: 5362, data: 130, env: 503 bytes]
2021-05-10T23:25:58.7858141Z [stabilizing $cml/core-cml.cm]
2021-05-10T23:25:58.8003131Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/.cm/amd64-unix]
2021-05-10T23:25:58.8004007Z [code: 131434, data: 1986, inlinable: 0, env: 15145 bytes]
2021-05-10T23:25:58.8037778Z [scanning $cml/cml-internal.cm]
2021-05-10T23:25:58.8041161Z [scanning $cml/(cml-internal.cm):glue/sources.cm]
2021-05-10T23:25:58.8044764Z [scanning $cml/(cml-internal.cm):glue/(sources.cm):../cml-sub-basis.cm]
2021-05-10T23:25:58.8063894Z [scanning $cml/(cml-internal.cm):glue/(sources.cm):../IO/sources.cm]
2021-05-10T23:25:58.8067602Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):prim-io-sig.sml]
2021-05-10T23:25:58.8076521Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/IO/.cm/SKEL]
2021-05-10T23:25:58.8079801Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):cml-stream-io-sig.sml]
2021-05-10T23:25:58.8086923Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):cml-text-stream-io-sig.sml]
2021-05-10T23:25:58.8094090Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):new-cml-imperative-io-sig.sml]
2021-05-10T23:25:58.8110932Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):new-bin-io-fn.sml]
2021-05-10T23:25:58.8290549Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):new-cml-text-io-sig.sml]
2021-05-10T23:25:58.8303678Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):new-text-io-fn.sml]
2021-05-10T23:25:58.8580453Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):cml-bin-io-sig.sml]
2021-05-10T23:25:58.8587586Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):clean-io.sml]
2021-05-10T23:25:58.8612053Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):prim-io-fn.sml]
2021-05-10T23:25:58.8623827Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):os-prim-io-sig.sml]
2021-05-10T23:25:58.8631110Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):bin-prim-io.sml]
2021-05-10T23:25:58.8637080Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):text-prim-io.sml]
2021-05-10T23:25:58.8642842Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):chan-io-fn.sml]
2021-05-10T23:25:58.8714715Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):init-cleanup.sml]
2021-05-10T23:25:58.8717409Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/glue/.cm/SKEL]
2021-05-10T23:25:58.8718543Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):export-fn-fn.sml]
2021-05-10T23:25:58.8738270Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):os-glue-sig.sml]
2021-05-10T23:25:58.8746146Z [parsing $cml/(cml-internal.cm):glue/(sources.cm):new-run-cml-fn.sml]
2021-05-10T23:25:58.8774635Z [scanning $cml/(cml-internal.cm):OS/sources.cm]
2021-05-10T23:25:58.8776450Z [parsing $cml/(cml-internal.cm):OS/(sources.cm):os-io-sig.sml]
2021-05-10T23:25:58.8797862Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/OS/.cm/SKEL]
2021-05-10T23:25:58.8798994Z [parsing $cml/(cml-internal.cm):OS/(sources.cm):os-process-sig.sml]
2021-05-10T23:25:58.8804514Z [parsing $cml/(cml-internal.cm):OS/(sources.cm):os-sig.sml]
2021-05-10T23:25:58.8809860Z [parsing $cml/(cml-internal.cm):OS/(sources.cm):os-signatures.sml]
2021-05-10T23:25:58.8818717Z [scanning $cml/(cml-internal.cm):Sockets/sources.cm]
2021-05-10T23:25:58.8822162Z [scanning $cml/(cml-internal.cm):Sockets/(sources.cm):layer3.cm]
2021-05-10T23:25:58.8825516Z [scanning $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):layer2.cm]
2021-05-10T23:25:58.8829898Z [scanning $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):layer1.cm]
2021-05-10T23:25:58.8834369Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):(layer1.cm):pre-sock.sml]
2021-05-10T23:25:58.8845245Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/Sockets/.cm/SKEL]
2021-05-10T23:25:58.8848875Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):(layer1.cm):cml-socket-sig.sml]
2021-05-10T23:25:58.8859850Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):(layer1.cm):cml-socket.sml]
2021-05-10T23:25:58.8937826Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):rebind1.sml]
2021-05-10T23:25:58.8941028Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):generic-sock-sig.sml]
2021-05-10T23:25:58.8954255Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):inet-sock-sig.sml]
2021-05-10T23:25:58.9005380Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):unix-sock-sig.sml]
2021-05-10T23:25:58.9025059Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):cml-generic-sock.sml]
2021-05-10T23:25:58.9033083Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):cml-inet-sock.sml]
2021-05-10T23:25:58.9041949Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):cml-unix-sock.sml]
2021-05-10T23:25:58.9068778Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):rebind2.sml]
2021-05-10T23:25:58.9072380Z [parsing $cml/(cml-internal.cm):Sockets/(sources.cm):rebind2-unix-sock.sml]
2021-05-10T23:25:58.9092052Z [scanning $cml/(cml-internal.cm):Unix/sources.cm]
2021-05-10T23:25:58.9095609Z [scanning $cml/(cml-internal.cm):Unix/(sources.cm):os.cm]
2021-05-10T23:25:58.9099987Z [scanning $cml/(cml-internal.cm):Unix/(sources.cm):(os.cm):../util/sources.cm]
2021-05-10T23:25:58.9102885Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):(os.cm):../util/(sources.cm):result.sml]
2021-05-10T23:25:58.9108653Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/util/.cm/SKEL]
2021-05-10T23:25:58.9115674Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):(os.cm):os-io.sml]
2021-05-10T23:25:58.9124931Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/Unix/.cm/SKEL]
2021-05-10T23:25:58.9128535Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):(os.cm):proc-manager.sml]
2021-05-10T23:25:58.9140267Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):(os.cm):os-process.sml]
2021-05-10T23:25:58.9164602Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):syscall.sml]
2021-05-10T23:25:58.9173346Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):os.sml]
2021-05-10T23:25:58.9179223Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):posix-bin-prim-io.sml]
2021-05-10T23:25:58.9230390Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):posix-bin-io.sml]
2021-05-10T23:25:58.9231583Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):posix-text-prim-io.sml]
2021-05-10T23:25:58.9254638Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):posix-text-io.sml]
2021-05-10T23:25:58.9260933Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):unix-sig.sml]
2021-05-10T23:25:58.9276666Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):new-unix.sml]
2021-05-10T23:25:58.9337026Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):unix-glue.sml]
2021-05-10T23:25:58.9343209Z [parsing $cml/(cml-internal.cm):Unix/(sources.cm):run-cml.sml]
2021-05-10T23:25:58.9442280Z [compiling $cml/(cml-internal.cm):OS/(sources.cm):os-io-sig.sml]
2021-05-10T23:25:58.9443403Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/OS/.cm/GUID]
2021-05-10T23:25:58.9476342Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/OS/.cm/amd64-unix]
2021-05-10T23:25:58.9477073Z [code: 81, data: 1, env: 817 bytes]
2021-05-10T23:25:58.9477934Z [compiling $cml/(cml-internal.cm):OS/(sources.cm):os-process-sig.sml]
2021-05-10T23:25:58.9502302Z [code: 81, data: 1, env: 449 bytes]
2021-05-10T23:25:58.9510700Z [compiling $cml/(cml-internal.cm):OS/(sources.cm):os-sig.sml]
2021-05-10T23:25:58.9531164Z [code: 73, data: 1, env: 375 bytes]
2021-05-10T23:25:58.9536480Z [compiling $cml/(cml-internal.cm):OS/(sources.cm):os-signatures.sml]
2021-05-10T23:25:58.9558247Z [code: 81, data: 1, env: 103 bytes]
2021-05-10T23:25:58.9560571Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):(os.cm):os-io.sml]
2021-05-10T23:25:58.9561666Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/Unix/.cm/GUID]
2021-05-10T23:25:58.9660693Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/Unix/.cm/amd64-unix]
2021-05-10T23:25:58.9661429Z [code: 2514, data: 170, env: 397 bytes]
2021-05-10T23:25:58.9669123Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):(os.cm):../util/(sources.cm):result.sml]
2021-05-10T23:25:58.9670324Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/util/.cm/GUID]
2021-05-10T23:25:58.9779797Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/util/.cm/amd64-unix]
2021-05-10T23:25:58.9782038Z [code: 2777, data: 57, env: 1225 bytes]
2021-05-10T23:25:58.9782936Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):(os.cm):proc-manager.sml]
2021-05-10T23:25:58.9884108Z [code: 2516, data: 20, env: 232 bytes]
2021-05-10T23:25:58.9890821Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):(os.cm):os-process.sml]
2021-05-10T23:25:59.0027086Z [code: 4628, data: 116, env: 229 bytes]
2021-05-10T23:25:59.0032944Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):os.sml]
2021-05-10T23:25:59.0067258Z [code: 153, data: 1, env: 455 bytes]
2021-05-10T23:25:59.0072167Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):syscall.sml]
2021-05-10T23:25:59.0192077Z [code: 2694, data: 126, env: 250 bytes]
2021-05-10T23:25:59.0198824Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):prim-io-sig.sml]
2021-05-10T23:25:59.0200206Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/IO/.cm/GUID]
2021-05-10T23:25:59.0248606Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/IO/.cm/amd64-unix]
2021-05-10T23:25:59.0249465Z [code: 81, data: 1, env: 2257 bytes]
2021-05-10T23:25:59.0253008Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):prim-io-fn.sml]
2021-05-10T23:25:59.0371283Z [code: 297, data: 1, env: 4391 bytes]
2021-05-10T23:25:59.0381957Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):bin-prim-io.sml]
2021-05-10T23:25:59.0530282Z [code: 738, data: 26, env: 2759 bytes]
2021-05-10T23:25:59.0538793Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):os-prim-io-sig.sml]
2021-05-10T23:25:59.0560687Z [code: 81, data: 1, env: 399 bytes]
2021-05-10T23:25:59.0568114Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):posix-bin-prim-io.sml]
2021-05-10T23:25:59.1287771Z [code: 27104, data: 440, env: 166 bytes]
2021-05-10T23:25:59.1292978Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):clean-io.sml]
2021-05-10T23:25:59.1426443Z [code: 3949, data: 93, env: 437 bytes]
2021-05-10T23:25:59.1433620Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):cml-stream-io-sig.sml]
2021-05-10T23:25:59.1474727Z [code: 89, data: 1, env: 1946 bytes]
2021-05-10T23:25:59.1479832Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):new-cml-imperative-io-sig.sml]
2021-05-10T23:25:59.1516953Z [code: 97, data: 1, env: 1858 bytes]
2021-05-10T23:25:59.1523101Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):cml-bin-io-sig.sml]
2021-05-10T23:25:59.1595927Z [code: 81, data: 1, env: 3158 bytes]
2021-05-10T23:25:59.1604485Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):new-bin-io-fn.sml]
2021-05-10T23:25:59.3116090Z [code: 46878, data: 1070, env: 4890 bytes]
2021-05-10T23:25:59.3132496Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):posix-bin-io.sml]
2021-05-10T23:25:59.3214951Z [code: 340, data: 20, env: 4100 bytes]
2021-05-10T23:25:59.3228417Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):text-prim-io.sml]
2021-05-10T23:25:59.3348913Z [code: 738, data: 26, env: 2771 bytes]
2021-05-10T23:25:59.3355799Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):posix-text-prim-io.sml]
2021-05-10T23:25:59.3662686Z [code: 10861, data: 213, env: 661 bytes]
2021-05-10T23:25:59.3671503Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):chan-io-fn.sml]
2021-05-10T23:25:59.4209231Z [code: 19239, data: 159, env: 2786 bytes]
2021-05-10T23:25:59.4214233Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):cml-text-stream-io-sig.sml]
2021-05-10T23:25:59.4259577Z [code: 89, data: 1, env: 2227 bytes]
2021-05-10T23:25:59.4265215Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):new-cml-text-io-sig.sml]
2021-05-10T23:25:59.4327210Z [code: 89, data: 1, env: 3546 bytes]
2021-05-10T23:25:59.4338755Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):../IO/(sources.cm):new-text-io-fn.sml]
2021-05-10T23:25:59.4618802Z cml/src/IO/new-text-io-fn.sml:956.23 Warning: calling polyEqual
2021-05-10T23:25:59.6979668Z [code: 73684, data: 1220, env: 5572 bytes]
2021-05-10T23:25:59.6995733Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):posix-text-io.sml]
2021-05-10T23:25:59.7107829Z [code: 348, data: 20, env: 4705 bytes]
2021-05-10T23:25:59.7116756Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):unix-sig.sml]
2021-05-10T23:25:59.7150378Z [code: 81, data: 1, env: 1342 bytes]
2021-05-10T23:25:59.7163473Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):(layer1.cm):pre-sock.sml]
2021-05-10T23:25:59.7164781Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/Sockets/.cm/GUID]
2021-05-10T23:25:59.7281062Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/Sockets/.cm/amd64-unix]
2021-05-10T23:25:59.7281945Z [code: 3120, data: 104, env: 823 bytes]
2021-05-10T23:25:59.7283134Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):(layer1.cm):cml-socket-sig.sml]
2021-05-10T23:25:59.7349811Z [code: 89, data: 1, env: 3456 bytes]
2021-05-10T23:25:59.7359081Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):(layer1.cm):cml-socket.sml]
2021-05-10T23:25:59.9046619Z [code: 47052, data: 28, env: 1775 bytes]
2021-05-10T23:25:59.9051897Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):rebind1.sml]
2021-05-10T23:25:59.9137869Z [code: 73, data: 1, env: 4701 bytes]
2021-05-10T23:25:59.9150029Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):os-glue-sig.sml]
2021-05-10T23:25:59.9151137Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/glue/.cm/GUID]
2021-05-10T23:25:59.9171175Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/src/glue/.cm/amd64-unix]
2021-05-10T23:25:59.9171968Z [code: 81, data: 1, env: 154 bytes]
2021-05-10T23:25:59.9172727Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):unix-glue.sml]
2021-05-10T23:25:59.9232709Z [code: 1465, data: 1, env: 57 bytes]
2021-05-10T23:25:59.9237898Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):init-cleanup.sml]
2021-05-10T23:25:59.9267052Z [code: 508, data: 20, env: 38 bytes]
2021-05-10T23:25:59.9270250Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):export-fn-fn.sml]
2021-05-10T23:25:59.9441014Z [code: 5975, data: 47, env: 875 bytes]
2021-05-10T23:25:59.9447824Z [compiling $cml/(cml-internal.cm):glue/(sources.cm):new-run-cml-fn.sml]
2021-05-10T23:25:59.9658383Z [code: 7641, data: 361, env: 1741 bytes]
2021-05-10T23:25:59.9665807Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):run-cml.sml]
2021-05-10T23:25:59.9702312Z [code: 305, data: 1, env: 949 bytes]
2021-05-10T23:25:59.9715627Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):generic-sock-sig.sml]
2021-05-10T23:25:59.9743497Z [code: 89, data: 1, env: 1394 bytes]
2021-05-10T23:25:59.9750364Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):cml-generic-sock.sml]
2021-05-10T23:25:59.9858238Z [code: 2777, data: 1, env: 64 bytes]
2021-05-10T23:25:59.9876867Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):inet-sock-sig.sml]
2021-05-10T23:25:59.9916174Z [code: 89, data: 1, env: 2139 bytes]
2021-05-10T23:25:59.9920729Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):cml-inet-sock.sml]
2021-05-10T23:26:00.0016298Z [code: 2149, data: 21, env: 730 bytes]
2021-05-10T23:26:00.0020212Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):rebind2.sml]
2021-05-10T23:26:00.0064818Z [code: 105, data: 1, env: 2307 bytes]
2021-05-10T23:26:00.0083300Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):(layer2.cm):unix-sock-sig.sml]
2021-05-10T23:26:00.0119496Z [code: 89, data: 1, env: 1965 bytes]
2021-05-10T23:26:00.0123931Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):(layer3.cm):cml-unix-sock.sml]
2021-05-10T23:26:00.0208457Z [code: 1469, data: 21, env: 1795 bytes]
2021-05-10T23:26:00.0212698Z [compiling $cml/(cml-internal.cm):Sockets/(sources.cm):rebind2-unix-sock.sml]
2021-05-10T23:26:00.0252190Z [code: 81, data: 1, env: 2050 bytes]
2021-05-10T23:26:00.0272410Z [compiling $cml/(cml-internal.cm):Unix/(sources.cm):new-unix.sml]
2021-05-10T23:26:00.0307659Z cml/src/Unix/new-unix.sml:79.14 Warning: calling polyEqual
2021-05-10T23:26:00.0308512Z cml/src/Unix/new-unix.sml:83.15 Warning: calling polyEqual
2021-05-10T23:26:00.0578115Z [code: 12145, data: 121, env: 243 bytes]
2021-05-10T23:26:00.0609437Z [stabilizing $cml/cml-internal.cm]
2021-05-10T23:26:00.1141319Z [code: 285764, data: 4524, inlinable: 0, env: 38175 bytes]
2021-05-10T23:26:00.1175464Z [scanning $cml/cml.cm]
2021-05-10T23:26:00.1199755Z [stabilizing $cml/cml.cm]
2021-05-10T23:26:00.1203784Z [code: 0, data: 0, inlinable: 0, env: 532 bytes]
2021-05-10T23:26:00.1235929Z [scanning $cml/basis.cm]
2021-05-10T23:26:00.1246844Z [scanning $cml/(basis.cm):basis-sub-basis.cm]
2021-05-10T23:26:00.1865325Z [stabilizing $cml/basis.cm]
2021-05-10T23:26:00.1930751Z [code: 0, data: 0, inlinable: 0, env: 5168 bytes]
2021-05-10T23:26:00.1969002Z [scanning $cml-lib/trace-cml.cm]
2021-05-10T23:26:00.1969919Z [scanning $cml-lib/(trace-cml.cm):../trace-cml.cm]
2021-05-10T23:26:00.1974860Z [parsing $cml-lib/(trace-cml.cm):../(trace-cml.cm):trace-cml-sig.sml]
2021-05-10T23:26:00.1999625Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/cml-lib/.cm/SKEL]
2021-05-10T23:26:00.2000725Z [parsing $cml-lib/(trace-cml.cm):../(trace-cml.cm):trace-cml.sml]
2021-05-10T23:26:00.2082025Z [compiling $cml-lib/(trace-cml.cm):../(trace-cml.cm):trace-cml-sig.sml]
2021-05-10T23:26:00.2083161Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/cml-lib/.cm/GUID]
2021-05-10T23:26:00.2123014Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/cml-lib/.cm/amd64-unix]
2021-05-10T23:26:00.2123790Z [code: 81, data: 1, env: 1131 bytes]
2021-05-10T23:26:00.2547192Z [compiling $cml-lib/(trace-cml.cm):../(trace-cml.cm):trace-cml.sml]
2021-05-10T23:26:00.3398056Z [code: 29686, data: 406, env: 477 bytes]
2021-05-10T23:26:00.3408756Z [stabilizing $cml-lib/trace-cml.cm]
2021-05-10T23:26:00.3438945Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/cml-lib/cm-descr/.cm/amd64-unix]
2021-05-10T23:26:00.3439926Z [code: 29767, data: 407, inlinable: 0, env: 2646 bytes]
2021-05-10T23:26:00.3473223Z [scanning $cml-lib/smlnj-lib.cm]
2021-05-10T23:26:00.3474011Z [scanning $cml-lib/(smlnj-lib.cm):../sources.cm]
2021-05-10T23:26:00.3480255Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/cml-atom-new.sml]
2021-05-10T23:26:00.3484924Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/cml-lib/SMLNJ-Util/.cm/SKEL]
2021-05-10T23:26:00.3488299Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-binary-map.sml]
2021-05-10T23:26:00.3493793Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-binary-set.sml]
2021-05-10T23:26:00.3498191Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-map.sml]
2021-05-10T23:26:00.3502708Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-redblack-map.sml]
2021-05-10T23:26:00.3510731Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-redblack-set.sml]
2021-05-10T23:26:00.3515444Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-set.sml]
2021-05-10T23:26:00.3519504Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-table.sml]
2021-05-10T23:26:00.3523982Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/io-util.sml]
2021-05-10T23:26:00.3536495Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/io-util-sig.sml]
2021-05-10T23:26:00.3541877Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-INet/sock-util-sig.sml]
2021-05-10T23:26:00.3556695Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/cml-lib/SMLNJ-INet/.cm/SKEL]
2021-05-10T23:26:00.3559822Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-INet/sock-util.sml]
2021-05-10T23:26:00.3594784Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-INet/unix-sock-util.sml]
2021-05-10T23:26:00.3600628Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):multicast-sig.sml]
2021-05-10T23:26:00.3609907Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):multicast.sml]
2021-05-10T23:26:00.3628187Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):simple-rpc-sig.sml]
2021-05-10T23:26:00.3633920Z [parsing $cml-lib/(smlnj-lib.cm):../(sources.cm):simple-rpc.sml]
2021-05-10T23:26:00.3717350Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):simple-rpc-sig.sml]
2021-05-10T23:26:00.3759306Z [code: 81, data: 1, env: 1177 bytes]
2021-05-10T23:26:00.3776794Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/io-util-sig.sml]
2021-05-10T23:26:00.3777996Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/cml-lib/SMLNJ-Util/.cm/GUID]
2021-05-10T23:26:00.3800496Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/cml-lib/SMLNJ-Util/.cm/amd64-unix]
2021-05-10T23:26:00.3801454Z [code: 89, data: 1, env: 307 bytes]
2021-05-10T23:26:00.3802296Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/io-util.sml]
2021-05-10T23:26:00.4002405Z [code: 6946, data: 210, env: 273 bytes]
2021-05-10T23:26:00.4015606Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/cml-atom-new.sml]
2021-05-10T23:26:00.4078512Z [code: 1444, data: 20, env: 104 bytes]
2021-05-10T23:26:00.4084189Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-table.sml]
2021-05-10T23:26:00.4124800Z [code: 364, data: 20, env: 464 bytes]
2021-05-10T23:26:00.4132126Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-redblack-set.sml]
2021-05-10T23:26:00.4190067Z [code: 364, data: 20, env: 522 bytes]
2021-05-10T23:26:00.4192783Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-set.sml]
2021-05-10T23:26:00.4217537Z [code: 81, data: 1, env: 65 bytes]
2021-05-10T23:26:00.4222731Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):simple-rpc.sml]
2021-05-10T23:26:00.4438283Z [code: 7511, data: 23, env: 162 bytes]
2021-05-10T23:26:00.4453891Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-INet/sock-util-sig.sml]
2021-05-10T23:26:00.4455318Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/cml-lib/SMLNJ-INet/.cm/GUID]
2021-05-10T23:26:00.4497204Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/cml/cml-lib/SMLNJ-INet/.cm/amd64-unix]
2021-05-10T23:26:00.4497999Z [code: 97, data: 1, env: 2652 bytes]
2021-05-10T23:26:00.4505808Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-binary-set.sml]
2021-05-10T23:26:00.4543701Z [code: 356, data: 20, env: 395 bytes]
2021-05-10T23:26:00.5017178Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-INet/sock-util.sml]
2021-05-10T23:26:00.5424772Z [code: 12702, data: 262, env: 1670 bytes]
2021-05-10T23:26:00.5431488Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-INet/unix-sock-util.sml]
2021-05-10T23:26:00.5512196Z [code: 951, data: 23, env: 2897 bytes]
2021-05-10T23:26:00.5520195Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-binary-map.sml]
2021-05-10T23:26:00.5570414Z [code: 364, data: 20, env: 382 bytes]
2021-05-10T23:26:00.5576920Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-redblack-map.sml]
2021-05-10T23:26:00.5621889Z [code: 364, data: 20, env: 509 bytes]
2021-05-10T23:26:00.5627454Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):multicast-sig.sml]
2021-05-10T23:26:00.5657181Z [code: 81, data: 1, env: 1165 bytes]
2021-05-10T23:26:00.5660411Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):multicast.sml]
2021-05-10T23:26:00.5900909Z [code: 6990, data: 22, env: 1224 bytes]
2021-05-10T23:26:00.5907715Z [compiling $cml-lib/(smlnj-lib.cm):../(sources.cm):SMLNJ-Util/atom-map.sml]
2021-05-10T23:26:00.5936266Z [code: 81, data: 1, env: 66 bytes]
2021-05-10T23:26:00.5971112Z [stabilizing $cml-lib/smlnj-lib.cm]
2021-05-10T23:26:00.6164276Z [code: 38866, data: 666, inlinable: 0, env: 17132 bytes]
2021-05-10T23:26:00.6203848Z [scanning $cml/trace-cml.cm]
2021-05-10T23:26:00.6204570Z [stabilizing $cml/trace-cml.cm]
2021-05-10T23:26:00.6205323Z [code: 0, data: 0, inlinable: 0, env: 133 bytes]
2021-05-10T23:26:00.6237085Z [scanning $cml/smlnj-lib.cm]
2021-05-10T23:26:00.6278897Z [stabilizing $cml/smlnj-lib.cm]
2021-05-10T23:26:00.6313247Z [code: 0, data: 0, inlinable: 0, env: 3501 bytes]
2021-05-10T23:26:00.6346887Z [scanning $cml/inet-lib.cm]
2021-05-10T23:26:00.6356594Z [stabilizing $cml/inet-lib.cm]
2021-05-10T23:26:00.6357145Z [code: 0, data: 0, inlinable: 0, env: 197 bytes]
2021-05-10T23:26:00.6392248Z [scanning $cml/unix-lib.cm]
2021-05-10T23:26:00.6392893Z [stabilizing $cml/unix-lib.cm]
2021-05-10T23:26:00.6393447Z [code: 0, data: 0, inlinable: 0, env: 192 bytes]
2021-05-10T23:26:00.6424835Z [scanning $cml/cml-lib.cm]
2021-05-10T23:26:00.6428437Z [stabilizing $cml/cml-lib.cm]
2021-05-10T23:26:00.6430407Z [code: 0, data: 0, inlinable: 0, env: 260 bytes]
2021-05-10T23:26:00.6462545Z [scanning $OTHER-MLRISC/RA.cm]
2021-05-10T23:26:00.6488428Z [library $/MLRISC.cm is stable]
2021-05-10T23:26:00.6490268Z [parsing $OTHER-MLRISC/(RA.cm):../ra/chaitin-spillheur2.sml]
2021-05-10T23:26:00.6526797Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/ra/.cm/SKEL]
2021-05-10T23:26:00.6528049Z [parsing $OTHER-MLRISC/(RA.cm):../ra/chow-hennessy-spillheur2.sml]
2021-05-10T23:26:00.6564055Z [parsing $OTHER-MLRISC/(RA.cm):../ra/ra-spill-with-renaming.sml]
2021-05-10T23:26:00.6815199Z [compiling $OTHER-MLRISC/(RA.cm):../ra/chow-hennessy-spillheur2.sml]
2021-05-10T23:26:00.6816637Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/ra/.cm/GUID]
2021-05-10T23:26:00.7127984Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/ra/.cm/amd64-unix]
2021-05-10T23:26:00.7128861Z [code: 6821, data: 133, env: 822 bytes]
2021-05-10T23:26:00.7134435Z [compiling $OTHER-MLRISC/(RA.cm):../ra/chaitin-spillheur2.sml]
2021-05-10T23:26:00.7379608Z [code: 5072, data: 128, env: 732 bytes]
2021-05-10T23:26:00.7386491Z [compiling $OTHER-MLRISC/(RA.cm):../ra/ra-spill-with-renaming.sml]
2021-05-10T23:26:00.8350250Z [code: 24513, data: 97, env: 1996 bytes]
2021-05-10T23:26:00.8365437Z [stabilizing $OTHER-MLRISC/RA.cm]
2021-05-10T23:26:00.8425558Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/cm/.cm/amd64-unix]
2021-05-10T23:26:00.8428006Z [code: 36406, data: 358, inlinable: 0, env: 5042 bytes]
2021-05-10T23:26:00.8457905Z [scanning $OTHER-MLRISC/Peephole.cm]
2021-05-10T23:26:00.8469688Z [library $/Graphs.cm is stable]
2021-05-10T23:26:00.8473611Z [parsing $OTHER-MLRISC/(Peephole.cm):../instructions/peephole.sig]
2021-05-10T23:26:00.8475085Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/instructions/.cm/SKEL]
2021-05-10T23:26:00.8477662Z [parsing $OTHER-MLRISC/(Peephole.cm):../flowgraph/cfgPeephole.sml]
2021-05-10T23:26:00.8481875Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/flowgraph/.cm/SKEL]
2021-05-10T23:26:00.8510788Z [compiling $OTHER-MLRISC/(Peephole.cm):../instructions/peephole.sig]
2021-05-10T23:26:00.8511978Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/instructions/.cm/GUID]
2021-05-10T23:26:00.8531465Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/instructions/.cm/amd64-unix]
2021-05-10T23:26:00.8532236Z [code: 89, data: 1, env: 124 bytes]
2021-05-10T23:26:00.8535937Z [compiling $OTHER-MLRISC/(Peephole.cm):../flowgraph/cfgPeephole.sml]
2021-05-10T23:26:00.8537155Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/flowgraph/.cm/GUID]
2021-05-10T23:26:00.8716637Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/flowgraph/.cm/amd64-unix]
2021-05-10T23:26:00.8717547Z [code: 1107, data: 43, env: 257 bytes]
2021-05-10T23:26:00.8723493Z [stabilizing $OTHER-MLRISC/Peephole.cm]
2021-05-10T23:26:00.8732757Z [code: 1196, data: 44, inlinable: 0, env: 1202 bytes]
2021-05-10T23:26:00.8769670Z [scanning $OTHER-MLRISC/IA32-Peephole.cm]
2021-05-10T23:26:00.8788393Z [library $/IA32.cm is stable]
2021-05-10T23:26:00.8789446Z [parsing $OTHER-MLRISC/(IA32-Peephole.cm):../x86/instructions/x86Peephole.sml]
2021-05-10T23:26:00.8846932Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/x86/instructions/.cm/SKEL]
2021-05-10T23:26:00.8913917Z [compiling $OTHER-MLRISC/(IA32-Peephole.cm):../x86/instructions/x86Peephole.sml]
2021-05-10T23:26:00.8915179Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/x86/instructions/.cm/GUID]
2021-05-10T23:26:00.9360274Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/x86/instructions/.cm/amd64-unix]
2021-05-10T23:26:00.9363320Z [code: 7057, data: 1, env: 517 bytes]
2021-05-10T23:26:00.9364263Z [stabilizing $OTHER-MLRISC/IA32-Peephole.cm]
2021-05-10T23:26:00.9376495Z [code: 7057, data: 1, inlinable: 0, env: 1134 bytes]
2021-05-10T23:26:00.9411267Z [scanning $OTHER-MLRISC/AMD64.cm]
2021-05-10T23:26:00.9423788Z [library $/MLTREE.cm is stable]
2021-05-10T23:26:00.9430913Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/c-calls/amd64-svid.sml]
2021-05-10T23:26:00.9562920Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/c-calls/.cm/SKEL]
2021-05-10T23:26:00.9564222Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/omit-frameptr/amd64omit-frameptr.sml]
2021-05-10T23:26:00.9673216Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/omit-frameptr/.cm/SKEL]
2021-05-10T23:26:00.9674555Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/flowgraph/amd64GasPseudoOps.sml]
2021-05-10T23:26:00.9684548Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/flowgraph/.cm/SKEL]
2021-05-10T23:26:00.9688849Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/flowgraph/amd64-darwin-pseudo-ops.sml]
2021-05-10T23:26:00.9697496Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/emit/amd64Asm.sml]
2021-05-10T23:26:00.9844831Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/emit/.cm/SKEL]
2021-05-10T23:26:00.9847793Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/amd64MC.sml]
2021-05-10T23:26:01.0123632Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/.cm/SKEL]
2021-05-10T23:26:01.0161149Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64Cells.sml]
2021-05-10T23:26:01.0205944Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/instructions/.cm/SKEL]
2021-05-10T23:26:01.0213079Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64Instr.sml]
2021-05-10T23:26:01.0298733Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64Shuffle.sml]
2021-05-10T23:26:01.0306470Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64Props.sml]
2021-05-10T23:26:01.0432926Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64InstrExt.sml]
2021-05-10T23:26:01.0451246Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64CompInstrExt.sml]
2021-05-10T23:26:01.0479657Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/mltree/amd64-gen.sml]
2021-05-10T23:26:01.1012143Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/mltree/.cm/SKEL]
2021-05-10T23:26:01.1034764Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/mltree/amd64-opcodes.sml]
2021-05-10T23:26:01.1057792Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/ra/amd64RegAlloc.sml]
2021-05-10T23:26:01.1178799Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/ra/.cm/SKEL]
2021-05-10T23:26:01.1182637Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/ra/amd64Rewrite.sml]
2021-05-10T23:26:01.1252961Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/ra/amd64SpillInstr.sml]
2021-05-10T23:26:01.1492088Z [parsing $OTHER-MLRISC/(AMD64.cm):../amd64/backpatch/amd64Jumps.sml]
2021-05-10T23:26:01.1518369Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/backpatch/.cm/SKEL]
2021-05-10T23:26:01.1586530Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64Cells.sml]
2021-05-10T23:26:01.1587766Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/instructions/.cm/GUID]
2021-05-10T23:26:01.2089537Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/instructions/.cm/amd64-unix]
2021-05-10T23:26:01.2090490Z [code: 15500, data: 316, env: 2599 bytes]
2021-05-10T23:26:01.2095950Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64Instr.sml]
2021-05-10T23:26:01.3031550Z [code: 6312, data: 64, env: 15111 bytes]
2021-05-10T23:26:01.3049693Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64Shuffle.sml]
2021-05-10T23:26:01.3201127Z [code: 2239, data: 87, env: 925 bytes]
2021-05-10T23:26:01.3207374Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/backpatch/amd64Jumps.sml]
2021-05-10T23:26:01.3208747Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/backpatch/.cm/GUID]
2021-05-10T23:26:01.3641842Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/backpatch/.cm/amd64-unix]
2021-05-10T23:26:01.3642775Z [code: 8187, data: 67, env: 1842 bytes]
2021-05-10T23:26:01.3650989Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64Props.sml]
2021-05-10T23:26:01.3795506Z MLRISC/amd64/instructions/amd64Props.sml:367.29-381.28 Warning: match nonexhaustive
2021-05-10T23:26:01.3796196Z           FMOVE {dst=_,fmvOp=fmvOp,src=_} => ...
2021-05-10T23:26:01.3796700Z           FCOM {comOp=comOp,dst=_,src=_} => ...
2021-05-10T23:26:01.3797175Z           FBINOP {binOp=binOp,dst=_,src=_} => ...
2021-05-10T23:26:01.3797575Z           FSQRTS _ => ...
2021-05-10T23:26:01.3797912Z           FSQRTD _ => ...
2021-05-10T23:26:01.3798212Z
2021-05-10T23:26:01.3798965Z MLRISC/amd64/instructions/amd64Props.sml:311.6-320.21 Warning: match nonexhaustive
2021-05-10T23:26:01.3799681Z           (MOVQ | MOVSWQ | MOVZWQ | MOVSBQ | MOVZBQ | MOVSLQ | CVTSD2SIQ |
2021-05-10T23:26:01.3800179Z            CVTSS2SIQ) => ...
2021-05-10T23:26:01.3800668Z           (MOVL | MOVSWL | MOVZWL | MOVSBL | CVTSD2SI | CVTSS2SI | MOVZBL) => ...
2021-05-10T23:26:01.3801139Z           MOVW => ...
2021-05-10T23:26:01.3801441Z           MOVB => ...
2021-05-10T23:26:01.3801732Z
2021-05-10T23:26:01.3835184Z MLRISC/amd64/instructions/amd64Props.sml:271.49-273.29 Warning: match nonexhaustive
2021-05-10T23:26:01.3835821Z           SOME (FDirect t) => ...
2021-05-10T23:26:01.3836343Z           NONE => ...
2021-05-10T23:26:01.3836628Z
2021-05-10T23:26:01.4983053Z [code: 32979, data: 451, env: 3252 bytes]
2021-05-10T23:26:01.4992063Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/ra/amd64SpillInstr.sml]
2021-05-10T23:26:01.4993460Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/ra/.cm/GUID]
2021-05-10T23:26:01.7901627Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/ra/.cm/amd64-unix]
2021-05-10T23:26:01.7902539Z [code: 65678, data: 310, env: 2081 bytes]
2021-05-10T23:26:01.7911273Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/flowgraph/amd64-darwin-pseudo-ops.sml]
2021-05-10T23:26:01.7912735Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/flowgraph/.cm/GUID]
2021-05-10T23:26:01.8063212Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/flowgraph/.cm/amd64-unix]
2021-05-10T23:26:01.8064019Z [code: 993, data: 25, env: 1798 bytes]
2021-05-10T23:26:01.8069647Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/flowgraph/amd64GasPseudoOps.sml]
2021-05-10T23:26:01.8190891Z [code: 991, data: 31, env: 1859 bytes]
2021-05-10T23:26:01.8200010Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/omit-frameptr/amd64omit-frameptr.sml]
2021-05-10T23:26:01.8201335Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/omit-frameptr/.cm/GUID]
2021-05-10T23:26:01.9572982Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/omit-frameptr/.cm/amd64-unix]
2021-05-10T23:26:01.9573969Z [code: 32549, data: 637, env: 3979 bytes]
2021-05-10T23:26:01.9583236Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64InstrExt.sml]
2021-05-10T23:26:01.9610897Z [code: 116, data: 20, env: 879 bytes]
2021-05-10T23:26:01.9616149Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/instructions/amd64CompInstrExt.sml]
2021-05-10T23:26:02.0104889Z [code: 4569, data: 1, env: 5955 bytes]
2021-05-10T23:26:02.0120874Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/mltree/amd64-opcodes.sml]
2021-05-10T23:26:02.0122174Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/mltree/.cm/GUID]
2021-05-10T23:26:02.0193520Z MLRISC/amd64/mltree/amd64-opcodes.sml:67.9-68.30 Warning: match nonexhaustive
2021-05-10T23:26:02.0194110Z           32 => ...
2021-05-10T23:26:02.0194396Z           64 => ...
2021-05-10T23:26:02.0194681Z
2021-05-10T23:26:02.0195400Z MLRISC/amd64/mltree/amd64-opcodes.sml:65.9-66.28 Warning: match nonexhaustive
2021-05-10T23:26:02.0195944Z           32 => ...
2021-05-10T23:26:02.0196222Z           64 => ...
2021-05-10T23:26:02.0196503Z
2021-05-10T23:26:02.0197188Z MLRISC/amd64/mltree/amd64-opcodes.sml:63.9-64.30 Warning: match nonexhaustive
2021-05-10T23:26:02.0197728Z           32 => ...
2021-05-10T23:26:02.0198005Z           64 => ...
2021-05-10T23:26:02.0198284Z
2021-05-10T23:26:02.0198968Z MLRISC/amd64/mltree/amd64-opcodes.sml:61.9-62.28 Warning: match nonexhaustive
2021-05-10T23:26:02.0199527Z           32 => ...
2021-05-10T23:26:02.0199813Z           64 => ...
2021-05-10T23:26:02.0200080Z
2021-05-10T23:26:02.0516806Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/mltree/.cm/amd64-unix]
2021-05-10T23:26:02.0517714Z [code: 10211, data: 355, env: 1344 bytes]
2021-05-10T23:26:02.0520385Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/mltree/amd64-gen.sml]
2021-05-10T23:26:02.1028227Z MLRISC/amd64/mltree/amd64-gen.sml:1353.6-1357.56 Warning: match nonexhaustive
2021-05-10T23:26:02.1029430Z           8 => ...
2021-05-10T23:26:02.1029912Z           16 => ...
2021-05-10T23:26:02.1030376Z           32 => ...
2021-05-10T23:26:02.1030835Z           64 => ...
2021-05-10T23:26:02.1031267Z
2021-05-10T23:26:02.1090577Z MLRISC/amd64/mltree/amd64-gen.sml:1053.15-1055.24 Warning: match nonexhaustive
2021-05-10T23:26:02.1091145Z           32 => ...
2021-05-10T23:26:02.1091446Z           64 => ...
2021-05-10T23:26:02.1091974Z
2021-05-10T23:26:02.1092685Z MLRISC/amd64/mltree/amd64-gen.sml:1069.15-1071.24 Warning: match nonexhaustive
2021-05-10T23:26:02.1093196Z           32 => ...
2021-05-10T23:26:02.1093490Z           64 => ...
2021-05-10T23:26:02.1093762Z
2021-05-10T23:26:02.1101047Z MLRISC/amd64/mltree/amd64-gen.sml:1032.19-1036.46 Warning: match nonexhaustive
2021-05-10T23:26:02.1101573Z           (32,32) => ...
2021-05-10T23:26:02.1101880Z           (32,64) => ...
2021-05-10T23:26:02.1102165Z           (64,32) => ...
2021-05-10T23:26:02.1102471Z           (64,64) => ...
2021-05-10T23:26:02.1102760Z
2021-05-10T23:26:02.1138350Z MLRISC/amd64/mltree/amd64-gen.sml:933.32-937.29 Warning: match nonexhaustive
2021-05-10T23:26:02.1138903Z           (64,32) => ...
2021-05-10T23:26:02.1139200Z           (32,32) => ...
2021-05-10T23:26:02.1139500Z           (64,64) => ...
2021-05-10T23:26:02.1139785Z           (32,64) => ...
2021-05-10T23:26:02.1140065Z
2021-05-10T23:26:02.1175259Z MLRISC/amd64/mltree/amd64-gen.sml:795.24-797.55 Warning: match nonexhaustive
2021-05-10T23:26:02.1175829Z           32 => ...
2021-05-10T23:26:02.1176115Z           64 => ...
2021-05-10T23:26:02.1176401Z
2021-05-10T23:26:02.1182547Z MLRISC/amd64/mltree/amd64-gen.sml:770.49-772.42 Warning: match nonexhaustive
2021-05-10T23:26:02.1183134Z           SOME (_,false,_,p) => ...
2021-05-10T23:26:02.1183499Z           NONE => ...
2021-05-10T23:26:02.1183785Z
2021-05-10T23:26:02.1224061Z MLRISC/amd64/mltree/amd64-gen.sml:544.12-558.10 Warning: match nonexhaustive
2021-05-10T23:26:02.1224633Z           (32,e1,e2) => ...
2021-05-10T23:26:02.1224972Z           (64,e1,e2) => ...
2021-05-10T23:26:02.1225260Z
2021-05-10T23:26:03.0279670Z [code: 143696, data: 840, env: 4701 bytes]
2021-05-10T23:26:03.0296591Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/amd64MC.sml]
2021-05-10T23:26:03.0297818Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/.cm/GUID]
2021-05-10T23:26:03.0807135Z MLRISC/amd64/amd64MC.sml:529.11-529.54 Warning: binding not exhaustive
2021-05-10T23:26:03.0807987Z           (rex,modRM :: nil) = ...
2021-05-10T23:26:03.0808814Z MLRISC/amd64/amd64MC.sml:525.22-543.13 Warning: match nonexhaustive
2021-05-10T23:26:03.0809382Z           Immed n => ...
2021-05-10T23:26:03.0810038Z           Direct (_,r) => ...
2021-05-10T23:26:03.0810390Z
2021-05-10T23:26:03.0834496Z MLRISC/amd64/amd64MC.sml:750.8-750.25 Warning: binding not exhaustive
2021-05-10T23:26:03.0835122Z           FDirect r = ...
2021-05-10T23:26:03.0840732Z MLRISC/amd64/amd64MC.sml:800.9-800.26 Warning: binding not exhaustive
2021-05-10T23:26:03.0841337Z           FDirect r = ...
2021-05-10T23:26:03.0842106Z MLRISC/amd64/amd64MC.sml:805.9-805.26 Warning: binding not exhaustive
2021-05-10T23:26:03.0842694Z           FDirect r = ...
2021-05-10T23:26:03.3282913Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/.cm/amd64-unix]
2021-05-10T23:26:03.3283846Z [code: 64362, data: 1578, env: 2068 bytes]
2021-05-10T23:26:03.3293538Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/ra/amd64Rewrite.sml]
2021-05-10T23:26:03.3349544Z MLRISC/amd64/ra/amd64Rewrite.sml:170.5-191.7 Warning: match nonexhaustive
2021-05-10T23:26:03.3350169Z           ANNOTATION {a=a,i=i} => ...
2021-05-10T23:26:03.3350550Z           INSTR i => ...
2021-05-10T23:26:03.3350984Z           COPY {dst=dst,k=k,src=src,sz=sz,tmp=tmp} => ...
2021-05-10T23:26:03.3351369Z
2021-05-10T23:26:03.4116422Z [code: 20535, data: 63, env: 454 bytes]
2021-05-10T23:26:03.4128390Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/c-calls/amd64-svid.sml]
2021-05-10T23:26:03.4129679Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/c-calls/.cm/GUID]
2021-05-10T23:26:03.4274736Z MLRISC/amd64/c-calls/amd64-svid.sml:289.5-301.53 Warning: match nonexhaustive
2021-05-10T23:26:03.4278691Z           C_void => ...
2021-05-10T23:26:03.4279087Z           C_float => ...
2021-05-10T23:26:03.4279466Z           C_double => ...
2021-05-10T23:26:03.4280073Z           C_unsigned iTy => ...
2021-05-10T23:26:03.4280502Z           C_signed iTy => ...
2021-05-10T23:26:03.4280883Z           C_PTR => ...
2021-05-10T23:26:03.4281264Z           C_ARRAY _ => ...
2021-05-10T23:26:03.4281649Z           C_STRUCT tys => ...
2021-05-10T23:26:03.4282070Z           C_UNION tys => ...
2021-05-10T23:26:03.4282411Z
2021-05-10T23:26:03.4283373Z MLRISC/amd64/c-calls/amd64-svid.sml:230.45-240.48 Warning: match nonexhaustive
2021-05-10T23:26:03.4283984Z           C_void => ...
2021-05-10T23:26:03.4284357Z           C_float => ...
2021-05-10T23:26:03.4284731Z           C_double => ...
2021-05-10T23:26:03.4285383Z           C_unsigned iTy => ...
2021-05-10T23:26:03.4285810Z           C_signed iTy => ...
2021-05-10T23:26:03.4286185Z           C_PTR => ...
2021-05-10T23:26:03.4286558Z           C_ARRAY _ => ...
2021-05-10T23:26:03.4286894Z
2021-05-10T23:26:03.5242259Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/c-calls/.cm/amd64-unix]
2021-05-10T23:26:03.5243212Z [code: 34305, data: 465, env: 1209 bytes]
2021-05-10T23:26:03.5252944Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/emit/amd64Asm.sml]
2021-05-10T23:26:03.5254210Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/emit/.cm/GUID]
2021-05-10T23:26:03.7070348Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/amd64/emit/.cm/amd64-unix]
2021-05-10T23:26:03.7071261Z [code: 64309, data: 1861, env: 11454 bytes]
2021-05-10T23:26:03.7086584Z [compiling $OTHER-MLRISC/(AMD64.cm):../amd64/ra/amd64RegAlloc.sml]
2021-05-10T23:26:03.9310861Z [code: 40820, data: 692, env: 14171 bytes]
2021-05-10T23:26:03.9345313Z [stabilizing $OTHER-MLRISC/AMD64.cm]
2021-05-10T23:26:04.0818664Z [code: 548351, data: 7863, inlinable: 0, env: 60701 bytes]
2021-05-10T23:26:04.0860018Z [scanning $OTHER-MLRISC/AMD64-Peephole.cm]
2021-05-10T23:26:04.0866761Z [parsing $OTHER-MLRISC/(AMD64-Peephole.cm):../amd64/instructions/amd64Peephole.sml]
2021-05-10T23:26:04.0977189Z [compiling $OTHER-MLRISC/(AMD64-Peephole.cm):../amd64/instructions/amd64Peephole.sml]
2021-05-10T23:26:04.1439965Z [code: 8097, data: 1, env: 521 bytes]
2021-05-10T23:26:04.1445582Z [stabilizing $OTHER-MLRISC/AMD64-Peephole.cm]
2021-05-10T23:26:04.1463907Z [code: 8097, data: 1, inlinable: 0, env: 1150 bytes]
2021-05-10T23:26:04.1498958Z [scanning $OTHER-MLRISC/StagedAlloc.cm]
2021-05-10T23:26:04.1504237Z [parsing $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/allocator/staged-allocation-sig.sml]
2021-05-10T23:26:04.1531001Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/staged-alloc/allocator/.cm/SKEL]
2021-05-10T23:26:04.1532457Z [parsing $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/allocator/staged-allocation-fn.sml]
2021-05-10T23:26:04.1600287Z [parsing $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/conventions/c-loc-kind.sml]
2021-05-10T23:26:04.1603083Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/staged-alloc/conventions/.cm/SKEL]
2021-05-10T23:26:04.1604384Z [parsing $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/conventions/x86-64-c-fn.sml]
2021-05-10T23:26:04.1632612Z [parsing $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/conventions/x86-c-fn.sml]
2021-05-10T23:26:04.1657726Z [parsing $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/conventions/sparc-c-fn.sml]
2021-05-10T23:26:04.1692787Z [compiling $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/conventions/c-loc-kind.sml]
2021-05-10T23:26:04.1694128Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/staged-alloc/conventions/.cm/GUID]
2021-05-10T23:26:04.1716098Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/staged-alloc/conventions/.cm/amd64-unix]
2021-05-10T23:26:04.1716969Z [code: 116, data: 20, env: 221 bytes]
2021-05-10T23:26:04.1718001Z [compiling $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/allocator/staged-allocation-sig.sml]
2021-05-10T23:26:04.1719598Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/staged-alloc/allocator/.cm/GUID]
2021-05-10T23:26:04.1765229Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/staged-alloc/allocator/.cm/amd64-unix]
2021-05-10T23:26:04.1766060Z [code: 113, data: 1, env: 1999 bytes]
2021-05-10T23:26:04.1770315Z [compiling $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/conventions/x86-c-fn.sml]
2021-05-10T23:26:04.1955252Z [code: 4593, data: 1, env: 2300 bytes]
2021-05-10T23:26:04.1963920Z [compiling $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/allocator/staged-allocation-fn.sml]
2021-05-10T23:26:04.2071469Z MLRISC/staged-alloc/allocator/staged-allocation-fn.sml:246.10-246.54 Warning: binding not exhaustive
2021-05-10T23:26:04.2078631Z           (SOME loc,store) = ...
2021-05-10T23:26:04.2079750Z MLRISC/staged-alloc/allocator/staged-allocation-fn.sml:153.8-153.62 Warning: binding not exhaustive
2021-05-10T23:26:04.2080696Z           (SOME loc,store') = ...
2021-05-10T23:26:04.2081750Z MLRISC/staged-alloc/allocator/staged-allocation-fn.sml:189.10-189.61 Warning: binding not exhaustive
2021-05-10T23:26:04.2082543Z           (SOME loc,store) = ...
2021-05-10T23:26:04.2083532Z MLRISC/staged-alloc/allocator/staged-allocation-fn.sml:215.11-216.70 Warning: binding not exhaustive
2021-05-10T23:26:04.2084442Z           (SOME loc',store) = ...
2021-05-10T23:26:04.2085653Z MLRISC/staged-alloc/allocator/staged-allocation-fn.sml:227.10-227.61 Warning: binding not exhaustive
2021-05-10T23:26:04.2086448Z           (SOME loc,store) = ...
2021-05-10T23:26:04.2087433Z MLRISC/staged-alloc/allocator/staged-allocation-fn.sml:238.10-238.61 Warning: binding not exhaustive
2021-05-10T23:26:04.2088220Z           (SOME loc,store) = ...
2021-05-10T23:26:04.2546518Z [code: 17054, data: 1454, env: 2837 bytes]
2021-05-10T23:26:04.2558710Z [compiling $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/conventions/sparc-c-fn.sml]
2021-05-10T23:26:04.2761961Z [code: 4737, data: 1, env: 2376 bytes]
2021-05-10T23:26:04.2772228Z [compiling $OTHER-MLRISC/(StagedAlloc.cm):../staged-alloc/conventions/x86-64-c-fn.sml]
2021-05-10T23:26:04.3007963Z [code: 6841, data: 1, env: 2567 bytes]
2021-05-10T23:26:04.3016051Z [stabilizing $OTHER-MLRISC/StagedAlloc.cm]
2021-05-10T23:26:04.3169233Z [code: 33454, data: 1478, inlinable: 0, env: 8374 bytes]
2021-05-10T23:26:04.3206397Z [scanning $OTHER-MLRISC/CCall.cm]
2021-05-10T23:26:04.3211186Z [parsing $OTHER-MLRISC/(CCall.cm):../c-call/gen/c-call-gen-sig.sml]
2021-05-10T23:26:04.3220167Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/c-call/gen/.cm/SKEL]
2021-05-10T23:26:04.3222916Z [parsing $OTHER-MLRISC/(CCall.cm):../c-call/gen/c-call-sig.sml]
2021-05-10T23:26:04.3253189Z [parsing $OTHER-MLRISC/(CCall.cm):../c-call/gen/c-call-gen-fn.sml]
2021-05-10T23:26:04.3342092Z [parsing $OTHER-MLRISC/(CCall.cm):../c-call/gen/c-type.sml]
2021-05-10T23:26:04.3375570Z [compiling $OTHER-MLRISC/(CCall.cm):../c-call/gen/c-type.sml]
2021-05-10T23:26:04.3376688Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/c-call/gen/.cm/GUID]
2021-05-10T23:26:04.3438352Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/c-call/gen/.cm/amd64-unix]
2021-05-10T23:26:04.3439130Z [code: 1007, data: 23, env: 989 bytes]
2021-05-10T23:26:04.3442877Z [compiling $OTHER-MLRISC/(CCall.cm):../c-call/gen/c-call-gen-sig.sml]
2021-05-10T23:26:04.3495206Z [code: 89, data: 1, env: 2233 bytes]
2021-05-10T23:26:04.3499951Z [compiling $OTHER-MLRISC/(CCall.cm):../c-call/gen/c-call-gen-fn.sml]
2021-05-10T23:26:04.3594351Z MLRISC/c-call/gen/c-call-gen-fn.sml:224.7-224.82 Warning: binding not exhaustive
2021-05-10T23:26:04.3595730Z           ((resultReg  as GPR (REG (_,tmp))) :: nil,copyResult') = ...
2021-05-10T23:26:04.3596661Z MLRISC/c-call/gen/c-call-gen-fn.sml:237.7-237.83 Warning: binding not exhaustive
2021-05-10T23:26:04.3600415Z           ((resultReg  as FPR (FREG (_,tmp))) :: nil,copyResult') = ...
2021-05-10T23:26:04.3601572Z MLRISC/c-call/gen/c-call-gen-fn.sml:244.10-253.7 Warning: match nonexhaustive
2021-05-10T23:26:04.3602342Z           ((GPR e1 :: nil,instrs1),(GPR e2 :: nil,instrs2)) => ...
2021-05-10T23:26:04.3602768Z
2021-05-10T23:26:04.4561757Z [code: 31924, data: 388, env: 2594 bytes]
2021-05-10T23:26:04.4570668Z [compiling $OTHER-MLRISC/(CCall.cm):../c-call/gen/c-call-sig.sml]
2021-05-10T23:26:04.4617131Z [code: 89, data: 1, env: 1492 bytes]
2021-05-10T23:26:04.4624754Z [stabilizing $OTHER-MLRISC/CCall.cm]
2021-05-10T23:26:04.4711329Z [code: 33109, data: 413, inlinable: 0, env: 6396 bytes]
2021-05-10T23:26:04.4748364Z [scanning $OTHER-MLRISC/CCall-x86-64.cm]
2021-05-10T23:26:04.4765364Z [parsing $OTHER-MLRISC/(CCall-x86-64.cm):../c-call/archs/x86-64-svid-fn.sml]
2021-05-10T23:26:04.4813110Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/c-call/archs/.cm/SKEL]
2021-05-10T23:26:04.4815943Z [parsing $OTHER-MLRISC/(CCall-x86-64.cm):../c-call/archs/x86-64-c-sizes.sml]
2021-05-10T23:26:04.4868747Z [compiling $OTHER-MLRISC/(CCall-x86-64.cm):../c-call/archs/x86-64-c-sizes.sml]
2021-05-10T23:26:04.4869943Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/c-call/archs/.cm/GUID]
2021-05-10T23:26:04.4990478Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/c-call/archs/.cm/amd64-unix]
2021-05-10T23:26:04.4991284Z [code: 3676, data: 108, env: 424 bytes]
2021-05-10T23:26:04.4992181Z [compiling $OTHER-MLRISC/(CCall-x86-64.cm):../c-call/archs/x86-64-svid-fn.sml]
2021-05-10T23:26:04.5025348Z MLRISC/c-call/archs/x86-64-svid-fn.sml:84.9-84.50 Warning: type vars not generalized because of
2021-05-10T23:26:04.5026141Z    value restriction are instantiated to dummy types (X1,X2,...)
2021-05-10T23:26:04.5151519Z MLRISC/c-call/archs/x86-64-svid-fn.sml:105.9-107.72 Warning: match nonexhaustive
2021-05-10T23:26:04.5152185Z           (C_float | C_double | C_long_double) => ...
2021-05-10T23:26:04.5152675Z           (C_ARRAY _ | C_STRUCT _ | C_UNION _) => ...
2021-05-10T23:26:04.5153114Z           (C_unsigned _ | C_signed _ | C_PTR) => ...
2021-05-10T23:26:04.5153490Z
2021-05-10T23:26:04.5897458Z [code: 27322, data: 450, env: 5138 bytes]
2021-05-10T23:26:04.5912757Z [stabilizing $OTHER-MLRISC/CCall-x86-64.cm]
2021-05-10T23:26:04.5993416Z [code: 30998, data: 558, inlinable: 0, env: 7069 bytes]
2021-05-10T23:26:04.6036723Z [scanning $OTHER-MLRISC/CCall-x86.cm]
2021-05-10T23:26:04.6046731Z [parsing $OTHER-MLRISC/(CCall-x86.cm):../c-call/archs/x86-svid-fn.sml]
2021-05-10T23:26:04.6108400Z [parsing $OTHER-MLRISC/(CCall-x86.cm):../c-call/archs/x86-c-sizes.sml]
2021-05-10T23:26:04.6137616Z [compiling $OTHER-MLRISC/(CCall-x86.cm):../c-call/archs/x86-c-sizes.sml]
2021-05-10T23:26:04.6256521Z [code: 3673, data: 105, env: 426 bytes]
2021-05-10T23:26:04.6262286Z [compiling $OTHER-MLRISC/(CCall-x86.cm):../c-call/archs/x86-svid-fn.sml]
2021-05-10T23:26:04.6399723Z MLRISC/c-call/archs/x86-svid-fn.sml:71.9-72.88 Warning: match nonexhaustive
2021-05-10T23:26:04.6400424Z           (C_float | C_double | C_long_double) => ...
2021-05-10T23:26:04.6400933Z           (C_unsigned _ | C_signed _ | C_PTR | C_ARRAY _) => ...
2021-05-10T23:26:04.6401316Z
2021-05-10T23:26:04.6999385Z [code: 22560, data: 248, env: 3798 bytes]
2021-05-10T23:26:04.7010779Z [stabilizing $OTHER-MLRISC/CCall-x86.cm]
2021-05-10T23:26:04.7089535Z [code: 26233, data: 353, inlinable: 0, env: 5775 bytes]
2021-05-10T23:26:04.7127511Z [scanning $OTHER-MLRISC/CCall-sparc.cm]
2021-05-10T23:26:04.7144849Z [library $/SPARC.cm is stable]
2021-05-10T23:26:04.7145862Z [parsing $OTHER-MLRISC/(CCall-sparc.cm):../c-call/archs/sparc-c-sizes.sml]
2021-05-10T23:26:04.7167218Z [parsing $OTHER-MLRISC/(CCall-sparc.cm):../c-call/archs/sparc-c-call-fn.sml]
2021-05-10T23:26:04.7228480Z [compiling $OTHER-MLRISC/(CCall-sparc.cm):../c-call/archs/sparc-c-sizes.sml]
2021-05-10T23:26:04.7322345Z [code: 2757, data: 69, env: 210 bytes]
2021-05-10T23:26:04.7327647Z [compiling $OTHER-MLRISC/(CCall-sparc.cm):../c-call/archs/sparc-c-call-fn.sml]
2021-05-10T23:26:04.7451084Z MLRISC/c-call/archs/sparc-c-call-fn.sml:80.9-82.59 Warning: match nonexhaustive
2021-05-10T23:26:04.7451893Z           (C_float | C_double | C_long_double) => ...
2021-05-10T23:26:04.7452524Z           (C_unsigned _ | C_signed _ | C_PTR | C_ARRAY _ | C_STRUCT _ |
2021-05-10T23:26:04.7453033Z            C_UNION _) => ...
2021-05-10T23:26:04.7453388Z
2021-05-10T23:26:04.7977113Z [code: 19669, data: 269, env: 3691 bytes]
2021-05-10T23:26:04.7988298Z [stabilizing $OTHER-MLRISC/CCall-sparc.cm]
2021-05-10T23:26:04.8062077Z [code: 22426, data: 338, inlinable: 0, env: 5446 bytes]
2021-05-10T23:26:04.8099359Z [scanning $OTHER-MLRISC/CCall-Vararg.cm]
2021-05-10T23:26:04.8103384Z [parsing $OTHER-MLRISC/(CCall-Vararg.cm):../c-call/varargs/call/vararg-constants.sml]
2021-05-10T23:26:04.8116338Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/c-call/varargs/call/.cm/SKEL]
2021-05-10T23:26:04.8119069Z [parsing $OTHER-MLRISC/(CCall-Vararg.cm):../c-call/varargs/call/vararg.sml]
2021-05-10T23:26:04.8128744Z [compiling $OTHER-MLRISC/(CCall-Vararg.cm):../c-call/varargs/call/vararg-constants.sml]
2021-05-10T23:26:04.8130089Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/c-call/varargs/call/.cm/GUID]
2021-05-10T23:26:04.8152798Z MLRISC/c-call/varargs/call/vararg-constants.sml:39.9-40.62 Warning: binding not exhaustive
2021-05-10T23:26:04.8153615Z           kindOffB ::
2021-05-10T23:26:04.8154190Z     widthOffB :: narrowingOffB :: locOffB :: offsetOffB :: argOffB :: nil = ...
2021-05-10T23:26:04.8155219Z MLRISC/c-call/varargs/call/vararg-constants.sml:13.6-13.60 Warning: binding not exhaustive
2021-05-10T23:26:04.8155914Z           GPR :: FPR :: STK :: FSTK :: nil = ...
2021-05-10T23:26:04.8225921Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/MLRISC/c-call/varargs/call/.cm/amd64-unix]
2021-05-10T23:26:04.8226752Z [code: 2631, data: 463, env: 1342 bytes]
2021-05-10T23:26:04.8230493Z [compiling $OTHER-MLRISC/(CCall-Vararg.cm):../c-call/varargs/call/vararg.sml]
2021-05-10T23:26:04.8253012Z [code: 108, data: 20, env: 510 bytes]
2021-05-10T23:26:04.8257579Z [stabilizing $OTHER-MLRISC/CCall-Vararg.cm]
2021-05-10T23:26:04.8280540Z [code: 2739, data: 483, inlinable: 0, env: 2879 bytes]
2021-05-10T23:26:04.8318830Z [scanning $/ckit-lib.cm]
2021-05-10T23:26:04.8319503Z [scanning $/(ckit-lib.cm):ast/group.cm]
2021-05-10T23:26:04.8326195Z [scanning $/(ckit-lib.cm):ast/(group.cm):../parser/group.cm]
2021-05-10T23:26:04.8333515Z [scanning $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):../variants/group.cm]
2021-05-10T23:26:04.8340459Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):../variants/(group.cm):parse-control-sig.sml]
2021-05-10T23:26:04.8344755Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/variants/.cm/SKEL]
2021-05-10T23:26:04.8348269Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):../variants/(group.cm):type-check-control-sig.sml]
2021-05-10T23:26:04.8373335Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):../variants/(group.cm):config-sig.sml]
2021-05-10T23:26:04.8378015Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):../variants/(group.cm):ansic/config.sml]
2021-05-10T23:26:04.8388488Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/variants/ansic/.cm/SKEL]
2021-05-10T23:26:04.8397794Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):util/old-pp.sml]
2021-05-10T23:26:04.8417696Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/util/.cm/SKEL]
2021-05-10T23:26:04.8421401Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):util/ascii.sml]
2021-05-10T23:26:04.8433186Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):util/sourcemap-sig.sml]
2021-05-10T23:26:04.8446583Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):util/sourcemap.sml]
2021-05-10T23:26:04.8475436Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):util/error-sig.sml]
2021-05-10T23:26:04.8505027Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):util/error.sml]
2021-05-10T23:26:04.8552832Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):grammar/tdefs.sml]
2021-05-10T23:26:04.8578580Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/grammar/.cm/SKEL]
2021-05-10T23:26:04.8581753Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):grammar/tokentable.sml]
2021-05-10T23:26:04.8607011Z [attempting to load plugin $/lex-ext.cm]
2021-05-10T23:26:04.8644262Z [plugin $/lex-ext.cm loaded successfully]
2021-05-10T23:26:04.8645494Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):grammar/c.lex.sml]
2021-05-10T23:26:04.9256995Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):parser-sig.sml]
2021-05-10T23:26:04.9258471Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/.cm/SKEL]
2021-05-10T23:26:04.9259717Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):parser.sml]
2021-05-10T23:26:04.9270819Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):parse-tree-sig.sml]
2021-05-10T23:26:04.9305838Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):parse-tree.sml]
2021-05-10T23:26:04.9330743Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):extensions/c/parse-tree-ext-sig.sml]
2021-05-10T23:26:04.9334340Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/extensions/c/.cm/SKEL]
2021-05-10T23:26:04.9337534Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):extensions/c/parse-tree-ext.sml]
2021-05-10T23:26:04.9342694Z [attempting to load plugin $/grm-ext.cm]
2021-05-10T23:26:04.9381758Z [plugin $/grm-ext.cm loaded successfully]
2021-05-10T23:26:04.9382657Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):grammar/c.grm.sig]
2021-05-10T23:26:04.9427886Z [parsing $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):grammar/c.grm.sml]
2021-05-10T23:26:05.0518661Z [parsing $/(ckit-lib.cm):ast/(group.cm):symbol-sig.sml]
2021-05-10T23:26:05.0527436Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/ast/.cm/SKEL]
2021-05-10T23:26:05.0528716Z [parsing $/(ckit-lib.cm):ast/(group.cm):symbol.sml]
2021-05-10T23:26:05.0572171Z [parsing $/(ckit-lib.cm):ast/(group.cm):uid-sig.sml]
2021-05-10T23:26:05.0575775Z [parsing $/(ckit-lib.cm):ast/(group.cm):uid-fn.sml]
2021-05-10T23:26:05.0582529Z [parsing $/(ckit-lib.cm):ast/(group.cm):aid.sml]
2021-05-10T23:26:05.0586706Z [parsing $/(ckit-lib.cm):ast/(group.cm):pid.sml]
2021-05-10T23:26:05.0590176Z [parsing $/(ckit-lib.cm):ast/(group.cm):tid.sml]
2021-05-10T23:26:05.0594191Z [parsing $/(ckit-lib.cm):ast/(group.cm):ast-sig.sml]
2021-05-10T23:26:05.0633058Z [parsing $/(ckit-lib.cm):ast/(group.cm):ast.sml]
2021-05-10T23:26:05.0676511Z [parsing $/(ckit-lib.cm):ast/(group.cm):ctype-eq.sml]
2021-05-10T23:26:05.0690516Z [parsing $/(ckit-lib.cm):ast/(group.cm):cnv-ext-sig.sml]
2021-05-10T23:26:05.0753215Z [parsing $/(ckit-lib.cm):ast/(group.cm):uidtabimp-sig.sml]
2021-05-10T23:26:05.0756657Z [parsing $/(ckit-lib.cm):ast/(group.cm):uidtabimp-fn.sml]
2021-05-10T23:26:05.0766746Z [parsing $/(ckit-lib.cm):ast/(group.cm):aidtab.sml]
2021-05-10T23:26:05.0771262Z [parsing $/(ckit-lib.cm):ast/(group.cm):pidtab.sml]
2021-05-10T23:26:05.0774744Z [parsing $/(ckit-lib.cm):ast/(group.cm):tidtab.sml]
2021-05-10T23:26:05.0778319Z [parsing $/(ckit-lib.cm):ast/(group.cm):tables.sml]
2021-05-10T23:26:05.0782059Z [parsing $/(ckit-lib.cm):ast/(group.cm):pp/pp-lib.sml]
2021-05-10T23:26:05.0813128Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/ast/pp/.cm/SKEL]
2021-05-10T23:26:05.0816399Z [parsing $/(ckit-lib.cm):ast/(group.cm):pp/pp-ast-sig.sml]
2021-05-10T23:26:05.0828026Z [parsing $/(ckit-lib.cm):ast/(group.cm):pp/pp-ast.sml]
2021-05-10T23:26:05.0835300Z [parsing $/(ckit-lib.cm):ast/(group.cm):pp/pp-ast-adornment-sig.sml]
2021-05-10T23:26:05.0841005Z [parsing $/(ckit-lib.cm):ast/(group.cm):pp/pp-ast-ext-sig.sml]
2021-05-10T23:26:05.0851195Z [parsing $/(ckit-lib.cm):ast/(group.cm):pp/pp-ast-fn.sml]
2021-05-10T23:26:05.1029609Z [parsing $/(ckit-lib.cm):ast/(group.cm):sizes-sig.sml]
2021-05-10T23:26:05.1030731Z [parsing $/(ckit-lib.cm):ast/(group.cm):sizes.sml]
2021-05-10T23:26:05.1062212Z [parsing $/(ckit-lib.cm):ast/(group.cm):sizeof-sig.sml]
2021-05-10T23:26:05.1070438Z [parsing $/(ckit-lib.cm):ast/(group.cm):sizeof.sml]
2021-05-10T23:26:05.1171359Z [parsing $/(ckit-lib.cm):ast/(group.cm):type-util-sig.sml]
2021-05-10T23:26:05.1201992Z [parsing $/(ckit-lib.cm):ast/(group.cm):type-util.sml]
2021-05-10T23:26:05.1481539Z [parsing $/(ckit-lib.cm):ast/(group.cm):bindings.sml]
2021-05-10T23:26:05.1492893Z [parsing $/(ckit-lib.cm):ast/(group.cm):state-sig.sml]
2021-05-10T23:26:05.1539039Z [parsing $/(ckit-lib.cm):ast/(group.cm):state.sml]
2021-05-10T23:26:05.1636558Z [parsing $/(ckit-lib.cm):ast/(group.cm):simplify-assign-ops.sml]
2021-05-10T23:26:05.1680742Z [parsing $/(ckit-lib.cm):ast/(group.cm):build-ast-sig.sml]
2021-05-10T23:26:05.1693374Z [parsing $/(ckit-lib.cm):ast/(group.cm):build-ast.sml]
2021-05-10T23:26:05.2960839Z [parsing $/(ckit-lib.cm):ast/(group.cm):anonymous-structs.sml]
2021-05-10T23:26:05.2990553Z [parsing $/(ckit-lib.cm):ast/(group.cm):initializer-normalizer-sig.sml]
2021-05-10T23:26:05.2993753Z [parsing $/(ckit-lib.cm):ast/(group.cm):initializer-normalizer.sml]
2021-05-10T23:26:05.3064162Z [parsing $/(ckit-lib.cm):ast/(group.cm):parse-to-ast-sig.sml]
2021-05-10T23:26:05.3079384Z [parsing $/(ckit-lib.cm):ast/(group.cm):parse-to-ast.sml]
2021-05-10T23:26:05.3089842Z [parsing $/(ckit-lib.cm):ast/(group.cm):extensions/c/ast-ext-sig.sml]
2021-05-10T23:26:05.3092515Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/ast/extensions/c/.cm/SKEL]
2021-05-10T23:26:05.3095041Z [parsing $/(ckit-lib.cm):ast/(group.cm):extensions/c/ast-ext.sml]
2021-05-10T23:26:05.3100687Z [parsing $/(ckit-lib.cm):ast/(group.cm):extensions/c/cnv-ext.sml]
2021-05-10T23:26:05.3129294Z [parsing $/(ckit-lib.cm):ast/(group.cm):extensions/c/pp-ast-ext-fn.sml]
2021-05-10T23:26:05.3285439Z [compiling $/(ckit-lib.cm):ast/(group.cm):uid-sig.sml]
2021-05-10T23:26:05.3286563Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/ast/.cm/GUID]
2021-05-10T23:26:05.3312173Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/ast/.cm/amd64-unix]
2021-05-10T23:26:05.3312909Z [code: 81, data: 1, env: 413 bytes]
2021-05-10T23:26:05.3315131Z [compiling $/(ckit-lib.cm):ast/(group.cm):uid-fn.sml]
2021-05-10T23:26:05.3376462Z [code: 1033, data: 1, env: 255 bytes]
2021-05-10T23:26:05.3380540Z [compiling $/(ckit-lib.cm):ast/(group.cm):pid.sml]
2021-05-10T23:26:05.3409782Z [code: 319, data: 23, env: 126 bytes]
2021-05-10T23:26:05.3410747Z [compiling $/(ckit-lib.cm):ast/(group.cm):extensions/c/ast-ext.sml]
2021-05-10T23:26:05.3411933Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/ast/extensions/c/.cm/GUID]
2021-05-10T23:26:05.3430971Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/ast/extensions/c/.cm/amd64-unix]
2021-05-10T23:26:05.3431749Z [code: 108, data: 20, env: 305 bytes]
2021-05-10T23:26:05.3434423Z [compiling $/(ckit-lib.cm):ast/(group.cm):tid.sml]
2021-05-10T23:26:05.3462157Z [code: 319, data: 23, env: 126 bytes]
2021-05-10T23:26:05.3466291Z [compiling $/(ckit-lib.cm):ast/(group.cm):symbol-sig.sml]
2021-05-10T23:26:05.3492317Z [code: 81, data: 1, env: 785 bytes]
2021-05-10T23:26:05.3494713Z [compiling $/(ckit-lib.cm):ast/(group.cm):symbol.sml]
2021-05-10T23:26:05.3607073Z [code: 2929, data: 1, env: 474 bytes]
2021-05-10T23:26:05.3610428Z [compiling $/(ckit-lib.cm):ast/(group.cm):aid.sml]
2021-05-10T23:26:05.3635470Z [code: 328, data: 32, env: 126 bytes]
2021-05-10T23:26:05.3645806Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):util/sourcemap-sig.sml]
2021-05-10T23:26:05.3647045Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/util/.cm/GUID]
2021-05-10T23:26:05.3671075Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/util/.cm/amd64-unix]
2021-05-10T23:26:05.3671861Z [code: 89, data: 1, env: 746 bytes]
2021-05-10T23:26:05.3676351Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):../variants/(group.cm):parse-control-sig.sml]
2021-05-10T23:26:05.3677699Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/variants/.cm/GUID]
2021-05-10T23:26:05.3697342Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/variants/.cm/amd64-unix]
2021-05-10T23:26:05.3699458Z [code: 97, data: 1, env: 521 bytes]
2021-05-10T23:26:05.3700590Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):../variants/(group.cm):type-check-control-sig.sml]
2021-05-10T23:26:05.3720816Z [code: 97, data: 1, env: 523 bytes]
2021-05-10T23:26:05.3730455Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):../variants/(group.cm):config-sig.sml]
2021-05-10T23:26:05.3749933Z [code: 89, data: 1, env: 137 bytes]
2021-05-10T23:26:05.3755146Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):../variants/(group.cm):ansic/config.sml]
2021-05-10T23:26:05.3756454Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/variants/ansic/.cm/GUID]
2021-05-10T23:26:05.3797816Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/variants/ansic/.cm/amd64-unix]
2021-05-10T23:26:05.3798616Z [code: 766, data: 62, env: 162 bytes]
2021-05-10T23:26:05.3801956Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):util/sourcemap.sml]
2021-05-10T23:26:05.4013502Z [code: 5600, data: 80, env: 514 bytes]
2021-05-10T23:26:05.4024888Z [compiling $/(ckit-lib.cm):ast/(group.cm):ast-sig.sml]
2021-05-10T23:26:05.4194744Z [code: 81, data: 1, env: 8210 bytes]
2021-05-10T23:26:05.4204514Z [compiling $/(ckit-lib.cm):ast/(group.cm):ast.sml]
2021-05-10T23:26:05.4274602Z [code: 92, data: 20, env: 4247 bytes]
2021-05-10T23:26:05.4288013Z [compiling $/(ckit-lib.cm):ast/(group.cm):bindings.sml]
2021-05-10T23:26:05.4323342Z [code: 100, data: 20, env: 1459 bytes]
2021-05-10T23:26:05.4336116Z [compiling $/(ckit-lib.cm):ast/(group.cm):uidtabimp-sig.sml]
2021-05-10T23:26:05.4350599Z [code: 81, data: 1, env: 365 bytes]
2021-05-10T23:26:05.4353391Z [compiling $/(ckit-lib.cm):ast/(group.cm):uidtabimp-fn.sml]
2021-05-10T23:26:05.4498388Z [code: 1966, data: 30, env: 1149 bytes]
2021-05-10T23:26:05.4499300Z [compiling $/(ckit-lib.cm):ast/(group.cm):tidtab.sml]
2021-05-10T23:26:05.4499818Z [code: 321, data: 1, env: 510 bytes]
2021-05-10T23:26:05.4500488Z [compiling $/(ckit-lib.cm):ast/(group.cm):aidtab.sml]
2021-05-10T23:26:05.4521292Z [code: 321, data: 1, env: 511 bytes]
2021-05-10T23:26:05.4531828Z [compiling $/(ckit-lib.cm):ast/(group.cm):tables.sml]
2021-05-10T23:26:05.4552650Z [code: 100, data: 20, env: 389 bytes]
2021-05-10T23:26:05.4556064Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):util/old-pp.sml]
2021-05-10T23:26:05.4852158Z [code: 7087, data: 119, env: 2053 bytes]
2021-05-10T23:26:05.4858344Z [compiling $/(ckit-lib.cm):ast/(group.cm):pp/pp-ast-adornment-sig.sml]
2021-05-10T23:26:05.4859704Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/ast/pp/.cm/GUID]
2021-05-10T23:26:05.4892739Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/ast/pp/.cm/amd64-unix]
2021-05-10T23:26:05.4893594Z [code: 97, data: 1, env: 1733 bytes]
2021-05-10T23:26:05.4903993Z [compiling $/(ckit-lib.cm):ast/(group.cm):pp/pp-ast-ext-sig.sml]
2021-05-10T23:26:05.4939286Z [code: 89, data: 1, env: 1969 bytes]
2021-05-10T23:26:05.4944717Z [compiling $/(ckit-lib.cm):ast/(group.cm):extensions/c/pp-ast-ext-fn.sml]
2021-05-10T23:26:05.5061662Z [code: 2329, data: 1, env: 191 bytes]
2021-05-10T23:26:05.5068963Z [compiling $/(ckit-lib.cm):ast/(group.cm):pp/pp-lib.sml]
2021-05-10T23:26:05.5644410Z [code: 18714, data: 42, env: 2670 bytes]
2021-05-10T23:26:05.5653292Z [compiling $/(ckit-lib.cm):ast/(group.cm):pp/pp-ast-sig.sml]
2021-05-10T23:26:05.5691298Z [code: 81, data: 1, env: 2293 bytes]
2021-05-10T23:26:05.5711803Z [compiling $/(ckit-lib.cm):ast/(group.cm):pp/pp-ast-fn.sml]
2021-05-10T23:26:05.9062939Z [code: 94064, data: 808, env: 2245 bytes]
2021-05-10T23:26:05.9072104Z [compiling $/(ckit-lib.cm):ast/(group.cm):pp/pp-ast.sml]
2021-05-10T23:26:05.9217922Z [code: 2724, data: 20, env: 2666 bytes]
2021-05-10T23:26:05.9232538Z [compiling $/(ckit-lib.cm):ast/(group.cm):sizes-sig.sml]
2021-05-10T23:26:05.9252759Z [code: 81, data: 1, env: 384 bytes]
2021-05-10T23:26:05.9255971Z [compiling $/(ckit-lib.cm):ast/(group.cm):sizes.sml]
2021-05-10T23:26:05.9281084Z [code: 134, data: 62, env: 377 bytes]
2021-05-10T23:26:05.9297888Z [compiling $/(ckit-lib.cm):ast/(group.cm):type-util-sig.sml]
2021-05-10T23:26:05.9345492Z [code: 81, data: 1, env: 2942 bytes]
2021-05-10T23:26:05.9353904Z [compiling $/(ckit-lib.cm):ast/(group.cm):type-util.sml]
2021-05-10T23:26:06.3277665Z [code: 60118, data: 862, env: 129 bytes]
2021-05-10T23:26:06.3284090Z [compiling $/(ckit-lib.cm):ast/(group.cm):sizeof-sig.sml]
2021-05-10T23:26:06.3324758Z [code: 81, data: 1, env: 2128 bytes]
2021-05-10T23:26:06.3336353Z [compiling $/(ckit-lib.cm):ast/(group.cm):sizeof.sml]
2021-05-10T23:26:06.3927629Z [code: 15265, data: 825, env: 63 bytes]
2021-05-10T23:26:06.3947983Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):extensions/c/parse-tree-ext.sml]
2021-05-10T23:26:06.3950455Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/extensions/c/.cm/GUID]
2021-05-10T23:26:06.3970520Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/extensions/c/.cm/amd64-unix]
2021-05-10T23:26:06.3972188Z [code: 124, data: 20, env: 424 bytes]
2021-05-10T23:26:06.3978834Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):parse-tree-sig.sml]
2021-05-10T23:26:06.3982348Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/.cm/GUID]
2021-05-10T23:26:06.4112833Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/.cm/amd64-unix]
2021-05-10T23:26:06.4113738Z [code: 89, data: 1, env: 7137 bytes]
2021-05-10T23:26:06.4119151Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):parse-tree.sml]
2021-05-10T23:26:06.4184018Z [code: 100, data: 20, env: 3634 bytes]
2021-05-10T23:26:06.4192613Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):util/error-sig.sml]
2021-05-10T23:26:06.4216465Z [code: 89, data: 1, env: 691 bytes]
2021-05-10T23:26:06.4221663Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):util/error.sml]
2021-05-10T23:26:06.4480050Z [code: 7625, data: 185, env: 343 bytes]
2021-05-10T23:26:06.4487708Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):parser-sig.sml]
2021-05-10T23:26:06.4511004Z [code: 81, data: 1, env: 157 bytes]
2021-05-10T23:26:06.4518132Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):grammar/tdefs.sml]
2021-05-10T23:26:06.4519320Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/grammar/.cm/GUID]
2021-05-10T23:26:06.4673291Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/parser/grammar/.cm/amd64-unix]
2021-05-10T23:26:06.4674105Z [code: 4467, data: 99, env: 331 bytes]
2021-05-10T23:26:06.4681643Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):grammar/c.grm.sig]
2021-05-10T23:26:06.4746478Z [code: 89, data: 1, env: 1847 bytes]
2021-05-10T23:26:06.4754452Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):grammar/c.grm.sml]
2021-05-10T23:26:08.4468172Z [code: 199037, data: 17077, env: 12795 bytes]
2021-05-10T23:26:08.4474725Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):grammar/tokentable.sml]
2021-05-10T23:26:08.4842593Z [code: 17020, data: 564, env: 502 bytes]
2021-05-10T23:26:08.4853000Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):grammar/c.lex.sml]
2021-05-10T23:26:09.0051371Z [code: 105339, data: 739, env: 3706 bytes]
2021-05-10T23:26:09.0103673Z [compiling $/(ckit-lib.cm):ast/(group.cm):../parser/(group.cm):parser.sml]
2021-05-10T23:26:09.0411937Z [code: 10075, data: 75, env: 49 bytes]
2021-05-10T23:26:09.0527132Z [compiling $/(ckit-lib.cm):ast/(group.cm):state-sig.sml]
2021-05-10T23:26:09.0550771Z [code: 81, data: 1, env: 5167 bytes]
2021-05-10T23:26:09.0567869Z [compiling $/(ckit-lib.cm):ast/(group.cm):state.sml]
2021-05-10T23:26:09.1281952Z [code: 14484, data: 476, env: 3303 bytes]
2021-05-10T23:26:09.1313692Z [compiling $/(ckit-lib.cm):ast/(group.cm):ctype-eq.sml]
2021-05-10T23:26:09.1543636Z [code: 4556, data: 20, env: 6743 bytes]
2021-05-10T23:26:09.1547783Z [compiling $/(ckit-lib.cm):ast/(group.cm):anonymous-structs.sml]
2021-05-10T23:26:09.1921632Z [code: 9802, data: 250, env: 1065 bytes]
2021-05-10T23:26:09.1922878Z [compiling $/(ckit-lib.cm):ast/(group.cm):cnv-ext-sig.sml]
2021-05-10T23:26:09.1961529Z [code: 81, data: 1, env: 5064 bytes]
2021-05-10T23:26:09.1972344Z [compiling $/(ckit-lib.cm):ast/(group.cm):extensions/c/cnv-ext.sml]
2021-05-10T23:26:09.2115061Z [code: 3139, data: 739, env: 4994 bytes]
2021-05-10T23:26:09.2120359Z [compiling $/(ckit-lib.cm):ast/(group.cm):simplify-assign-ops.sml]
2021-05-10T23:26:09.2471791Z [code: 11959, data: 23, env: 762 bytes]
2021-05-10T23:26:09.2481930Z [compiling $/(ckit-lib.cm):ast/(group.cm):initializer-normalizer-sig.sml]
2021-05-10T23:26:09.2504592Z [code: 97, data: 1, env: 498 bytes]
2021-05-10T23:26:09.2510154Z [compiling $/(ckit-lib.cm):ast/(group.cm):initializer-normalizer.sml]
2021-05-10T23:26:09.2835303Z [code: 8912, data: 496, env: 64 bytes]
2021-05-10T23:26:09.2845121Z [compiling $/(ckit-lib.cm):ast/(group.cm):build-ast-sig.sml]
2021-05-10T23:26:09.2877219Z [code: 81, data: 1, env: 1755 bytes]
2021-05-10T23:26:09.2913959Z [compiling $/(ckit-lib.cm):ast/(group.cm):build-ast.sml]
2021-05-10T23:26:10.5308800Z [code: 258809, data: 7737, env: 678 bytes]
2021-05-10T23:26:10.5316693Z [compiling $/(ckit-lib.cm):ast/(group.cm):parse-to-ast-sig.sml]
2021-05-10T23:26:10.5348578Z [code: 89, data: 1, env: 1540 bytes]
2021-05-10T23:26:10.5367225Z [compiling $/(ckit-lib.cm):ast/(group.cm):parse-to-ast.sml]
2021-05-10T23:26:10.5479504Z [code: 2629, data: 21, env: 1086 bytes]
2021-05-10T23:26:10.5502269Z [stabilizing $/ckit-lib.cm]
2021-05-10T23:26:10.6267664Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ckit/src/.cm/amd64-unix]
2021-05-10T23:26:10.6278002Z [code: 874797, data: 31637, inlinable: 0, env: 52038 bytes]
2021-05-10T23:26:10.6326085Z [scanning $/mlburg-tool.cm]
2021-05-10T23:26:10.6326908Z [parsing $/(mlburg-tool.cm):tool.sml]
2021-05-10T23:26:10.6331312Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-burg/tool/.cm/SKEL]
2021-05-10T23:26:10.6335376Z [compiling $/(mlburg-tool.cm):tool.sml]
2021-05-10T23:26:10.6336521Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-burg/tool/.cm/GUID]
2021-05-10T23:26:10.6382747Z [creating directory /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/ml-burg/tool/.cm/amd64-unix]
2021-05-10T23:26:10.6383498Z [code: 600, data: 64, env: 35 bytes]
2021-05-10T23:26:10.6384102Z [stabilizing $/mlburg-tool.cm]
2021-05-10T23:26:10.6386041Z [code: 600, data: 64, inlinable: 0, env: 383 bytes]
2021-05-10T23:26:10.6428376Z [scanning $/burg-ext.cm]
2021-05-10T23:26:10.6429052Z [parsing $/(burg-ext.cm):ext.sml]
2021-05-10T23:26:10.6434738Z [compiling $/(burg-ext.cm):ext.sml]
2021-05-10T23:26:10.6474503Z [code: 692, data: 36, env: 38 bytes]
2021-05-10T23:26:10.6475266Z [stabilizing $/burg-ext.cm]
2021-05-10T23:26:10.6478820Z [code: 692, data: 36, inlinable: 0, env: 377 bytes]
2021-05-10T23:26:10.6508137Z Building ml-ulex.
2021-05-10T23:26:10.6754802Z Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon May 10 23:25:33 2021]
2021-05-10T23:26:10.6778774Z [scanning sources.cm]
2021-05-10T23:26:10.6793947Z [library $/pp-lib.cm is stable]
2021-05-10T23:26:10.6798000Z [library $/ml-yacc-lib.cm is stable]
2021-05-10T23:26:10.6800726Z [scanning (sources.cm):../lib/ml-lpt-lib.cm]
2021-05-10T23:26:10.6843810Z [library $SMLNJ-BASIS/basis.cm is stable]
2021-05-10T23:26:10.6880616Z [library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
2021-05-10T23:26:10.6982874Z [library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
2021-05-10T23:26:10.6991375Z [scanning (sources.cm):../common/lpt-common.cm]
2021-05-10T23:26:10.6997955Z [library $/regexp-lib.cm is stable]
2021-05-10T23:26:10.6999908Z [parsing (sources.cm):../common/(lpt-common.cm):expand-file.sml]
2021-05-10T23:26:10.7022385Z [creating directory ../common/.cm/SKEL]
2021-05-10T23:26:10.7061110Z [parsing (sources.cm):FrontEnds/common/lex-spec.sml]
2021-05-10T23:26:10.7084922Z [creating directory FrontEnds/common/.cm/SKEL]
2021-05-10T23:26:10.7133587Z [parsing (sources.cm):FrontEnds/common/input-sig.sml]
2021-05-10T23:26:10.7138270Z [parsing (sources.cm):FrontEnds/ml-lex/ml-lex.lex.sml]
2021-05-10T23:26:10.7860908Z [creating directory FrontEnds/ml-lex/.cm/SKEL]
2021-05-10T23:26:10.7874467Z [parsing (sources.cm):FrontEnds/ml-lex/ml-lex.yacc.sig]
2021-05-10T23:26:10.7890444Z [parsing (sources.cm):FrontEnds/ml-lex/ml-lex.yacc.sml]
2021-05-10T23:26:10.8221927Z [parsing (sources.cm):FrontEnds/ml-lex/ml-lex-input.sml]
2021-05-10T23:26:10.8231014Z [parsing (sources.cm):FrontEnds/ml-ulex/ml-ulex-input.sml]
2021-05-10T23:26:10.8238199Z [creating directory FrontEnds/ml-ulex/.cm/SKEL]
2021-05-10T23:26:10.8242426Z [parsing (sources.cm):FrontEnds/ml-ulex/ml-ulex.lex.sml]
2021-05-10T23:26:10.8478392Z [parsing (sources.cm):FrontEnds/ml-ulex/ml-ulex.grm.sml]
2021-05-10T23:26:10.8957429Z [parsing (sources.cm):BackEnds/lex-output-spec.sml]
2021-05-10T23:26:10.8961685Z [creating directory BackEnds/.cm/SKEL]
2021-05-10T23:26:10.8965395Z [parsing (sources.cm):BackEnds/output-sig.sml]
2021-05-10T23:26:10.8971103Z [parsing (sources.cm):BackEnds/Dot/dot-output.sml]
2021-05-10T23:26:10.9123824Z [creating directory BackEnds/Dot/.cm/SKEL]
2021-05-10T23:26:10.9127681Z [parsing (sources.cm):BackEnds/Dump/dump-output.sml]
2021-05-10T23:26:10.9167328Z [creating directory BackEnds/Dump/.cm/SKEL]
2021-05-10T23:26:10.9168068Z [parsing (sources.cm):BackEnds/Match/match.sml]
2021-05-10T23:26:10.9168727Z [creating directory BackEnds/Match/.cm/SKEL]
2021-05-10T23:26:10.9169363Z [parsing (sources.cm):BackEnds/SML/ml.sml]
2021-05-10T23:26:10.9239382Z [creating directory BackEnds/SML/.cm/SKEL]
2021-05-10T23:26:10.9242030Z [parsing (sources.cm):BackEnds/SML/sml-output-support.sml]
2021-05-10T23:26:10.9277112Z [parsing (sources.cm):BackEnds/SML/sml-fun-output.sml]
2021-05-10T23:26:10.9329097Z [parsing (sources.cm):BackEnds/SML/sml-tbl-output.sml]
2021-05-10T23:26:10.9351461Z [parsing (sources.cm):BackEnds/SML/smlnj-templates.sml]
2021-05-10T23:26:10.9355478Z [parsing (sources.cm):lex-gen.sml]
2021-05-10T23:26:10.9419825Z [creating directory .cm/SKEL]
2021-05-10T23:26:10.9422822Z [parsing (sources.cm):reg-exp-sig.sml]
2021-05-10T23:26:10.9459101Z [parsing (sources.cm):reg-exp.sml]
2021-05-10T23:26:10.9578213Z [parsing (sources.cm):main.sml]
2021-05-10T23:26:10.9613586Z [parsing (sources.cm):options.sml]
2021-05-10T23:26:10.9657370Z [library $SMLNJ-ML-YACC-LIB/ml-yacc-lib.cm is stable]
2021-05-10T23:26:10.9692515Z [library $SMLNJ-LIB/PP/pp-lib.cm is stable]
2021-05-10T23:26:10.9742460Z [compiling (sources.cm):options.sml]
2021-05-10T23:26:10.9743020Z [creating directory .cm/GUID]
2021-05-10T23:26:10.9822213Z [creating directory .cm/amd64-unix]
2021-05-10T23:26:10.9822802Z [code: 2829, data: 253, env: 553 bytes]
2021-05-10T23:26:10.9823494Z [compiling (sources.cm):reg-exp-sig.sml]
2021-05-10T23:26:10.9843510Z [code: 73, data: 1, env: 959 bytes]
2021-05-10T23:26:10.9853407Z [compiling (sources.cm):reg-exp.sml]
2021-05-10T23:26:11.1188240Z [code: 36618, data: 562, env: 912 bytes]
2021-05-10T23:26:11.1198254Z [compiling (sources.cm):BackEnds/SML/ml.sml]
2021-05-10T23:26:11.1198911Z [creating directory BackEnds/SML/.cm/GUID]
2021-05-10T23:26:11.2109443Z [creating directory BackEnds/SML/.cm/amd64-unix]
2021-05-10T23:26:11.2113209Z [code: 36015, data: 183, env: 2041 bytes]
2021-05-10T23:26:11.2114163Z [compiling (sources.cm):BackEnds/lex-output-spec.sml]
2021-05-10T23:26:11.2114889Z [creating directory BackEnds/.cm/GUID]
2021-05-10T23:26:11.2143167Z [creating directory BackEnds/.cm/amd64-unix]
2021-05-10T23:26:11.2143795Z [code: 257, data: 1, env: 868 bytes]
2021-05-10T23:26:11.2147843Z [compiling (sources.cm):../common/(lpt-common.cm):expand-file.sml]
2021-05-10T23:26:11.2148705Z [creating directory ../common/.cm/GUID]
2021-05-10T23:26:11.2320005Z [creating directory ../common/.cm/amd64-unix]
2021-05-10T23:26:11.2320565Z [code: 5734, data: 334, env: 437 bytes]
2021-05-10T23:26:11.2326714Z [compiling (sources.cm):BackEnds/SML/smlnj-templates.sml]
2021-05-10T23:26:11.2343820Z [code: 447, data: 87, env: 104 bytes]
2021-05-10T23:26:11.2353503Z [compiling (sources.cm):BackEnds/SML/sml-output-support.sml]
2021-05-10T23:26:11.2651486Z [code: 9555, data: 499, env: 2291 bytes]
2021-05-10T23:26:11.2654908Z [compiling (sources.cm):BackEnds/output-sig.sml]
2021-05-10T23:26:11.2665879Z [code: 81, data: 1, env: 161 bytes]
2021-05-10T23:26:11.2679160Z [compiling (sources.cm):BackEnds/SML/sml-tbl-output.sml]
2021-05-10T23:26:11.2949312Z [code: 11415, data: 303, env: 55 bytes]
2021-05-10T23:26:11.2954294Z [compiling (sources.cm):BackEnds/Match/match.sml]
2021-05-10T23:26:11.2955031Z [creating directory BackEnds/Match/.cm/GUID]
2021-05-10T23:26:11.3055069Z [creating directory BackEnds/Match/.cm/amd64-unix]
2021-05-10T23:26:11.3055653Z [code: 3122, data: 98, env: 48 bytes]
2021-05-10T23:26:11.3061236Z [compiling (sources.cm):BackEnds/SML/sml-fun-output.sml]
2021-05-10T23:26:11.3582236Z [code: 18790, data: 550, env: 55 bytes]
2021-05-10T23:26:11.3588156Z [compiling (sources.cm):FrontEnds/common/lex-spec.sml]
2021-05-10T23:26:11.3588847Z [creating directory FrontEnds/common/.cm/GUID]
2021-05-10T23:26:11.3749100Z [creating directory FrontEnds/common/.cm/amd64-unix]
2021-05-10T23:26:11.3749934Z [code: 4088, data: 200, env: 1344 bytes]
2021-05-10T23:26:11.3758856Z [loading (sources.cm):../lib/(ml-lpt-lib.cm):antlr-stream-pos.sml]
2021-05-10T23:26:11.3768338Z [loading (sources.cm):../lib/(ml-lpt-lib.cm):antlr-lexer-sig.sml]
2021-05-10T23:26:11.3780526Z [loading (sources.cm):../lib/(ml-lpt-lib.cm):antlr-tokens-sig.sml]
2021-05-10T23:26:11.3791522Z [loading (sources.cm):../lib/(ml-lpt-lib.cm):repair.sml]
2021-05-10T23:26:11.3812601Z [loading (sources.cm):../lib/(ml-lpt-lib.cm):wrapped-strm.sml]
2021-05-10T23:26:11.3829738Z [loading (sources.cm):../lib/(ml-lpt-lib.cm):err-handler.sml]
2021-05-10T23:26:11.3841684Z [loading (sources.cm):../lib/(ml-lpt-lib.cm):ebnf.sml]
2021-05-10T23:26:11.3852969Z [compiling (sources.cm):FrontEnds/ml-ulex/ml-ulex.grm.sml]
2021-05-10T23:26:11.3855187Z [creating directory FrontEnds/ml-ulex/.cm/GUID]
2021-05-10T23:26:11.6679652Z [creating directory FrontEnds/ml-ulex/.cm/amd64-unix]
2021-05-10T23:26:11.6680357Z [code: 64966, data: 486, env: 4614 bytes]
2021-05-10T23:26:11.6692226Z [loading (sources.cm):../lib/(ml-lpt-lib.cm):ulex-buffer.sml]
2021-05-10T23:26:11.6712557Z [compiling (sources.cm):FrontEnds/ml-ulex/ml-ulex.lex.sml]
2021-05-10T23:26:11.8806850Z [code: 38984, data: 3464, env: 1544 bytes]
2021-05-10T23:26:11.8808245Z [compiling (sources.cm):FrontEnds/common/input-sig.sml]
2021-05-10T23:26:11.8820745Z [code: 81, data: 1, env: 141 bytes]
2021-05-10T23:26:11.8835424Z [compiling (sources.cm):FrontEnds/ml-ulex/ml-ulex-input.sml]
2021-05-10T23:26:11.8996612Z [code: 5571, data: 51, env: 55 bytes]
2021-05-10T23:26:11.9003264Z [compiling (sources.cm):lex-gen.sml]
2021-05-10T23:26:11.9039709Z lex-gen.sml:262.19-265.40 Warning: match nonexhaustive
2021-05-10T23:26:11.9040479Z           ("""","""") => ...
2021-05-10T23:26:11.9040841Z           (hdr,"""") => ...
2021-05-10T23:26:11.9041198Z           ("""",name) => ...
2021-05-10T23:26:11.9041544Z
2021-05-10T23:26:11.9607973Z [code: 22781, data: 229, env: 103 bytes]
2021-05-10T23:26:11.9616400Z [compiling (sources.cm):BackEnds/Dot/dot-output.sml]
2021-05-10T23:26:11.9617169Z [creating directory BackEnds/Dot/.cm/GUID]
2021-05-10T23:26:11.9897669Z [creating directory BackEnds/Dot/.cm/amd64-unix]
2021-05-10T23:26:11.9898375Z [code: 10025, data: 217, env: 52 bytes]
2021-05-10T23:26:11.9899232Z [compiling (sources.cm):BackEnds/Dump/dump-output.sml]
2021-05-10T23:26:11.9899957Z [creating directory BackEnds/Dump/.cm/GUID]
2021-05-10T23:26:12.0052172Z [creating directory BackEnds/Dump/.cm/amd64-unix]
2021-05-10T23:26:12.0052756Z [code: 5418, data: 106, env: 53 bytes]
2021-05-10T23:26:12.0058071Z [compiling (sources.cm):FrontEnds/ml-lex/ml-lex.yacc.sig]
2021-05-10T23:26:12.0058951Z [creating directory FrontEnds/ml-lex/.cm/GUID]
2021-05-10T23:26:12.0092361Z [creating directory FrontEnds/ml-lex/.cm/amd64-unix]
2021-05-10T23:26:12.0092962Z [code: 89, data: 1, env: 1031 bytes]
2021-05-10T23:26:12.0097324Z [compiling (sources.cm):FrontEnds/ml-lex/ml-lex.yacc.sml]
2021-05-10T23:26:12.2105029Z [code: 52430, data: 2614, env: 1835 bytes]
2021-05-10T23:26:12.2106433Z [compiling (sources.cm):FrontEnds/ml-lex/ml-lex.lex.sml]
2021-05-10T23:26:12.6123524Z [code: 86020, data: 484, env: 4010 bytes]
2021-05-10T23:26:12.6176570Z [compiling (sources.cm):FrontEnds/ml-lex/ml-lex-input.sml]
2021-05-10T23:26:12.6492045Z [code: 6268, data: 52, env: 54 bytes]
2021-05-10T23:26:12.6536843Z [compiling (sources.cm):main.sml]
2021-05-10T23:26:12.6924419Z [code: 10410, data: 290, env: 876 bytes]
2021-05-10T23:26:12.6925547Z [scanning 4320-export.cm]
2021-05-10T23:26:12.6926175Z [scanning (4320-export.cm):sources.cm]
2021-05-10T23:26:12.6926919Z [scanning (4320-export.cm):(sources.cm):../lib/ml-lpt-lib.cm]
2021-05-10T23:26:12.6927736Z [scanning (4320-export.cm):(sources.cm):../common/lpt-common.cm]
2021-05-10T23:26:12.6928503Z [parsing (4320-export.cm):4320-export.sml]
2021-05-10T23:26:12.7018297Z [compiling (4320-export.cm):4320-export.sml]
2021-05-10T23:26:12.7044584Z [code: 341, data: 29, env: 39 bytes]
2021-05-10T23:26:12.7451730Z Building ml-antlr.
2021-05-10T23:26:12.7691185Z Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon May 10 23:25:33 2021]
2021-05-10T23:26:12.7713042Z [scanning sources.cm]
2021-05-10T23:26:12.7721430Z [library $/pp-lib.cm is stable]
2021-05-10T23:26:12.7736362Z [library $/ml-lpt-lib.cm is stable]
2021-05-10T23:26:12.7749157Z [library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
2021-05-10T23:26:12.7751786Z [scanning (sources.cm):../common/lpt-common.cm]
2021-05-10T23:26:12.7757884Z [library $/regexp-lib.cm is stable]
2021-05-10T23:26:12.7790176Z [library $SMLNJ-BASIS/basis.cm is stable]
2021-05-10T23:26:12.7825145Z [library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
2021-05-10T23:26:12.7951531Z [parsing (sources.cm):BackEnds/back-end-sig.sml]
2021-05-10T23:26:12.7953068Z [creating directory BackEnds/.cm/SKEL]
2021-05-10T23:26:12.7954176Z [parsing (sources.cm):action.sml]
2021-05-10T23:26:12.7987722Z [creating directory .cm/SKEL]
2021-05-10T23:26:12.7989486Z [parsing (sources.cm):check-grammar.sml]
2021-05-10T23:26:12.8116333Z [parsing (sources.cm):compute-predict.sml]
2021-05-10T23:26:12.8149670Z [parsing (sources.cm):err.sml]
2021-05-10T23:26:12.8167380Z [parsing (sources.cm):gla.sml]
2021-05-10T23:26:12.8295177Z [parsing (sources.cm):item.sml]
2021-05-10T23:26:12.8312236Z [parsing (sources.cm):llk-spec.sml]
2021-05-10T23:26:12.8326479Z [parsing (sources.cm):main.sml]
2021-05-10T23:26:12.8349209Z [parsing (sources.cm):nonterm.sml]
2021-05-10T23:26:12.8368378Z [parsing (sources.cm):options.sml]
2021-05-10T23:26:12.8375305Z [parsing (sources.cm):predict.sml]
2021-05-10T23:26:12.8383693Z [parsing (sources.cm):preitem.sml]
2021-05-10T23:26:12.8392595Z [parsing (sources.cm):prod.sml]
2021-05-10T23:26:12.8412748Z [parsing (sources.cm):token.sml]
2021-05-10T23:26:12.8426646Z [parsing (sources.cm):FrontEnds/grammar-syntax.sml]
2021-05-10T23:26:12.8439282Z [creating directory FrontEnds/.cm/SKEL]
2021-05-10T23:26:12.8442770Z [parsing (sources.cm):FrontEnds/ml-antlr-based/parse-file.sml]
2021-05-10T23:26:12.8452375Z [creating directory FrontEnds/ml-antlr-based/.cm/SKEL]
2021-05-10T23:26:12.8455503Z [parsing (sources.cm):FrontEnds/ml-antlr-based/spec.lex.sml]
2021-05-10T23:26:12.8809577Z [parsing (sources.cm):FrontEnds/ml-antlr-based/spec.grm.sml]
2021-05-10T23:26:12.9419099Z [parsing (sources.cm):BackEnds/SML/ml.sml]
2021-05-10T23:26:12.9419771Z [creating directory BackEnds/SML/.cm/SKEL]
2021-05-10T23:26:12.9420411Z [parsing (sources.cm):BackEnds/SML/abs.sml]
2021-05-10T23:26:12.9449243Z [parsing (sources.cm):BackEnds/SML/pp.sml]
2021-05-10T23:26:12.9600253Z [parsing (sources.cm):BackEnds/SML/sml-output.sml]
2021-05-10T23:26:12.9769675Z [parsing (sources.cm):BackEnds/SML/smlnj-template.sml]
2021-05-10T23:26:12.9773498Z [parsing (sources.cm):BackEnds/LaTeX/latex-output.sml]
2021-05-10T23:26:12.9818068Z [creating directory BackEnds/LaTeX/.cm/SKEL]
2021-05-10T23:26:12.9821189Z [parsing (sources.cm):BackEnds/LaTeX/smlnj-template.sml]
2021-05-10T23:26:12.9946711Z [library $SMLNJ-LIB/PP/pp-lib.cm is stable]
2021-05-10T23:26:12.9982132Z [compiling (sources.cm):err.sml]
2021-05-10T23:26:12.9982638Z [creating directory .cm/GUID]
2021-05-10T23:26:13.0218303Z [creating directory .cm/amd64-unix]
2021-05-10T23:26:13.0220680Z [code: 8301, data: 157, env: 920 bytes]
2021-05-10T23:26:13.0221268Z [compiling (sources.cm):action.sml]
2021-05-10T23:26:13.0286469Z [code: 1068, data: 20, env: 525 bytes]
2021-05-10T23:26:13.0289552Z [compiling (sources.cm):llk-spec.sml]
2021-05-10T23:26:13.0330742Z [code: 84, data: 20, env: 2286 bytes]
2021-05-10T23:26:13.0335585Z [compiling (sources.cm):nonterm.sml]
2021-05-10T23:26:13.0763113Z [code: 6789, data: 37, env: 2158 bytes]
2021-05-10T23:26:13.0763714Z [compiling (sources.cm):token.sml]
2021-05-10T23:26:13.0945941Z [code: 4578, data: 50, env: 1579 bytes]
2021-05-10T23:26:13.0955722Z [compiling (sources.cm):preitem.sml]
2021-05-10T23:26:13.1083103Z [code: 4665, data: 57, env: 388 bytes]
2021-05-10T23:26:13.1090216Z [compiling (sources.cm):BackEnds/SML/abs.sml]
2021-05-10T23:26:13.1090803Z [creating directory BackEnds/SML/.cm/GUID]
2021-05-10T23:26:13.1167968Z [creating directory BackEnds/SML/.cm/amd64-unix]
2021-05-10T23:26:13.1168523Z [code: 92, data: 20, env: 4391 bytes]
2021-05-10T23:26:13.1174912Z [compiling (sources.cm):BackEnds/SML/pp.sml]
2021-05-10T23:26:13.1271203Z BackEnds/SML/pp.sml:257.9-431.35 Warning: match nonexhaustive
2021-05-10T23:26:13.1271742Z           ML_Var x => ...
2021-05-10T23:26:13.1272062Z           ML_Int n => ...
2021-05-10T23:26:13.1272439Z           ML_Cmp (cop,e1,e2) => ...
2021-05-10T23:26:13.1272838Z           ML_Bool (bop,e1,e2) => ...
2021-05-10T23:26:13.1273240Z           ML_Case (arg,pl) => ...
2021-05-10T23:26:13.1273618Z           ML_App (f,args) => ...
2021-05-10T23:26:13.1273999Z           ML_If (e1,e2,e3 as ML_If _) => ...
2021-05-10T23:26:13.1274410Z           ML_If (e1,e2,e3) => ...
2021-05-10T23:26:13.1274766Z           ML_Let (x,e1,e2) => ...
2021-05-10T23:26:13.1275146Z           ML_Funs (nil,e) => ...
2021-05-10T23:26:13.1275722Z           ML_Funs ((f,params,body) :: fs,e) => ...
2021-05-10T23:26:13.1276146Z           ML_Seq nil => ...
2021-05-10T23:26:13.1276521Z           ML_Seq (e :: nil) => ...
2021-05-10T23:26:13.1276912Z           ML_Seq (e :: r) => ...
2021-05-10T23:26:13.1277258Z           ML_Tuple nil => ...
2021-05-10T23:26:13.1277657Z           ML_Tuple (e :: r) => ...
2021-05-10T23:26:13.1278017Z           ML_List nil => ...
2021-05-10T23:26:13.1278383Z           ML_List (e :: r) => ...
2021-05-10T23:26:13.1278744Z           ML_RefGet e => ...
2021-05-10T23:26:13.1279115Z           ML_RefPut (e1,e2) => ...
2021-05-10T23:26:13.1279488Z           ML_Raw toks => ...
2021-05-10T23:26:13.1279863Z           ML_Handle (exp,cases) => ...
2021-05-10T23:26:13.1280217Z
2021-05-10T23:26:13.3084351Z [code: 65671, data: 479, env: 1380 bytes]
2021-05-10T23:26:13.3087982Z [compiling (sources.cm):BackEnds/SML/ml.sml]
2021-05-10T23:26:13.3161740Z [code: 417, data: 1, env: 4255 bytes]
2021-05-10T23:26:13.3166915Z [compiling (sources.cm):item.sml]
2021-05-10T23:26:13.3373643Z [code: 5346, data: 74, env: 1535 bytes]
2021-05-10T23:26:13.3379891Z [compiling (sources.cm):prod.sml]
2021-05-10T23:26:13.3608031Z [code: 6329, data: 33, env: 1717 bytes]
2021-05-10T23:26:13.3608614Z [compiling (sources.cm):options.sml]
2021-05-10T23:26:13.3652449Z [code: 1307, data: 91, env: 226 bytes]
2021-05-10T23:26:13.3653017Z [compiling (sources.cm):predict.sml]
2021-05-10T23:26:13.3676191Z predict.sml:29.15-33.40 Warning: match nonexhaustive
2021-05-10T23:26:13.3676689Z           (i,Pick a) => ...
2021-05-10T23:26:13.3677079Z           (i,ByTok branches) => ...
2021-05-10T23:26:13.3677426Z
2021-05-10T23:26:13.3738114Z [code: 2368, data: 64, env: 901 bytes]
2021-05-10T23:26:13.3744119Z [loading (sources.cm):../common/(lpt-common.cm):expand-file.sml]
2021-05-10T23:26:13.3747874Z [compiling (sources.cm):BackEnds/SML/smlnj-template.sml]
2021-05-10T23:26:13.3761796Z [code: 293, data: 45, env: 80 bytes]
2021-05-10T23:26:13.3785429Z [compiling (sources.cm):BackEnds/SML/sml-output.sml]
2021-05-10T23:26:13.3946554Z BackEnds/SML/sml-output.sml:361.7-361.25 Warning: binding not exhaustive
2021-05-10T23:26:13.3947318Z           first :: rest = ...
2021-05-10T23:26:13.5830021Z [code: 68900, data: 1644, env: 4172 bytes]
2021-05-10T23:26:13.5843534Z [compiling (sources.cm):gla.sml]
2021-05-10T23:26:13.6729672Z [code: 27305, data: 201, env: 943 bytes]
2021-05-10T23:26:13.6741406Z [compiling (sources.cm):FrontEnds/grammar-syntax.sml]
2021-05-10T23:26:13.6742156Z [creating directory FrontEnds/.cm/GUID]
2021-05-10T23:26:13.6831415Z [creating directory FrontEnds/.cm/amd64-unix]
2021-05-10T23:26:13.6831964Z [code: 1615, data: 159, env: 2122 bytes]
2021-05-10T23:26:13.6845983Z [compiling (sources.cm):FrontEnds/ml-antlr-based/spec.grm.sml]
2021-05-10T23:26:13.6846917Z [creating directory FrontEnds/ml-antlr-based/.cm/GUID]
2021-05-10T23:26:14.0327540Z [creating directory FrontEnds/ml-antlr-based/.cm/amd64-unix]
2021-05-10T23:26:14.0328303Z [code: 77569, data: 513, env: 4622 bytes]
2021-05-10T23:26:14.0338471Z [compiling (sources.cm):FrontEnds/ml-antlr-based/spec.lex.sml]
2021-05-10T23:26:14.2134970Z [code: 35260, data: 3564, env: 1471 bytes]
2021-05-10T23:26:14.2141134Z [compiling (sources.cm):FrontEnds/ml-antlr-based/parse-file.sml]
2021-05-10T23:26:14.2293084Z [code: 4095, data: 47, env: 2642 bytes]
2021-05-10T23:26:14.2298956Z [compiling (sources.cm):check-grammar.sml]
2021-05-10T23:26:14.4131582Z [code: 69914, data: 1106, env: 373 bytes]
2021-05-10T23:26:14.4145179Z [compiling (sources.cm):BackEnds/LaTeX/smlnj-template.sml]
2021-05-10T23:26:14.4145959Z [creating directory BackEnds/LaTeX/.cm/GUID]
2021-05-10T23:26:14.4164379Z [creating directory BackEnds/LaTeX/.cm/amd64-unix]
2021-05-10T23:26:14.4165268Z [code: 295, data: 47, env: 82 bytes]
2021-05-10T23:26:14.4170106Z [compiling (sources.cm):BackEnds/LaTeX/latex-output.sml]
2021-05-10T23:26:14.4835009Z [code: 24277, data: 389, env: 1810 bytes]
2021-05-10T23:26:14.4840129Z [compiling (sources.cm):compute-predict.sml]
2021-05-10T23:26:14.5317624Z [code: 18493, data: 453, env: 149 bytes]
2021-05-10T23:26:14.5330353Z [compiling (sources.cm):main.sml]
2021-05-10T23:26:14.5526541Z [code: 6967, data: 183, env: 352 bytes]
2021-05-10T23:26:14.5537724Z [compiling (sources.cm):BackEnds/back-end-sig.sml]
2021-05-10T23:26:14.5538454Z [creating directory BackEnds/.cm/GUID]
2021-05-10T23:26:14.5550649Z [creating directory BackEnds/.cm/amd64-unix]
2021-05-10T23:26:14.5551159Z [code: 81, data: 1, env: 192 bytes]
2021-05-10T23:26:14.5577112Z [scanning 4352-export.cm]
2021-05-10T23:26:14.5579852Z [scanning (4352-export.cm):sources.cm]
2021-05-10T23:26:14.5587034Z [scanning (4352-export.cm):(sources.cm):../common/lpt-common.cm]
2021-05-10T23:26:14.5628343Z [parsing (4352-export.cm):4352-export.sml]
2021-05-10T23:26:14.5716863Z [compiling (4352-export.cm):4352-export.sml]
2021-05-10T23:26:14.5735595Z [code: 238, data: 30, env: 39 bytes]
2021-05-10T23:26:14.6140587Z Building asdlgen.
2021-05-10T23:26:14.6178983Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl/src/gen/fragments/mkmk.sh back-end/sml
2021-05-10T23:26:14.7139059Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl/src/gen/fragments/mkfrags.sh back-end/sml
2021-05-10T23:26:14.7645776Z touch .depend
2021-05-10T23:26:14.7658794Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/ml-makedepend  -64 -n -f .depend driver/sources.cm /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl/src/asdlgen/asdlgen.amd64-linux || rm -f .depend
2021-05-10T23:26:14.7914818Z Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon May 10 23:25:33 2021]
2021-05-10T23:26:14.7944854Z [opening 4412-mlscript.sml]
2021-05-10T23:26:14.7945549Z [autoloading]
2021-05-10T23:26:14.7958553Z [library $smlnj/cm/cm.cm is stable]
2021-05-10T23:26:14.7961709Z [library $smlnj/internal/cm-sig-lib.cm is stable]
2021-05-10T23:26:14.7972024Z [library $/pgraph.cm is stable]
2021-05-10T23:26:14.7983513Z [library $smlnj/internal/srcpath-lib.cm is stable]
2021-05-10T23:26:14.8008208Z [library $SMLNJ-BASIS/basis.cm is stable]
2021-05-10T23:26:14.8063620Z [library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
2021-05-10T23:26:14.8271468Z [autoloading done]
2021-05-10T23:26:14.8348095Z [scanning driver/sources.cm]
2021-05-10T23:26:14.8352093Z [scanning driver/(sources.cm):../common/sources.cm]
2021-05-10T23:26:14.8357093Z [scanning driver/(sources.cm):../common/(sources.cm):../ast/sources.cm]
2021-05-10T23:26:14.8361704Z [parsing driver/(sources.cm):../common/(sources.cm):../ast/(sources.cm):ast.sml]
2021-05-10T23:26:14.8389435Z [creating directory ast/.cm/SKEL]
2021-05-10T23:26:14.8394549Z [parsing driver/(sources.cm):../common/(sources.cm):../ast/(sources.cm):ident-fn.sml]
2021-05-10T23:26:14.8412175Z [parsing driver/(sources.cm):../common/(sources.cm):../ast/(sources.cm):prim-types.sml]
2021-05-10T23:26:14.8444744Z [library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
2021-05-10T23:26:14.8473424Z [parsing driver/(sources.cm):../common/(sources.cm):config.sml]
2021-05-10T23:26:14.8475696Z [creating directory common/.cm/SKEL]
2021-05-10T23:26:14.8479276Z [parsing driver/(sources.cm):../common/(sources.cm):options.sml]
2021-05-10T23:26:14.8597060Z [scanning driver/(sources.cm):../front-end/sources.cm]
2021-05-10T23:26:14.8601876Z [library $/pp-lib.cm is stable]
2021-05-10T23:26:14.8605639Z [scanning driver/(sources.cm):../front-end/(sources.cm):common/sources.cm]
2021-05-10T23:26:14.8616345Z [library $/ml-lpt-lib.cm is stable]
2021-05-10T23:26:14.8619468Z [parsing driver/(sources.cm):../front-end/(sources.cm):common/(sources.cm):error.sml]
2021-05-10T23:26:14.8782533Z [creating directory front-end/common/.cm/SKEL]
2021-05-10T23:26:14.8811376Z [scanning driver/(sources.cm):../front-end/(sources.cm):parser/sources.cm]
2021-05-10T23:26:14.8816944Z [parsing driver/(sources.cm):../front-end/(sources.cm):parser/(sources.cm):parse-tree.sml]
2021-05-10T23:26:14.8829470Z [creating directory front-end/parser/.cm/SKEL]
2021-05-10T23:26:14.8833580Z [parsing driver/(sources.cm):../front-end/(sources.cm):parser/(sources.cm):parser.sml]
2021-05-10T23:26:14.8872256Z [attempting to load plugin $/ml-antlr-tool.cm]
2021-05-10T23:26:14.8893445Z [library $/ml-antlr-tool.cm is stable]
2021-05-10T23:26:14.8898321Z [library $smlnj/cm/tools.cm is stable]
2021-05-10T23:26:14.8909271Z [library $smlnj/internal/cm-lib.cm is stable]
2021-05-10T23:26:14.8918268Z [plugin $/ml-antlr-tool.cm loaded successfully]
2021-05-10T23:26:14.8918963Z [""ml-antlr""  ""asdl.grm""]
2021-05-10T23:26:14.8930281Z sh: 1: ml-antlr: not found
2021-05-10T23:26:14.8932372Z front-end/parser/sources.cm:23.3-23.11 Error: tool ""ML-Antlr"" failed: ""ml-antlr""  ""asdl.grm""
2021-05-10T23:26:14.8940623Z [attempting to load plugin $/ml-ulex-tool.cm]
2021-05-10T23:26:14.8963894Z [library $/ml-ulex-tool.cm is stable]
2021-05-10T23:26:14.8967950Z [plugin $/ml-ulex-tool.cm loaded successfully]
2021-05-10T23:26:14.8969255Z [""ml-ulex""  ""asdl.lex""]
2021-05-10T23:26:14.8980505Z sh: 1: ml-ulex: not found
2021-05-10T23:26:14.8982403Z front-end/parser/sources.cm:24.3-24.11 Error: tool ""ML-ULex"" failed: ""ml-ulex""  ""asdl.lex""
2021-05-10T23:26:14.8987488Z [parsing driver/(sources.cm):../front-end/(sources.cm):front-end.sml]
2021-05-10T23:26:14.8994663Z [creating directory front-end/.cm/SKEL]
2021-05-10T23:26:14.8998275Z [parsing driver/(sources.cm):main.sml]
2021-05-10T23:26:14.9019943Z [creating directory driver/.cm/SKEL]
2021-05-10T23:26:14.9030320Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/ml-makedepend: CM dependency analysis failed
2021-05-10T23:26:14.9089258Z touch .depend
2021-05-10T23:26:14.9099095Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/ml-makedepend  -64 -n -f .depend driver/sources.cm /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl/src/asdlgen/asdlgen.amd64-linux || rm -f .depend
2021-05-10T23:26:14.9354466Z Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon May 10 23:25:33 2021]
2021-05-10T23:26:14.9379988Z [opening 4436-mlscript.sml]
2021-05-10T23:26:14.9380624Z [autoloading]
2021-05-10T23:26:14.9394084Z [library $smlnj/cm/cm.cm is stable]
2021-05-10T23:26:14.9397824Z [library $smlnj/internal/cm-sig-lib.cm is stable]
2021-05-10T23:26:14.9410758Z [library $/pgraph.cm is stable]
2021-05-10T23:26:14.9423181Z [library $smlnj/internal/srcpath-lib.cm is stable]
2021-05-10T23:26:14.9453725Z [library $SMLNJ-BASIS/basis.cm is stable]
2021-05-10T23:26:14.9502214Z [library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
2021-05-10T23:26:14.9711526Z [autoloading done]
2021-05-10T23:26:14.9788031Z [scanning driver/sources.cm]
2021-05-10T23:26:14.9793165Z [scanning driver/(sources.cm):../common/sources.cm]
2021-05-10T23:26:14.9799250Z [scanning driver/(sources.cm):../common/(sources.cm):../ast/sources.cm]
2021-05-10T23:26:14.9824230Z [library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
2021-05-10T23:26:14.9859353Z [scanning driver/(sources.cm):../front-end/sources.cm]
2021-05-10T23:26:14.9870313Z [library $/pp-lib.cm is stable]
2021-05-10T23:26:14.9875695Z [scanning driver/(sources.cm):../front-end/(sources.cm):common/sources.cm]
2021-05-10T23:26:14.9884619Z [library $/ml-lpt-lib.cm is stable]
2021-05-10T23:26:14.9913004Z [scanning driver/(sources.cm):../front-end/(sources.cm):parser/sources.cm]
2021-05-10T23:26:14.9978841Z [attempting to load plugin $/ml-antlr-tool.cm]
2021-05-10T23:26:15.0002925Z [library $/ml-antlr-tool.cm is stable]
2021-05-10T23:26:15.0008107Z [library $smlnj/cm/tools.cm is stable]
2021-05-10T23:26:15.0020525Z [library $smlnj/internal/cm-lib.cm is stable]
2021-05-10T23:26:15.0030013Z [plugin $/ml-antlr-tool.cm loaded successfully]
2021-05-10T23:26:15.0032340Z [""ml-antlr""  ""asdl.grm""]
2021-05-10T23:26:15.0044765Z sh: 1: ml-antlr: not found
2021-05-10T23:26:15.0047415Z front-end/parser/sources.cm:23.3-23.11 Error: tool ""ML-Antlr"" failed: ""ml-antlr""  ""asdl.grm""
2021-05-10T23:26:15.0050643Z [attempting to load plugin $/ml-ulex-tool.cm]
2021-05-10T23:26:15.0073961Z [library $/ml-ulex-tool.cm is stable]
2021-05-10T23:26:15.0077688Z [plugin $/ml-ulex-tool.cm loaded successfully]
2021-05-10T23:26:15.0078994Z [""ml-ulex""  ""asdl.lex""]
2021-05-10T23:26:15.0090034Z sh: 1: ml-ulex: not found
2021-05-10T23:26:15.0092000Z front-end/parser/sources.cm:24.3-24.11 Error: tool ""ML-ULex"" failed: ""ml-ulex""  ""asdl.lex""
2021-05-10T23:26:15.0103524Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/ml-makedepend: CM dependency analysis failed
2021-05-10T23:26:15.0124762Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/bin/ml-build  -64 driver/sources.cm Main.main asdlgen
2021-05-10T23:26:15.0349791Z Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon May 10 23:25:33 2021]
2021-05-10T23:26:15.0371009Z [scanning driver/sources.cm]
2021-05-10T23:26:15.0375934Z [scanning driver/(sources.cm):../common/sources.cm]
2021-05-10T23:26:15.0381321Z [scanning driver/(sources.cm):../common/(sources.cm):../ast/sources.cm]
2021-05-10T23:26:15.0403862Z [library $SMLNJ-BASIS/basis.cm is stable]
2021-05-10T23:26:15.0450179Z [library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
2021-05-10T23:26:15.0545763Z [library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
2021-05-10T23:26:15.0586822Z [scanning driver/(sources.cm):../front-end/sources.cm]
2021-05-10T23:26:15.0592375Z [library $/pp-lib.cm is stable]
2021-05-10T23:26:15.0603104Z [scanning driver/(sources.cm):../front-end/(sources.cm):common/sources.cm]
2021-05-10T23:26:15.0614819Z [library $/ml-lpt-lib.cm is stable]
2021-05-10T23:26:15.0655396Z [scanning driver/(sources.cm):../front-end/(sources.cm):parser/sources.cm]
2021-05-10T23:26:15.0661934Z [attempting to load plugin $/ml-antlr-tool.cm]
2021-05-10T23:26:15.0685203Z [library $/ml-antlr-tool.cm is stable]
2021-05-10T23:26:15.0689464Z [library $smlnj/cm/tools.cm is stable]
2021-05-10T23:26:15.0701069Z [library $smlnj/internal/cm-lib.cm is stable]
2021-05-10T23:26:15.0729958Z [plugin $/ml-antlr-tool.cm loaded successfully]
2021-05-10T23:26:15.0730673Z [""ml-antlr""  ""asdl.grm""]
2021-05-10T23:26:15.0740928Z sh: 1: ml-antlr: not found
2021-05-10T23:26:15.0742350Z front-end/parser/sources.cm:23.3-23.11 Error: tool ""ML-Antlr"" failed: ""ml-antlr""  ""asdl.grm""
2021-05-10T23:26:15.0748039Z [attempting to load plugin $/ml-ulex-tool.cm]
2021-05-10T23:26:15.0827828Z [library $/ml-ulex-tool.cm is stable]
2021-05-10T23:26:15.0830233Z [plugin $/ml-ulex-tool.cm loaded successfully]
2021-05-10T23:26:15.0831126Z [""ml-ulex""  ""asdl.lex""]
2021-05-10T23:26:15.0841623Z sh: 1: ml-ulex: not found
2021-05-10T23:26:15.0843019Z front-end/parser/sources.cm:24.3-24.11 Error: tool ""ML-ULex"" failed: ""ml-ulex""  ""asdl.lex""
2021-05-10T23:26:15.0848314Z Compilation failed.
2021-05-10T23:26:15.0864712Z make: *** [Makefile:84: /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/asdl/src/asdlgen/asdlgen.amd64-linux] Error 1
2021-05-10T23:26:15.0867684Z FAILURE: Building asdlgen failed.
2021-05-10T23:26:15.0878415Z /home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh: !!! Installation of libraries and programs failed.
2021-05-10T23:26:15.0899680Z ##[error]The process '/home/runner/work/_temp/250e7ba0-0d51-4b73-a505-0dd9c5733e42/config/install.sh' failed with exit code 1
2021-05-10T23:26:15.1091039Z Post job cleanup.
2021-05-10T23:26:15.1949586Z [command]/usr/bin/git version
2021-05-10T23:26:15.1992203Z git version 2.31.1
2021-05-10T23:26:15.2030959Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2021-05-10T23:26:15.2067915Z [command]/usr/bin/git submodule foreach --recursive git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :
2021-05-10T23:26:15.2286556Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2021-05-10T23:26:15.2312365Z http.https://github.com/.extraheader
2021-05-10T23:26:15.2320077Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2021-05-10T23:26:15.2353057Z [command]/usr/bin/git submodule foreach --recursive git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :
2021-05-10T23:26:15.2600761Z Cleaning up orphan processes",""," *** 2021-09-22 19:45 --- John Reppy --- I think that this problem is the same as bug #287 (Install errors with `request asdl`), so I am marking it as fixed too."
287,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-06-30 08:58","2021-09-22 19:42","2021-09-22 19:42","Install errors with `request asdl`","When `request asdl` is enabled (which is the default for a UNIX
platform), install fails during the `asdl` build step due to not
being able to find `ml-ulex` and `ml-antlr`.
Additional comments:
I encountered the error on a fresh Fedora Linux machine which
had not previous SML/NJ versions installed (and, in particular,
had no `ml-ulex` or `ml-antlr` on `PATH`).

It seems that the freshly built `ml-ulex` and `ml-antlr` tools are
not added to `PATH` for the `asdlgen` build.

Using `#request asdl` in `config/targets` allows the install to
complete successfully.

Submitted via web form by Matthew Fluet <Matthew.Fluet@gmail.com>
",0,0,0,"None","Generic Unix","Installer","Fixed","Minor","","110.99.1","","","Building asdlgen.
/home/matthew/devel/smlnj/smlnj-110.99.1/asdl/src/gen/fragments/mkmk.sh back-end/sml
/home/matthew/devel/smlnj/smlnj-110.99.1/asdl/src/gen/fragments/mkfrags.sh back-end/sml
touch .depend
/home/matthew/devel/smlnj/smlnj-110.99.1/bin/ml-makedepend -64 -n -f .depend driver/sources.cm /home/matthew/devel/smlnj/smlnj-110.99.1/asdl/src/asdlgen/asdlgen.amd64-linux || rm -f .depend
Standard ML of New Jersey (64-bit) v110.99.1 [built: Wed Jun 30 09:32:37 2021]
[opening 17466-mlscript.sml]
[autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
[scanning driver/sources.cm]
[scanning driver/(sources.cm):../common/sources.cm]
[scanning driver/(sources.cm):../common/(sources.cm):../ast/sources.cm]
[parsing driver/(sources.cm):../common/(sources.cm):../ast/(sources.cm):ast.sml]
[creating directory ast/.cm/SKEL]
[parsing driver/(sources.cm):../common/(sources.cm):../ast/(sources.cm):ident-fn.sml]
[parsing driver/(sources.cm):../common/(sources.cm):../ast/(sources.cm):prim-types.sml]
[library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
[parsing driver/(sources.cm):../common/(sources.cm):config.sml]
[creating directory common/.cm/SKEL]
[parsing driver/(sources.cm):../common/(sources.cm):options.sml]
[scanning driver/(sources.cm):../front-end/sources.cm]
[library $/pp-lib.cm is stable]
[scanning driver/(sources.cm):../front-end/(sources.cm):common/sources.cm]
[library $/ml-lpt-lib.cm is stable]
[parsing driver/(sources.cm):../front-end/(sources.cm):common/(sources.cm):error.sml]
[creating directory front-end/common/.cm/SKEL]
[scanning driver/(sources.cm):../front-end/(sources.cm):parser/sources.cm]
[parsing driver/(sources.cm):../front-end/(sources.cm):parser/(sources.cm):parse-tree.sml]
[creating directory front-end/parser/.cm/SKEL]
[parsing driver/(sources.cm):../front-end/(sources.cm):parser/(sources.cm):parser.sml]
[attempting to load plugin $/ml-antlr-tool.cm]
[library $/ml-antlr-tool.cm is stable]
[library $smlnj/cm/tools.cm is stable]
[library $smlnj/internal/cm-lib.cm is stable]
[plugin $/ml-antlr-tool.cm loaded successfully]
[""ml-antlr""  ""asdl.grm""]
sh: line 1: ml-antlr: command not found
front-end/parser/sources.cm:23.3-23.11 Error: tool ""ML-Antlr"" failed: ""ml-antlr""  ""asdl.grm""
[attempting to load plugin $/ml-ulex-tool.cm]
[library $/ml-ulex-tool.cm is stable]
[plugin $/ml-ulex-tool.cm loaded successfully]
[""ml-ulex""  ""asdl.lex""]
sh: line 1: ml-ulex: command not found
front-end/parser/sources.cm:24.3-24.11 Error: tool ""ML-ULex"" failed: ""ml-ulex""  ""asdl.lex""
[parsing driver/(sources.cm):../front-end/(sources.cm):front-end.sml]
[creating directory front-end/.cm/SKEL]
[parsing driver/(sources.cm):main.sml]
[creating directory driver/.cm/SKEL]
/home/matthew/devel/smlnj/smlnj-110.99.1/bin/ml-makedepend: CM dependency analysis failed
touch .depend
/home/matthew/devel/smlnj/smlnj-110.99.1/bin/ml-makedepend -64 -n -f .depend driver/sources.cm /home/matthew/devel/smlnj/smlnj-110.99.1/asdl/src/asdlgen/asdlgen.amd64-linux || rm -f .depend
Standard ML of New Jersey (64-bit) v110.99.1 [built: Wed Jun 30 09:32:37 2021]
[opening 17489-mlscript.sml]
[autoloading]
[library $smlnj/cm/cm.cm is stable]
[library $smlnj/internal/cm-sig-lib.cm is stable]
[library $/pgraph.cm is stable]
[library $smlnj/internal/srcpath-lib.cm is stable]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
[scanning driver/sources.cm]
[scanning driver/(sources.cm):../common/sources.cm]
[scanning driver/(sources.cm):../common/(sources.cm):../ast/sources.cm]
[library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
[scanning driver/(sources.cm):../front-end/sources.cm]
[library $/pp-lib.cm is stable]
[scanning driver/(sources.cm):../front-end/(sources.cm):common/sources.cm]
[library $/ml-lpt-lib.cm is stable]
[scanning driver/(sources.cm):../front-end/(sources.cm):parser/sources.cm]
[attempting to load plugin $/ml-antlr-tool.cm]
[library $/ml-antlr-tool.cm is stable]
[library $smlnj/cm/tools.cm is stable]
[library $smlnj/internal/cm-lib.cm is stable]
[plugin $/ml-antlr-tool.cm loaded successfully]
[""ml-antlr""  ""asdl.grm""]
sh: line 1: ml-antlr: command not found
front-end/parser/sources.cm:23.3-23.11 Error: tool ""ML-Antlr"" failed: ""ml-antlr""  ""asdl.grm""
[attempting to load plugin $/ml-ulex-tool.cm]
[library $/ml-ulex-tool.cm is stable]
[plugin $/ml-ulex-tool.cm loaded successfully]
[""ml-ulex""  ""asdl.lex""]
sh: line 1: ml-ulex: command not found
front-end/parser/sources.cm:24.3-24.11 Error: tool ""ML-ULex"" failed: ""ml-ulex""  ""asdl.lex""
/home/matthew/devel/smlnj/smlnj-110.99.1/bin/ml-makedepend: CM dependency analysis failed
/home/matthew/devel/smlnj/smlnj-110.99.1/bin/ml-build -64 driver/sources.cm Main.main asdlgen
Standard ML of New Jersey (64-bit) v110.99.1 [built: Wed Jun 30 09:32:37 2021]
[scanning driver/sources.cm]
[scanning driver/(sources.cm):../common/sources.cm]
[scanning driver/(sources.cm):../common/(sources.cm):../ast/sources.cm]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[library $SMLNJ-LIB/Util/smlnj-lib.cm is stable]
[scanning driver/(sources.cm):../front-end/sources.cm]
[library $/pp-lib.cm is stable]
[scanning driver/(sources.cm):../front-end/(sources.cm):common/sources.cm]
[library $/ml-lpt-lib.cm is stable]
[scanning driver/(sources.cm):../front-end/(sources.cm):parser/sources.cm]
[attempting to load plugin $/ml-antlr-tool.cm]
[library $/ml-antlr-tool.cm is stable]
[library $smlnj/cm/tools.cm is stable]
[library $smlnj/internal/cm-lib.cm is stable]
[plugin $/ml-antlr-tool.cm loaded successfully]
[""ml-antlr""  ""asdl.grm""]
sh: line 1: ml-antlr: command not found
front-end/parser/sources.cm:23.3-23.11 Error: tool ""ML-Antlr"" failed: ""ml-antlr""  ""asdl.grm""
[attempting to load plugin $/ml-ulex-tool.cm]
[library $/ml-ulex-tool.cm is stable]
[plugin $/ml-ulex-tool.cm loaded successfully]
[""ml-ulex""  ""asdl.lex""]
sh: line 1: ml-ulex: command not found
front-end/parser/sources.cm:24.3-24.11 Error: tool ""ML-ULex"" failed: ""ml-ulex""  ""asdl.lex""
Compilation failed.
make: *** [Makefile:84: /home/matthew/devel/smlnj/smlnj-110.99.1/asdl/src/asdlgen/asdlgen.amd64-linux] Error 1
FAILURE: Building asdlgen failed.
./config/install.sh: !!! Installation of libraries and programs failed.
","$ ./config/install.sh -default 64"," *** 2021-09-22 19:42 --- John Reppy --- This bug has been fixed for 110.99.2 (and 1021.1) by adding the generated SML files for the scanner and parser to the repository."
290,2,"Closed",3,103,"John Reppy",106,"David MacQueen","2021-08-10 15:57","2022-06-17 14:23","2022-06-17 14:23","Incorrect implementation of pattern matching for exceptions","The example comes from the coresml regression tests (test d001a-ac.sml).

With FLINT printing on, we see the source of the problem is that the order of cases has changed (B appears before A): For exception constructors, which can be aliases, this change results in incorrect behavior.

[After Translate ...]

FN(v85:
   STR([TYC(TCAP(PRIM(ETG), [{}])),TYC(TCAP(PRIM(ETG), [{}])),
        TYC(TCAP(PRIM(ETG), [{}]))]),
   v73 = v85[0]
     v72 = v85[1]
       v74 = v85[2]
         v70 =
               v71 =
                     CON((B,EXNLVAR(72),TYC(AR[rr]([{}], [PRIM(EXN)]))), [],
                         RCD())
                 v75 = FN(v76: TYC({}),(I63)1)
                   v77 = FN(v78: TYC({}),(I63)2)
                     v79 = FN(v80: TYC({}),(I63)3)
                       v81 =
                             FN(v82:
                                TYC({}),
                                RAISE(TYC(PRIM(I63)),
                                APP(PRM(markexn,
                                    TYC(AR[rr]([PRIM(EXN),PRIM(STR)],
                                    [PRIM(EXN)])), []),
                                RCD(CON((Match,EXNLVAR(74),TYC(AR[rr]([{}],
                                         [PRIM(EXN)]))), [], RCD()),
                                    ""stdIn:4.36""))))
                         SWIv71
                            of B.v83 => APP(v77, RCD())
                            A.v84 => APP(v75, RCD())
                            _ => APP(v79, RCD())
           SRCD(v70))
",0,0,0,"All","All","Compiler","Fixed","Minor","macOS 12.4","110.99.1","pattern matching, exceptions","","<jhr@Froh> sml
Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon Apr 12 18:45:14 2021]
- exception A;
exception A
- exception B = A;
exception B = A
- (case B of A => 1 | B => 2 | _ => 3);
val it = 2 : int
","exception A;
exception B = A;
(case B of A => 1 | B => 2 | _ => 3);"," *** 2022-06-17 14:23 --- David MacQueen --- The mkExp rule transposition problem still applies the the legacy branch, but with the new match compiler, the bug persisted.  The fix is to suppress the SWITCH contraction (FLINT/opt/lcontract.sml: swiInfo; FLINT/opt/fcontract.sml: fcSwitch) when the subject is an exception constructor, because these functions use equality of conreps to identify the exception constructor, which is not correct when one of the exceptions is defined by an exception identity declaration as in the bug test case.  The bug remains open in the legacy branch. *** 2021-11-09 21:06 --- David MacQueen --- A spurious ""rev"" operation in the SWITCHexp case of Translate.mkExp was removed, which restored the proper order of rules in the example (the A => rule ~ now comes first.  However, this was not enough to fix the bug.  Deeper analysis of the issues around identity exception declarations will be required."
291,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-08-15 06:18","2022-06-27 10:44","2022-06-27 10:44","Signals are not delivered for corresponding events","No sigALRM nor sigGC will be delivered to installed handlers,
when an interval timer is set by ""setIntTimer"" or
garbage collection is enforced by ""doGC"".

The behavior is the same in 110.85 for Windows 10 (pasted as
atranscript), 110.98.1 (both the 32/64 version) for Linux.
Additional comments:
As for sigGC, it has been reported in #65.



Submitted via web form by Masaya Saito <saitohm@sun.ac.jp>
",0,0,0,"x86","Other","SML/NJ Library","Fixed","Major","Windows 10","110.85/110.98.1","structure Signals","","Standard ML of New Jersey v110.85 [built: Fri Dec 21 20:19:39 2018]
- open Signals
= open SMLofNJ.IntervalTimer
= open SMLofNJ.Internals.GC;
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
opening Signals
  eqtype signal
  datatype sig_action
    = DEFAULT
    | HANDLER of signal * int * unit ?.Cont.cont -> unit ?.Cont.cont
    | IGNORE
  val listSignals : unit -> signal list
  val toString : signal -> string
  val fromString : string -> signal option
  val setHandler : signal * sig_action -> sig_action
  val overrideHandler : signal * sig_action -> sig_action
  val inqHandler : signal -> sig_action
  datatype sigmask = MASK of signal list | MASKALL
  val maskSignals : sigmask -> unit
  val unmaskSignals : sigmask -> unit
  val masked : unit -> sigmask
  val pause : unit -> unit
  val sigINT : signal
  val sigALRM : signal
  val sigTERM : signal
  val sigGC : signal
opening SMLofNJ.IntervalTimer
  val tick : unit -> Time.time
  val setIntTimer : Time.time option -> unit
opening SMLofNJ.Internals.GC
  val doGC : int -> unit
  val messages : bool -> unit
-
- fun laterSec x = let open Time in now() + fromSeconds x end ;
val laterSec = fn : IntInf.int -> Time.time
- fun prt x = (TextIO.output(TextIO.stdOut,x); TextIO.flushOut TextIO.stdOut);
[autoloading]
[autoloading done]
val prt = fn : TextIO.vector -> unit
-
- val _ = setHandler (sigALRM, HANDLER(fn z => (prt ""tm"";#3 z)  )) ;
- val _ = setHandler (sigGC  , HANDLER(fn z => (prt ""gc"";#3 z)  )) ;
-
- unmaskSignals (MASK [sigALRM, sigGC]);
val it = () : unit
-
- val _ = setIntTimer (SOME (laterSec 10));  (* nothing will happen *)
- val _ = doGC 10; (* also nothing happens *)
tm-
-","open Signals
open SMLofNJ.IntervalTimer
open SMLofNJ.Internals.GC;

fun laterSec x = let open Time in now() + fromSeconds x end ;
fun prt x = (TextIO.output(TextIO.stdOut,x); TextIO.flushOut TextIO.stdOut);

val _ = setHandler (sigALRM, HANDLER(fn z => (prt ""tm"";#3 z)  )) ;
val _ = setHandler (sigGC  , HANDLER(fn z => (prt ""gc"";#3 z)  )) ;

unmaskSignals (MASK [sigALRM, sigGC]);

val _ = setIntTimer (SOME (laterSec 10));  (* nothing will happen *)
val _ = doGC 10; (* also nothing happens *)"," *** 2022-06-27 10:44 --- John Reppy --- I was not able to reproduce the problem with `sigALRM` (it works for me), but support for `sigGC` has been added in 110.99.3 and 2022.1. *** 2022-06-01 18:04 --- John Reppy --- Also see #65"
292,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-09-01 13:54","2021-09-01 14:33","2021-09-01 14:33","REPL deletes prompt","The REPL appears to delete the prompt when executing declarations;
see transcript below.  Lines 3 and 5 of each session are typed by
me.  Notice that the ""-"" prompt has been deleted in 110.99.1, but
not in 110.98.

This is cosmetic, but does make it difficult to show what had been
typed and what is a response from the REPL.


Submitted via web form by Norman Danner <ndanner@wesleyan.edu>
",0,0,0,"x86","Generic Unix","Other","Invalid","Cosmetic","","110.99.1","","","$ /opt/smlnj-110.99.1/bin/sml
Standard ML of New Jersey (64-bit) v110.99.1 [built: Fri Jul 30 15:24:13 2021]
val x = 5 ;
val x = 5 : int
use ""area.sml"" ;
[opening area.sml]
structure A : sig
  val pi : real
  val area : real -> real
end
val it = () : unit

$ /opt/smlnj-110.98/bin/sml
Standard ML of New Jersey (64-bit) v110.98 [built: Mon Aug 10 14:08:31 2020]
- val x = 5 ;
val x = 5 : int
- use ""area.sml"" ;
[opening area.sml]
structure A :
  sig
    val pi : real
    val area : real -> real
  end
val it = () : unit
",""," *** 2021-09-01 14:33 --- John Reppy --- It turns out that the problem was with the ""rlwrap"" program and not with SML/NJ."
293,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-09-14 11:30","2021-09-22 19:40","2021-09-22 19:40","SMLNJ Incompatibility with macOS 12 Beta","Hello there,

I’m in a computer science class at UNC-Chapel Hill, and we are studying SMLNJ. I am running the macOS 12 (Monterey) beta and it seems as if it is incompatible with SMLNJ. I have tried both the Homebrew installation and downloading the file directly from the website, and neither work.

I thought I’d reach out since macOS 12 will likely be released to the public in the next month or two, and you might get a number of support requests and/or many people who are unable to install SMLNJ.

Thanks so much!
Submitted via web form by Sam Shi <samshi@live.unc.edu>
",0,0,0,"x86","MacOS X","Installer","Fixed","Critical","12 beta","110.9.1","installation error","","I get the following output message in the Homebrew installation:

~ % brew install smlnj
==> Caveats
To use smlnj, you may need to add the /usr/local/smlnj/bin directory
to your PATH environment variable, e.g. (for Bash shell):
  export PATH=/usr/local/smlnj/bin:""$PATH""

==> Downloading http://smlnj.cs.uchicago.edu/dist/working/110.99.1/smlnj-amd64-1
Already downloaded: /Users/hawkeyeshi/Library/Caches/Homebrew/downloads/a3dc852e914d06f4b7b60f302e266759e1434370060882a472353962236da819--smlnj-amd64-110.99.1.pkg
==> Installing Cask smlnj
==> Running installer for smlnj; your password may be necessary.
Package installers may write to any location; options such as `--appdir` are ignored.
Password:
installer: Package name is SML/NJ Version 110.99.1
installer: Installing at base path /
installer: The install failed. (The Installer encountered an error that caused the installation to fail. Contact the software manufacturer for assistance. An error occurred while running scripts from the package “smlnj-amd64-110.99.1.pkg”.)
==> Purging files for version 110.99.1 of Cask smlnj
Error: Failure while executing; `/usr/bin/sudo -E -- /usr/bin/env LOGNAME=hawkeyeshi USER=hawkeyeshi USERNAME=hawkeyeshi /usr/sbin/installer -pkg /usr/local/Caskroom/smlnj/110.99.1/smlnj-amd64-110.99.1.pkg -target /` exited with 1. Here's the output:
installer: Package name is SML/NJ Version 110.99.1
installer: Installing at base path /
installer: The install failed. (The Installer encountered an error that caused the installation to fail. Contact the software manufacturer for assistance. An error occurred while running scripts from the package “smlnj-amd64-110.99.1.pkg”.)","N/A"," *** 2021-09-22 19:40 --- John Reppy --- Fixed for 110.99.2 (and 2021.1)."
294,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2021-09-16 16:14","2021-11-09 21:20","2021-11-09 21:20","Compiler bug: Recover","Compiler raises ""Compiler bug"" exception
Additional comments:
Also happens on Windows.

Submitted via web form by Karl Crary <crary@cs.cmu.edu>
",0,0,0,"None","All","Compiler","Fixed","Critical","Ubuntu 20.04.3","110.99","","","- use ""bug.sml"";
[opening bug.sml]
Recover.get: 65
Error: Compiler bug: Recover: Recover.recover.get

while in wrap phase
  raised at:	../compiler/Basics/errormsg/errormsg.sml:55.14-55.19
		../compiler/FLINT/opt/recover.sml:127.44
		../compiler/Basics/stats/stats.sml:198.40
","structure S :> sig val loop : unit -> unit end =
   struct

      (* making the underscore into unit makes the problem go away *)
      fun test _ = true

      fun loop () =
         if test () then
            loop ()
         else
            loop ()

   end
"," *** 2021-11-09 21:20 --- David MacQueen --- This was fixed by removing a few lines of code from the function contract..fcexp..fcFix.fcFun (conditional exp starting about 5 lines below the start of fcFun).  This code was causing the definition of a ""live"" variable to be deleted because of an incorrect value of Collect.iusenb.  The iusenb value (supposedly being the count of internal uses of a variable in its definition) was not being accurately maintained during the contraction transformations.  The fix was to delete this conditional (and in particular the call of ""undertake"").  While debugging, the files FLINT/opt/{collect.sml, fcontract.sml} were extensively revised for clarification (simplifying, eliminating cruft, and revising function and variable names for better self-documentation).  Bug fix will be in 2021.1 and will be added to the legacy branch (for future 110.99 releases). *** 2021-09-17 09:18 --- John Reppy --- Turning on printing in FLINT gives the following before the exception is raised: ~  ~ [After split ...] ~  ~ v28{1} : (FCT)  =  ~   FN([v51{0} : ???], ~     [v64{0}] =  ~       FIX(v1{1} : ((i:~15)FUN rr)  =  ~             FN([v22{0} : TT<>], ~               v31{1} = RECORD [] ~               v30{1} = CON(true, [], v31) ~               RETURN [v30])) ~       RETURN [v1] ~     [v59{0}] =  ~       FIX(v55{3,3} : ((i:~3)FUN rr)  =  ~             FN([], ~               FIX(v65{0} : (TRFUN rr)  =  ~                     FN([], ~                       [v38{1,1}] = RETURN [v64] ~                       v39{1} = RECORD [] ~                       [v37{1}] = APP(v38,[v39]) ~                       SWITCH v37 ~                         true =>  ~                             APP(v65,[]) ~                         false =>  ~                             APP(v65,[]))) ~               APP(v65,[]))) ~       FIX(v4{1} : ((i)FUN rr)  =  ~             FN([v56{0} : TT<>], ~               APP(v55,[]))) ~       RETURN [v4] ~     [v8{1}] = RETURN [v59] ~     v10{1} = STRUCT [v8] ~     v50{1} = STRUCT [v10] ~     RETURN [v50]) ~  ~  ~ [After fcontract ...] ~  ~ v28{1} : (FCT)  =  ~   FN([v51{0} : ???], ~     FIX(v4{1} : (FUN rr)  =  ~           FN([v56{0} : TT<>], ~             APP(v65,[]))) ~     v10{1} = STRUCT [v4] ~     v50{1} = STRUCT [v10] ~     RETURN [v50]) ~  ~ Recover.get: 65 ~ Error: Compiler bug: Recover: Recover.recover.get ~ "
295,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-10-06 15:12","2021-10-06 15:35","2021-10-06 15:35","It crashes on real numbers ","On my computer, it cannot handle real numbers.
If I try, for example, 2.5; (Enter) in REPL, then sml will crash.

Submitted via web form by Peter Sk <>
",0,0,0,"Other","Linux","Compiler","Works For Me","Critical","Ubuntu 20.04, 64-bit, amd64","110.99.2, 110.99.1","","","",""," *** 2021-10-06 15:35 --- John Reppy --- I tried this under Ubuntu 20.04 with both 110.99.1 and 110.99.2, but I was unable to reproduce the problem.  I suspect that the problem is related to the submitter's system/installation.  Since no contact info was provided, it is not possible to investigate further."
296,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2021-10-18 19:59","2021-10-27 13:08","2021-10-27 13:08","real operations are giving me illegal instruction (core dumped)","when trying to do simple operations with reals I'm receiving this:

- 1.2 + 2.2;
/sbin/smlnj: line 3: 82974 Illegal instruction     (core dumped) /usr/lib/smlnj/bin/sml ""$@""

- 1.2 * 2.2;
/sbin/smlnj: line 3: 83127 Illegal instruction     (core dumped) /usr/lib/smlnj/bin/sml ""$@""

and the smlnj is closing
Submitted via web form by Saliba <gabriel.portela.saliba@gmail.com>
",0,0,0,"x86","Linux","Compiler","Works For Me","Critical","5.14.12-arch1-1","v110.99.2 [built: Wed Sep 29 16:07:17 2021]","""illegal-instruction"", ""reals""","","open smlnj

type 1.2 + 2.2; <enter>","1.2 * 2.2;"," *** 2021-10-27 13:08 --- John Reppy --- I was unable to reproduce this bug and a my attempt to get more information from the submitter has failed, so I'm closing the bug."
297,1,"Open",3,142,"Bug Submitter",103,"John Reppy","2021-11-01 22:30","","2022-06-01 17:51","Missing smlnj-lib documentation: HTML, HTML4, and PP libraries","The HTML, HTML4, and PP libraries are missing from smlnj-lib's documentation
(http://smlnj.org/doc/smlnj-lib/index.html).",0,0,0,"None","Generic Unix","SML/NJ Library","None","Cosmetic","","","documentation","","","",""
298,1,"Open",3,460,"Harrison Grodin",106,"David MacQueen","2021-11-16 16:11","","2022-06-01 17:53","Using equality of an eqtype functor parameter triggers a polyEqual warning","Using `op =` on an eqtype functor parameter triggers a polyEqual warning, even though the comparison is at a fixed type.",0,0,0,"All","All","Compiler","None","Cosmetic","","v110.99.1","","","- functor F (eqtype t) = struct val equal : t * t -> bool = (op =) end;
stdIn:2.60-2.64 Warning: calling polyEqual
functor F(<param>: sig
  eqtype t
end) : sig
  val equal : t * t -> bool
end
- functor F (eqtype t val x : t) = struct val _ = x = x end;
stdIn:3.51 Warning: calling polyEqual
functor F(<param>: sig
  eqtype t
  val x : t
end) : sig end
","functor F (eqtype t) = struct val equal : t * t -> bool = (op =) end
functor F (eqtype t val x : t) = struct val _ = x = x end"," *** 2022-06-01 17:53 --- John Reppy --- Related to 299"
299,1,"Open",3,142,"Bug Submitter",106,"David MacQueen","2021-11-22 15:36","","2022-06-01 17:54","Spurious use of polyEqual","SML-NJ appears to be using polyEqual when it shouldn't be, at least for my understanding of when polyEqual should be called.

Defining a simple datatype with one variant causes equality for that datatype to be turned into polyEqual.
Adding a variant to the datatype removes the problem.
Additional comments:
Put the source code in ""test.sml"", and have the compiler build it.

This behavior also appeared when using CM.

May be related to http://smlnj-gforge.cs.uchicago.edu/tracker/index.php?func=detail&aid=298&group_id=33&atid=215

Submitted via web form by Benjamin Quiring <bq2367@gmail.com>
",0,0,0,"None","Generic Unix","Compiler","None","Cosmetic","","110.99","types, datatypes, equality","","Standard ML of New Jersey (64-bit) v110.99 [built: Sun Mar 07 15:02:39 2021]
- use ""test.sml"";;
[opening test.sml]
test.sml:13.35 Warning: calling polyEqual
test.sml:4.35 Warning: calling polyEqual
datatype D = A of int
val f = <hidden> : D -> D -> bool
datatype E = B | C
val f = <hidden> : E -> E -> bool
datatype Y = Z of int
val f = fn : Y -> Y -> bool
val it = () : unit
- ","datatype D = A of int

fun f (x : D) (y : D) : bool = (x = y)

datatype E = B | C

fun f (x : E) (y : E) : bool = (x = y)

(* Bonus: polyEqual called even for non-nullary constructors *)
datatype Y = Z of int

fun f (x : Y) (y : Y) : bool = (x = y)

"," *** 2022-06-01 17:54 --- John Reppy --- Related to 298"
300,1,"Open",3,460,"Harrison Grodin",103,"John Reppy","2022-01-02 12:54","","2022-05-31 11:27","Installation of SML/NJ 2021.1 fails on Ubuntu 20.04","Installing SML/NJ 2021.1 on Ubuntu 20.04 fails, raising exception CFunNotFound with ""CodeGen.setTarget"". (Curiously, the same installation procedure seems to succeed on macOS.)",0,0,0,"x86","Linux","Installer","None","None","Ubuntu 20.04","2021.1","","","...
                            := = :=
                             ! = !
                        cthrow = throw
                       isolate = isolate
                       capture = capture
                         throw = throw
                        callcc = callcc
********************
/home/user/Downloads/nj-2021.1/bin/.run/run.amd64-linux: Fatal error -- Uncaught exception CFunNotFound with ""CodeGen.setTarget"" raised at Basis/Implementation/Unsafe/cinterface.sml:24.19-24.72

config/install.sh !!! Boot code failed, no heap image (sml.amd64-linux).
","config/install.sh
(run on Ubuntu 20.04)"," *** 2022-05-31 11:27 --- John Reppy --- This appears to be a problem with the in-memory object file produced by LLVM on Linux.  "
301,1,"Open",3,142,"Bug Submitter",103,"John Reppy","2022-01-26 20:18","","2022-05-31 11:29","ml-build fails on Windows with error ","ml-build fails with the error that it cannot find XYZ_XXX_BOOTLIST. I think it might be because of either the space or the parenthesis in the default install path.

Steps to repro:
1. Download installer from https://smlnj.org/dist/working/110.99.2/smlnj-110.99.2.msi
2. Install SMLNJ to the default location: C:\Program Files (x86)\SMLNJ.
3. Create a file sources.cm and add the content below.
4. Create a file main.sml and add the content below.
5. Open cmd.exe or powershell and run `ml-build sources.cm Main.main out`.
Fix:
I think you can double quote around the %COMSPEC% command like so in ml-build.bat:
%COMSPEC% /C """"%SMLNJ_HOME%\bin\sml.bat"" %flags% %setup% @CMbuild %root% %cmfile% %heap% %listfile% %linkargsfile%""


Submitted via web form by Harry Gifford <harrygifford92@gmail.com>
",0,0,0,"Other","Other","Compiler","Accepted As Bug","Minor","x64 Windows 11","110.99.2","Windows, ml-build","","C:\source\repos\smlnj-windows-build-repro>ml-build sources.cm Main.main out
'C:\Program' is not recognized as an internal or external command,
operable program or batch file.
Compilation failed with error.
Could Not Find C:\source\repos\smlnj-windows-build-repro\XYZ_XXX_BOOTLIST
The system cannot find the path specified.
The system cannot find the path specified.
The system cannot find the path specified.","sources.cm:

Group is
    $/basis.cm
    main.sml

main.sml:

structure Main =
struct
  fun main (name, args) =
    (print ""Hello World!\n""; OS.Process.success)
end
"," *** 2022-02-07 18:16 --- Shakil Ahmed --- I reproduced the error and then edited the %COMSPEC% command in ml-build file  as mentioned.  ~  ~ Then build was successful. ~ "
302,1,"Open",3,142,"Bug Submitter",103,"John Reppy","2022-01-30 12:29","","2022-06-01 17:54","MSI installer for SMLNJ 110.99.2 reports as version 0.0.0.0","The MSI installers generated for SMLNJ do not have any versioning information.

This means that:
 - In add/remove programs, the installed version is shown as 0.0.0.0.  This stops third party software update checkers determining if SML is out of date.
 - WinGet, the Microsoft official package manager, cannot properly support SMLNJ (I tried to make a PR for it, but every version will be indicated as 0.0.0.0, meaning nobody will ever be prompted to update).

The MSI itself needs to have the version number embedded into it at packaging time such that Windows understands what version is currently installed.  This will fix everything.
Additional comments:
I have a pull request open with WinGet to add support for SML, such that any user of W10+ could just type ""winget install StandardMLofNewJersey"" and have the newest MSI installed, and they could update with ""winget upgrade StandardMLOfNewJersey"", but this won't work for as long as every version's MSI reports itself as 0.0.0.0.

Fix:
I believe that line 6 of /config/trunk/WinSetup/smlnj.wxs should somehow be fed the current version number.

Submitted via web form by Simon Hollingshead <me@simonhollingshead.com>
",0,0,0,"None","Other","Installer","None","Minor","Any Windows","110.99.2","msi, version","","","",""
303,1,"Open",3,142,"Bug Submitter",103,"John Reppy","2022-03-28 09:53","","2022-05-31 10:50","Use raises wrong exception","When exported code (i.e., by exportML or exportFn) calls ""use"" and the
used code raises an exception, the exception we get isn't the one that
was raised, but ExnDuringExecution instead.

This happens in any code exported by exportFn, and it happens in code
exported by exportML if ""use"" is called before the REPL goes back to
console for input.

Additional comments:
There's a workaround: always use exportML and use a script to send
console input to start the program. But that's really clunky.


Submitted via web form by Karl Crary <crary@cs.cmu.edu>
",0,0,0,"x86","Windows Vista","Compiler","None","Minor","Windows 10","110.96","","","$ sml @SMLload=bug.x86-win32
[opening bug2.sml]
ExnDuringExecution
","(* bug1.sml *)

fun foo _ =
   (
   use ""bug2.sml"" handle exn => print (General.exnMessage exn);
   OS.Process.success
   );

SMLofNJ.exportFn (""bug"", foo);


(* bug2.sml *)

(raise Div) : unit
"," *** 2022-04-12 13:28 --- David MacQueen --- This is not a bug but a ""misuse"" of the ""use"" function, which is only intended to work in the top-level REPL."
304,2,"Closed",3,142,"Bug Submitter",106,"David MacQueen","2022-04-11 13:13","2022-04-12 13:27","2022-04-12 13:27","Broken hyperlink for SML'97 Basis Library documentation on SML/NJ home page","Symptom:

When I click on ""SML'97 Basis Library"" in the Documentation and
Literature section of the SML/NJ home page...

	http://smlnj.org/

...I'm sent to http://sml-family.org/Basis/index.html which
fails to connect after a while with ""The connection has timed
out; The server at sml-family.org is taking too long to
respond."", instead of showing me some Basis Library
documentation.


Diagnosis:

The downforeveryoneorjustme.com service agrees that
sml-family.org is down.

Seems to me as if the site is decommissioned?

I'm sure I'm the last to have heard, but why not fix it...


Cure:

See your bugform's ""Fix"" section.


Workaround:

Since I'm laboring under the impression that I found where the
docs moved to, this isn't urgent for me.

Yours for continuous quality improvement.

Hope this helps.

Additional comments:
For bonus points,
grep the rest of smlnj.org for other (now-broken) links to
sml-family.org?

Fix:
I don't know/remember what the target page look(ed) like.
However sometime between 31-Jan'20 and 4-Aug'21, the Internet
Wayback Machine started redirecting people to
https://smlfamily.github.io/Basis/index.html

The github page certainly looks like plausible documentation.

Maybe the home page Basis Library link should point there.


Submitted via web form by Alan H. Martin <AMartin.MA.UltraNet@RCN.Com>
",0,0,0,"None","Other","Other","None","Cosmetic","Windows 10 Pro 21H1 (well, you asked)","n/a; access date: 11-Apr'22","","","(i) The connection has timed out

The server at sml-family.org is taking too long to respond.

• The site could be temporarily unavailable or too busy. Try
  again in a few moments.

• If you are unable to load any pages, check your computer’s
  network connection.

• If your computer or network is protected by a firewall or
  proxy, make sure that Firefox is permitted to access the Web.
","Try browsing to:

http://sml-family.org/Basis/index.html"," *** 2022-04-12 13:27 --- David MacQueen --- This was caused by use of the domain name sml-family.org instead of smlfamily.org in several files (index.html, links.html, sml97.html, smlnj.html, new.html) in the smlnj.org web site sources.  These links have been corrected."
305,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-05-02 13:10","2022-05-20 04:28","2022-05-20 04:28","Unable to do real number calculations","Whenever I make a val binding to a real value, Illegal instruction
is thrown, then coredumps.

Additional comments:
#################################
The following is part of lscpu command, may be relevant for floating point operations.
#################################
Architecture:           x86_64
  CPU op-mode(s):       32-bit, 64-bit
  Address sizes:        36 bits physical, 48 bits virtual
  Byte Order:           Little Endian
CPU(s):                 2
  On-line CPU(s) list:  0,1
Vendor ID:              GenuineIntel
  Model name:           Intel(R) Pentium(R) CPU        P6100
                          @ 2.00GHz
    CPU family:         6
    Model:              37
    Thread(s) per core: 1
    Core(s) per socket: 2
    Socket(s):          1
    Stepping:           5
    CPU(s) scaling MHz: 55%
    CPU max MHz:        1999.0000
    CPU min MHz:        933.0000
    BogoMIPS:           3991.24
    Flags:              fpu vme de pse tsc msr pae mce cx8 a
                        pic sep mtrr pge mca cmov pat pse36
                        clflush dts acpi mmx fxsr sse sse2 h
                        t tm pbe syscall nx rdtscp lm consta
                        nt_tsc arch_perfmon pebs bts rep_goo
                        d nopl xtopology nonstop_tsc cpuid a
                        perfmperf pni dtes64 monitor ds_cpl
                        est tm2 ssse3 cx16 xtpr pdcm pcid po
                        pcnt lahf_lm pti dtherm arat

##########################
I'm running arch linux, btw.


Submitted via web form by Karim  <kariem.taha2.7@gmail.com>
",0,0,0,"x86","Linux","Compiler","Works For Me","Critical","5.17.3-arch1-1","110.99.2","reals","","open the repl, using smlnj command, enter any val binding with the type ""real""","val real_val:real=15.5;"," *** 2022-05-20 04:28 --- John Reppy --- I was unable to reproduce this problem.  The issue may be related to the fact that the reporter is using a processor that was released in 2010.  It is also unclear if the problem is in 32-bit or 64-bit mode (I only tested 64-bit mode)."
306,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-05-10 05:59","2022-05-10 10:39","2022-05-10 10:39","Word8VectorSlice: mapping a subslice produces wrong result or crashes SML/NJ","There are some inputs for which using `Word8VectorSlice.map` on the result of
`Word8VectorSlice.subslice` would either produce an incorrect result, or would
cause SML/NJ to crash with ""Fatal error -- bad object tag 28"".

I have attached source code that creates a Word8VectorSlice, then creates a
subslice of it using Word8VectorSlice.subslice, then maps the subslice using
Word8VectorSlice.map, followed by printing the results of the map operation.

Run the code using `sml < the-program.sml`. The ""Fatal error"" only occurs
occasionally. You may observe the fatal error by running the program repeatedly
using this shell snippet:

    while :; do sml < the-program.sml; [ $? -ne 0 ] && break; done

",0,0,0,"All","All","Basis Library","Fixed","Major","","110.99.2","","","This is the result that SML/NJ may produce:

    father length: 6
    CHAR 0: f
    CHAR 1: a
    CHAR 2: t
    CHAR 3: h
    CHAR 4: e
    CHAR 5: r
    mappedFather length: 6
    CHAR 0: \^@
    CHAR 1: \^@
    CHAR 2: \^@
    CHAR 3: f
    CHAR 4: a
    CHAR 5: t


This is supposed to be the correct result:

    father length: 6
    CHAR 0: f
    CHAR 1: a
    CHAR 2: t
    CHAR 3: h
    CHAR 4: e
    CHAR 5: r
    mappedFather length: 6
    CHAR 0: f
    CHAR 1: a
    CHAR 2: t
    CHAR 3: h
    CHAR 4: e
    CHAR 5: r","(* This is supposed to behave like an identity function for Word8VectorSlice.
 * Word8VectorSlice.slice -> Word8VectorSlice.slice *)
fun uselessMap slice =
  Word8VectorSlice.full (Word8VectorSlice.map (fn word => word) slice)

fun printWord8VectorSlice slice =
  Word8VectorSlice.appi
    (fn (index, word) => (
      print (""CHAR "" ^ Int.toString index ^ "": "");
      print (Char.toString (Char.chr (Word8.toInt word)));
      print ""\n""))
    slice

fun charsToWord8List charList =
  List.map (fn c => Word8.fromInt (Char.ord c)) charList

fun main () =
  let
    val vec = Word8Vector.fromList (
                charsToWord8List [#""m"", #""y"", #"" "", #""f"", #""a"", #""t"", #""h"", #""e"", #""r""])
    val slice = Word8VectorSlice.full vec  (* Word8Vector.vector -> Word8VectorSlice.slice *)
    val father = Word8VectorSlice.subslice (slice, 3, NONE)  (* Exclude ""my "" *)
    val mappedFather = uselessMap father
  in
    print (""father length: "" ^ Int.toString (Word8VectorSlice.length father) ^ ""\n"");
    printWord8VectorSlice father;
    (* Mapped father *)
    print (""mappedFather length: "" ^ Int.toString (Word8VectorSlice.length mappedFather) ^ ""\n"");
    printWord8VectorSlice mappedFather;
    ()
  end

val () = main ()
"," *** 2022-05-10 10:39 --- John Reppy --- Stupid indexing bug in Word8Slice.map code.  Does not appear to affect any of the other vector-slice modules.  Fixed for 110.99.3 and 2022.1."
307,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-05-13 19:32","2022-05-31 11:18","2022-05-31 11:18","SExpParser.parseFile should return empty list on empty file","When `SExpParser.parseFile` parses an empty file, it will fail with:

uncaught exception Fail [Fail: error [empty:1.1]: parsing value, found '<eof>']

This is somewhat unexpected. An empty file has no s-expressions, so
`SExpParser.parseFile` should be returning an empty list instead. Returning an
empty list also has the advantage of making it possible to distinguish between
parsing errors and empty files.",0,0,0,"All","Generic Unix","SML/NJ Library","Accepted As Bug","Feature","","110.99.2","","","",""," *** 2022-05-31 11:18 --- John Reppy --- Fixed for 110.99.3 and 2022.1"
308,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-05-13 19:38","2022-06-30 08:36","2022-06-30 08:36","Add function for converting HTML4.html to string","It seems that there is no function in the HTML4 library that has the signature
HTML4.html -> string. Could such a function be added to the HTML4 library?
If not, is there any way to convert a HTML4.html value into a string?",0,0,0,"None","Generic Unix","SML/NJ Library","Won't Fix","Feature","","110.99.2","","","",""," *** 2022-06-30 08:36 --- John Reppy --- It is straightforward to generate a string from the existing API.  Using a CharBuffer, the following code does so: ~  ~   fun toString html = let ~         val buf = CharBuffer.new 1024 ~         in ~           HTML4Print.prHTML { ~               putc = fn c => CharBuffer.add1 (buf, c), ~               puts = fn s => CharBuffer.addVec (buf, s) ~             } html; ~           CharBuffer.contents buf ~         end; ~  ~ I've added this code to the header comment for the HTML4Print module and will include it in the documentation (when we get to it)."
309,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-05-17 01:03","2022-05-31 09:28","2022-05-31 09:28","SExp: parsing the output of the printer produces a different SExp","""SExpParser.parse"" from the SML/NJ library does not produce the same
s-expression that was written using ""SExpPrinter.print"" when strings
containing multibyte characters are involved. How to reproduce:


(* 1. Print `str`. *)
val str = ""∞"";  (* Infinity character. *)
print str;

(* 2. Write `str` to a file as an s-expression. *)
val out = TextIO.openOut ""infinity.txt"";
SExpPrinter.print (out, SExp.STRING str);
TextIO.closeOut out;

(* 3. Attempt to read back `str` from the file. *)
case SExpParser.parseFile ""infinity.txt"" of
  [SExp.STRING str'] => print str'
| _ => ();


In step 1, ""∞"" is displayed, but in step 3, ""\226\136\158"" is displayed.

This problem occurs because ""SExpPrinter.print"" escapes all strings
using ""String.toString"" but ""SExpParser.parseFile"" does not unescape
strings using ""String.fromString"".",0,0,0,"All","Generic Unix","SML/NJ Library","Fixed","Major","","","","","",""," *** 2022-05-31 09:28 --- John Reppy --- Fixed for 110.99.3 and 2022.1.  The SExp library now uses Scheme syntax for string values."
310,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-05-19 04:48","2022-05-20 09:30","2022-05-20 09:30","Error when REPL tries to print value of type Posix.FileSys.ST.stat","When using SML/NJ interactively, the SML/NJ REPL shows an error whenever there is a result of type Posix.FileSys.ST.stat.

For example, when evaluating  Posix.FileSys.stat ""/etc/passwd"";


Standard ML of New Jersey (64-bit) v110.99.2 [built: Thu Jan 23 12:34:56 2022]
- Posix.FileSys.stat ""/etc/passwd"";
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val it =
  ST
    {atime=TIME {usec=1652879341508064},ctime=TIME {usec=1647945818121959},

unexpected exception (bug?) in SML/NJ: Representation [Representation]
  raised at: Basis/Implementation/Unsafe/target64-object.sml:111.19-111.33
             ../compiler/TopLevel/print/ppobj.sml:85.45
             ../compiler/TopLevel/print/ppobj.sml:373.24
             ../compiler/TopLevel/print/ppobj.sml:373.24
             ../compiler/TopLevel/print/ppobj.sml:373.24
             ../compiler/TopLevel/interact/evalloop.sml:45.54
-",0,0,0,"None","Linux","Basis Library","Fixed","Major","","110.99.2","","","",""," *** 2022-05-20 09:30 --- John Reppy --- Fixed for 2022.1 and 110.99.3.  The fix is was to the `isUbxTy` function in the `ppobj.sml` file. *** 2022-05-20 09:20 --- John Reppy --- The issue seems to be with the `dev` field of the `stat` record. ~  ~ - Posix.FileSys.ST.dev(Posix.FileSys.stat ""/etc/passwd""); ~  ~ unexpected exception (bug?) in SML/NJ: Representation [Representation] ~   raised at: Basis/Implementation/Unsafe/target64-object.sml:111.19-111.33 ~              ../compiler/TopLevel/print/ppobj.sml:85.45 ~              ../compiler/TopLevel/print/ppobj.sml:373.24 ~              ../compiler/TopLevel/interact/evalloop.sml:45.54 ~  ~ This field is represented as a singleton data constructor that wraps a Word64.word value."
311,1,"Open",3,142,"Bug Submitter",103,"John Reppy","2022-05-19 18:50","","2022-05-31 09:51","Unable to interrupt execution by using SIGINT","In smlnj v110.99.2, I am not able to interrupt the execution of an expression by sending SIGINT to smlnj.
For example, if I run an infinite loop `while true do ();`, I am not able to stop it by pressing CTRL-C.
Older versions of smlnj do not seem to have this problem. In smlnj v110.79, I am able to stop the infinite loop using CTRL-C:


Standard ML of New Jersey v110.79 [built: Sun Oct 27 08:29:41 2019]
- while true do ();

Interrupt
-
",0,0,0,"None","Generic Unix","Compiler","Accepted As Bug","Major","","110.99.2","","","",""," *** 2022-05-20 04:20 --- John Reppy --- I was unable to reproduce this bug (macOS/arm64)  Since the report does not provide any contact info and does not specify the version of Unix/architecture, I'm not able to do further testing or ask for additional information."
312,2,"Closed",3,142,"Bug Submitter",105,"Matthias Blume","2022-05-20 10:57","2022-06-05 13:02","2022-06-05 13:02","CM.make is unable to handle filenames that contain a backslash","CM.make somehow treats a backslash as a forward slash. This means that CM.make is unable to read any files that have a backslash in their name. For example:

- CM.make ""\\.cm"";
[scanning /.cm]

uncaught exception Io [Io: openIn failed on ""/.cm"", No such file or directory]
  raised at: Basis/Implementation/IO/text-io-fn.sml:792.25-792.71
             ../cm/util/safeio.sml:30.11
             ../cm/parse/parse.sml:502.47
",0,0,0,"All","Generic Unix","CM","Fixed","Cosmetic","","110.99.2","","","",""," *** 2022-06-05 13:02 --- John Reppy --- Fixed for 110.99.3 and 2022.2. *** 2022-05-31 10:49 --- John Reppy --- The problem is that CM is interpreting the backslash as a path separator (which it is on Windows).  The interpretation of the argument probably should follow the system's conventions. ~ Note that there is a workaround, which is creating a wrapper CM file that uses a quoted path ""\\.cm""."
313,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-06-02 14:21","2022-06-27 17:59","2022-06-27 17:59","Real.fromLargeInt crashes on large integer input","`Real.fromLargeInt (IntInf.pow (2, 4000))` causes the runtime to exit with the following message:

/path/to/sml: Fatal error -- bogus overflow fault: pc = 0x556375360f1b, sig = 11
Additional comments:
This is not an issue with `IntInf.pow`, that part runs fine.
It also causes the error immediately, so I don't think it is a stack overflow issue.

Submitted via web form by Skye Soss <ssoss@uchicago.edu>
",0,0,0,"x86","Linux","Basis Library","Fixed","Minor","WSL","v110.99.1","reals, IntInf","","Standard ML of New Jersey (64-bit) v110.99.1 [built: Mon Sep 27 12:56:08 2021]
- Real.fromLargeInt (IntInf.pow (2, 4000));
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
/path/to/sml: Fatal error -- bogus overflow fault: pc = 0x5647ce573f1b, sig = 11","Real.fromLargeInt (IntInf.pow (2, 4000))"," *** 2022-06-27 17:59 --- John Reppy --- Fixed for 110.99.3 and 2022.1.  The assembly code for the AMD64 now returns infinity when the scaled exponent exceeds the maximum allowed."
314,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-06-02 14:29","2022-06-06 10:17","2022-06-06 10:17","`IEEEReal.setRoundingMode` is a no-op on Linux","`IEEEReal.setRoundingMode` is a no-op and does not change the rounding mode.
Additional comments:
This also causes issues the functions:
`Real.realTrunc`, `Real.realCeil`, `Real.realFloor`, `Real.realRound`
since those functions are implemented in terms of `IEEEReal.setRoundingMode`.
Note that the default rounding mode is implementation-defined, so one and only one of these functions work properly.

Additionally, if `IEEEReal.setRoundingMode` is unsupported, an error should be thrown instead of silently doing nothing,
similar to other SML/NJ basis functions which are unimplemented (such as `Real.fromDecimal`).

Fix:
I was unable to understand how the runtime works,
but I think the C runtime may need to use the pragma
`#pragma STDC FENV_ACCESS ON` (http://www.cplusplus.com/reference/cfenv/FENV_ACCESS/)

One temporary fix for `Real.realFloor` would be to implement `realFloor f` as `#whole (Real.split f)`.

Submitted via web form by Skye Soss <ssoss@uchicago.edu>
",0,0,0,"x86","Linux","Basis Library","Fixed","Minor","WSL","v110.99.1","reals, IEEEReal","","- IEEEReal.setRoundingMode IEEEReal.TO_ZERO;
val it = () : unit
- IEEEReal.getRoundingMode ();
val it = TO_NEAREST : IEEEReal.rounding_mode","- IEEEReal.setRoundingMode IEEEReal.TO_ZERO;
val it = () : unit
- IEEEReal.getRoundingMode ();
val it = TO_NEAREST : IEEEReal.rounding_mode"," *** 2022-06-06 10:17 --- John Reppy --- The problem turns out to be that Linux did not support the ""fenv.h"" API, so it was supposed to use assembly code.  Modern Linux does have that include file, so we can just use the library functions. ~ Fixed for 110.99.3 and 2022.1. *** 2022-06-06 09:37 --- John Reppy --- This problem appears to be specific to Linux (e.g., things work correctly on macOS).  It may be because compilers are allowed to ignore the floating-point environment unless the FENV_ACCESS pragma is on."
315,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-06-29 10:50","2022-06-29 12:52","2022-06-29 12:52","IEEEReal.float_class does not match the Basis Library","The Basis Library defines

datatype float_class
  = NAN
  | INF
  | ZERO
  | NORMAL
  | SUBNORMAL

in https://smlfamily.github.io/Basis/ieee-float.html

In SML/NJ, the constructor NAN takes an argument:

  datatype nan_mode = QUIET | SIGNALLING
  datatype float_class = INF | NAN of nan_mode | NORMAL | SUBNORMAL | ZERO

Due to the difference with the NAN constructor it is not possible to write portable SML code.
Additional comments:
When using a implementation of REAL, the function class can be avoided by using functions isFinite, isNan, isNormal and comparison with zero instead.

Submitted via web form by Phil Clayton <phil.clayton@lineone.net>
",0,0,0,"All","All","Basis Library","Fixed","Minor","","110.99","IEEEReal float_class NAN","","",""," *** 2022-06-29 12:52 --- John Reppy --- This may be a hold over from an earlier design of the Basis Library that was never updated.  I have fixed it for 110.99.3 and 2022.1."
316,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-07-05 08:02","2022-07-05 10:12","2022-07-05 10:12","Real.fromManExp does not return expected value if man = 0.0","For any integer `exp` the expression

  Real.fromManExp {man = 0.0, exp = exp}

does not return the expected value.  The Basis Library states ""If man is +-0, the result is +-0.""
https://smlfamily.github.io/Basis/real.html#SIG:REAL.fromManExp:VAL

With 110.85, the expression raises the exception Overflow.

With 110.99, evaluation of the expression does not terminate.
Submitted via web form by Phil Clayton <phil.clayton@veonix.com>
",0,0,0,"All","All","Basis Library","Fixed","Minor","","110.99","reals","","","Evaluate the expression

  Real.fromManExp {man = 0.0, exp = 0};

with versions 110.99 and 110.85."," *** 2022-07-05 10:12 --- John Reppy --- Fixed for 110.99.3 and 2022.1"
317,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-07-05 08:17","2022-07-05 09:37","2022-07-05 09:37","Conversion from string to real does not accept non-finite values","In the Basis Library, in signature REAL, the description of the functions `scan` and `fromString` states:

> It also accepts the following string representations of non-finite values:
> [+~-]?(inf | infinity | nan)
> where the alphabetic characters are case-insensitive.

However these functions both return `NONE` for such non-finite values.
Additional comments:
Copied from https://github.com/polyml/polyml/issues/181

Submitted via web form by Phil Clayton <phil.clayton@veonix.com>
",0,0,0,"None","Generic Unix","Basis Library","Fixed","Minor","","110.99","reals","","","The following expressions should match SOME _:

  StringCvt.scanString Real.scan ""nan"";
  Real.fromString ""-inf"";
"," *** 2022-07-05 09:37 --- John Reppy --- Fixed for 110.99.3 and 2022.1"
318,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-07-06 03:55","2022-07-06 08:25","2022-07-06 08:25","IEEEReal.decimal_approx does not match the Basis Library","In the Basis Library, the type IEEEReal.decimal_approx has a field `class`.
https://smlfamily.github.io/Basis/ieee-float.html#SIG:IEEE_REAL.decimal_approx:TY
but in SML/NJ the field is called `kind` instead of `class`:

type decimal_approx =
    {digits:int list, exp:int, kind:IEEEReal.float_class, sign:bool}

Consequently code using this field is not portable.

Submitted via web form by Phil Clayton <phil.clayton@veonix.com>
",0,0,0,"All","All","Basis Library","Fixed","Minor","","110.99","reals","","","#class (valOf (IEEEReal.fromString ""1.0""));

fails but should evaluate to `NORMAL`."," *** 2022-07-06 08:25 --- John Reppy --- Fixed for 110.99.3 and 2022.1"
319,2,"Closed",3,142,"Bug Submitter",103,"John Reppy","2022-07-06 07:06","2022-07-06 08:26","2022-07-06 08:26","Type of Real.fromDecimal does not match the Basis Library","SML/NJ declares:
val fromDecimal : IEEEReal.decimal_approx -> real

The Basis Library declares:
val fromDecimal : IEEEReal.decimal_approx -> real option
https://smlfamily.github.io/Basis/real.html#SIG:REAL.toDecimal:VAL

Although Real.fromDecimal is not implemented, it would be useful if its type matched the Basis Library to aid portability of code.  (A user may chose to provide their own implementation which would be easier if the signature REAL didn't need to be redeclared.)
Submitted via web form by Phil Clayton <phil.clayton@veonix.com>
",0,0,0,"All","All","Basis Library","Fixed","Minor","","110.99","reals","","","open Real;
"," *** 2022-07-06 08:26 --- John Reppy --- Fixed for 110.99.3 and 2022.1"
